,pat,entity A,entity B,apis
0,convert (.*) to (.*),"['a', 'string']","['an', 'int']","['java.util.Optional.ofNullable', 'java.lang.Integer.parseInt']"
1,convert (.*) to (.*),"['from', 'int']",['string'],"['java.lang.Integer.toString', 'java.lang.String.valueOf']"
2,convert (.*) to (.*),['integer'],['string'],"['java.lang.Integer.toString', 'java.lang.String.valueOf']"
3,convert (.*) to (.*),['string'],['long'],['java.lang.Long.parseLong']
4,convert (.*) to (.*),"['string', 'object']","['boolean', 'object']","['java.lang.Boolean.parseBoolean', 'java.lang.Boolean.valueOf']"
5,convert (.*) to (.*),"['a', 'collection']",['list'],['java.util.Collections.sort']
6,convert (.*) to (.*),"['list', 'string']","['a', 'string']","['java.util.Arrays.asList', 'java.lang.String.join']"
7,convert (.*) to (.*),"['object', 'array']","['string', 'array']",['java.util.Arrays.copyOf']
8,convert (.*) to (.*),"['string', 'array']",['arraylist'],['java.util.Arrays.asList']
9,convert (.*) to (.*),['string'],"['calendar', 'object']",['java.util.Calendar.getInstance']
10,convert (.*) to (.*),['number'],['words'],"['java.lang.Long.toString', 'java.lang.Integer.parseInt']"
11,convert (.*) to (.*),['currenttimemillis'],"['a', 'date']",['java.util.Calendar.getInstance']
12,convert (.*) to (.*),['integer'],['int'],['java.lang.Integer.intValue']
13,convert (.*) to (.*),['image'],"['byte', 'array']",['javax.imageio.ImageIO.read']
14,convert (.*) to (.*),['string'],['long'],"['java.lang.Long.valueOf', 'java.lang.Long.parseLong']"
15,convert (.*) to (.*),"['an', 'iterator']","['a', 'stream']","['java.util.Arrays.asList', 'java.util.Spliterators.spliteratorUnknownSize', 'java.util.stream.StreamSupport.stream']"
16,convert (.*) to (.*),['string'],['float'],['java.lang.Float.valueOf']
17,convert (.*) to (.*),"['hex', 'string']",['int'],['java.lang.Long.parseLong']
18,convert (.*) to (.*),['integer'],"['hex', 'integer']",['java.lang.Integer.valueOf']
19,convert (.*) to (.*),"['base', 'string']",['image'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
20,convert (.*) to (.*),"['java', 'string']","['sql', 'timestamp']",['java.sql.Timestamp.valueOf']
21,convert (.*) to (.*),"['a', 'date']",['milliseconds'],"['java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
22,convert (.*) to (.*),['inputstream'],['fileinputstream'],"['java.nio.file.Files.copy', 'java.nio.file.Files.createTempFile']"
23,convert (.*) to (.*),"['a', 'number']","['a', 'letter']",['java.lang.String.valueOf']
24,convert (.*) to (.*),['zoneddatetime'],['date'],['java.util.Date.from']
25,convert (.*) to (.*),"['date', 'format']",['milliseconds'],['java.util.Date.getTime']
26,convert (.*) to (.*),"['java', 'date']","['utc', 'string']","['java.util.TimeZone.getTimeZone', 'java.util.Calendar.getInstance', 'java.util.Date.toString']"
27,convert (.*) to (.*),"['epoch', 'time']",['date'],['java.util.TimeZone.getTimeZone']
28,convert (.*) to (.*),['biginteger'],['string'],"['java.lang.String.getBytes', 'java.math.BigInteger.toByteArray']"
29,convert (.*) to (.*),['inputstream'],"['virtual', 'file']",['java.io.File.createTempFile']
30,convert (.*) to (.*),"['a', 'localdate']","['an', 'instant']","['java.time.ZoneId.systemDefault', 'java.time.LocalDate.now']"
31,convert (.*) to (.*),['date'],['xmlgregoriancalendar'],['javax.xml.datatype.DatatypeFactory.newInstance']
32,convert (.*) to (.*),"['from', 'radians']",['degrees'],['java.lang.Math.toDegrees']
33,convert (.*) to (.*),"['byte', 'array']",['hexstring'],['java.lang.String.format']
34,convert (.*) to (.*),['int'],['byte'],['java.nio.ByteBuffer.allocate']
35,convert (.*) to (.*),"['millisecond', 'string']",['date'],"['java.lang.Long.parseLong', 'java.lang.Double.parseDouble', 'java.util.Calendar.getInstance']"
36,convert (.*) to (.*),['char'],['string'],['java.lang.String.valueOf']
37,convert (.*) to (.*),"['current', 'datetime']",['long'],['java.lang.System.currentTimeMillis']
38,convert (.*) to (.*),['string'],"['integer', 'jsp']",['java.lang.Integer.parseInt']
39,convert (.*) to (.*),"['a', 'string']","['a', 'soapmessage']",['javax.xml.soap.MessageFactory.newInstance']
40,convert (.*) to (.*),['string'],['keyevents'],['java.lang.String.valueOf']
41,convert (.*) to (.*),['vector'],"['string', 'array']",['java.util.Vector.toArray']
42,convert (.*) to (.*),"['a', 'string']","['double', 'java']",['java.text.NumberFormat.getInstance']
43,convert (.*) to (.*),['string'],"['xml', 'file']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
44,convert (.*) to (.*),['it'],['char'],['java.lang.Integer.parseInt']
45,convert (.*) to (.*),"['textfield', 'value']",['int'],['java.lang.Double.parseDouble']
46,convert (.*) to (.*),"['lat', 'lon']",['utm'],['java.util.Collections.singletonMap']
47,convert (.*) to (.*),"['uuid', 'value']",['string'],['java.util.UUID.randomUUID']
48,convert (.*) to (.*),['byte'],['binary'],"['java.lang.Integer.toBinaryString', 'java.lang.Integer.toHexString', 'java.lang.Integer.parseInt']"
49,convert (.*) to (.*),"['text', 'content']",['image'],['javax.imageio.ImageIO.write']
50,convert (.*) to (.*),"['ascii', 'byte']",['string'],['java.util.logging.Logger.getLogger']
51,convert (.*) to (.*),"['hex', 'string']","['binary', 'string']","['java.lang.Integer.toBinaryString', 'java.lang.Integer.parseInt']"
52,convert (.*) to (.*),"['plain', 'text']","['html', 'text']",['java.util.regex.Pattern.compile']
53,convert (.*) to (.*),"['rgb', 'values']","['color', 'name']",['java.lang.Math.abs']
54,convert (.*) to (.*),"['rgb', 'value']",['hsv'],['java.awt.Color.RGBtoHSB']
55,convert (.*) to (.*),['integer'],['bigdecimal'],"['java.math.BigDecimal.valueOf', 'java.math.BigInteger.valueOf']"
56,convert (.*) to (.*),['ascii'],['int'],['java.lang.Character.getNumericValue']
57,convert (.*) to (.*),"['java', 'string']","['byte', 'array']",['java.lang.Integer.toString']
58,convert (.*) to (.*),"['a', 'string']","['a', 'gregoriancalendar']",['java.util.Calendar.getInstance']
59,convert (.*) to (.*),"['string', 'type']","['class', 'type']",['java.lang.Class.forName']
60,convert (.*) to (.*),['it'],['lowercase'],['java.util.Arrays.toString']
61,convert (.*) to (.*),"['xml', 'string']","['java', 'object']",['javax.xml.bind.JAXBContext.newInstance']
62,convert (.*) to (.*),"['an', 'icon']","['an', 'image']",['java.lang.Class.forName']
63,convert (.*) to (.*),"['from', 'string']",['publickey'],['java.security.KeyFactory.getInstance']
64,convert (.*) to (.*),['int'],['inetaddress'],"['java.net.InetAddress.getByAddress', 'java.math.BigInteger.valueOf']"
65,convert (.*) to (.*),"['binary', 'string']","['byte', 'array']","['java.nio.ByteBuffer.allocate', 'java.lang.Short.parseShort']"
66,convert (.*) to (.*),"['xml', 'file']",['csv'],['org.xml.sax.helpers.XMLReaderFactory.createXMLReader']
67,convert (.*) to (.*),['offsetdatetime'],"['utc', 'timestamp']",['java.sql.Timestamp.valueOf']
68,convert (.*) to (.*),['string'],['integer'],['java.lang.Integer.parseInt']
69,convert (.*) to (.*),['decimal'],['fractions'],['java.lang.String.valueOf']
70,convert (.*) to (.*),['integer'],"['int', 'array']",['java.util.Arrays.stream']
71,convert (.*) to (.*),"['a', 'char']","['a', 'charsequence']",['java.nio.CharBuffer.wrap']
72,convert (.*) to (.*),"['md', 'array']","['string', 'java']","['java.util.Base64.getEncoder', 'java.security.MessageDigest.getInstance']"
73,convert (.*) to (.*),['string'],['offsetdatetime'],['java.time.LocalDate.parse']
74,convert (.*) to (.*),['int'],"['double', 'java']",['java.lang.Math.round']
75,convert (.*) to (.*),"['a', 'tif']",['png'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
76,convert (.*) to (.*),"['input', 'char']","['uppercase', 'automatically']",['java.lang.Character.toUpperCase']
77,convert (.*) to (.*),"['any', 'integer']",['digits'],"['java.lang.Integer.compare', 'java.lang.Integer.valueOf', 'java.lang.String.format']"
78,convert (.*) to (.*),"['negative', 'image']",['positive'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
79,convert (.*) to (.*),"['short', 'array']","['byte', 'array']",['java.nio.ByteBuffer.allocate']
80,convert (.*) to (.*),"['xml', 'string']",['arraylist'],"['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
81,convert (.*) to (.*),"['java', 'object']",['xml'],['javax.xml.bind.JAXBContext.newInstance']
82,convert (.*) to (.*),"['utc', 'timestamp']","['local', 'datetime']","['java.util.TimeZone.getDefault', 'java.util.Calendar.getInstance']"
83,convert (.*) to (.*),"['rgb', 'color']","['cie', 'lab']","['java.awt.color.ColorSpace.getInstance', 'java.lang.Math.cbrt', 'java.lang.String.valueOf']"
84,convert (.*) to (.*),"['duration', 'unit']",['milliseconds'],['java.time.Duration.of']
85,convert (.*) to (.*),['bytearray'],"['uuid', 'java']",['java.nio.ByteBuffer.wrap']
86,convert (.*) to (.*),"['hex', 'string']",['float'],"['java.lang.Float.intBitsToFloat', 'java.lang.Long.parseLong']"
87,convert (.*) to (.*),"['the', 'object']",['string'],"['java.util.Arrays.asList', 'java.util.Arrays.copyOf']"
88,convert (.*) to (.*),"['datepicker', 'value']",['string'],['java.sql.Date.valueOf']
89,convert (.*) to (.*),"['localtime', 'java']",['date'],['java.util.Date.from']
90,convert (.*) to (.*),"['unicode', 'string']",['ascii'],"['java.text.Normalizer.normalize', 'java.util.regex.Pattern.quote']"
91,convert (.*) to (.*),['zoneddatetime'],['millisecond'],"['java.time.LocalDateTime.now', 'java.time.Instant.now', 'java.time.Instant.ofEpochMilli']"
92,convert (.*) to (.*),"['binary', 'string']","['hex', 'string']",['java.lang.String.format']
93,convert (.*) to (.*),['string'],['double'],['java.lang.Double.parseDouble']
94,convert (.*) to (.*),['time'],['long'],['java.sql.Time.valueOf']
95,convert (.*) to (.*),['float'],['integer'],['java.lang.Math.round']
96,convert (.*) to (.*),"['an', 'object']","['an', 'int']",['java.lang.Integer.parseInt']
97,convert (.*) to (.*),"['scala', 'option']","['java', 'optional']",['java.util.Optional.ofNullable']
98,convert (.*) to (.*),"['from', 'string']",['string'],"['java.util.Arrays.copyOfRange', 'java.util.Collections.shuffle']"
99,convert (.*) to (.*),['string'],"['packed', 'decimal']","['java.lang.Long.toString', 'java.lang.Byte.valueOf']"
100,convert (.*) to (.*),"['a', 'list']","['optional', 'list']",['java.util.Optional.of']
101,convert (.*) to (.*),['imageoutputstream'],['byte'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.createImageOutputStream']"
102,convert (.*) to (.*),['byte'],"['buffer', 'type']",['java.nio.ByteBuffer.wrap']
103,convert (.*) to (.*),"['from', 'boolean']",['boolean'],['java.lang.Boolean.valueOf']
104,convert (.*) to (.*),"['alternate', 'char']",['uppercase'],"['java.lang.Character.toLowerCase', 'java.lang.Character.toUpperCase']"
105,convert (.*) to (.*),['string'],['xml'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
106,convert (.*) to (.*),['json'],"['object', 'list']",['java.lang.String.format']
107,convert (.*) to (.*),['string'],['array'],['java.lang.Integer.parseInt']
108,convert (.*) to (.*),"['json', 'date']","['java', 'date']",['java.lang.Integer.parseInt']
109,convert (.*) to (.*),['float'],['bits'],['java.lang.Double.doubleToLongBits']
110,convert (.*) to (.*),['string'],['integer'],['java.lang.Integer.parseInt']
111,convert (.*) to (.*),"['a', 'instant']","['a', 'localtime']","['java.time.LocalTime.from', 'java.time.Instant.now']"
112,convert (.*) to (.*),"['hexadecimal', 'string']","['ip', 'address']",['java.net.InetAddress.getByAddress']
113,convert (.*) to (.*),['simpledateformat'],['datetimeformatter'],"['java.time.LocalDate.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
114,convert (.*) to (.*),['string'],"['date', 'object']",['java.util.Calendar.getInstance']
115,convert (.*) to (.*),"['from', 'void']",['int'],['java.util.Arrays.sort']
116,convert (.*) to (.*),['it'],"['byte', 'array']","['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
117,convert (.*) to (.*),"['a', 'string']",['object'],['java.lang.Class.forName']
118,convert (.*) to (.*),"['from', 'zoneddatetime']","['joda', 'datetime']","['java.time.ZoneId.of', 'java.time.ZonedDateTime.of']"
119,convert (.*) to (.*),['it'],['string'],"['java.lang.System.currentTimeMillis', 'java.lang.String.format']"
120,convert (.*) to (.*),"['a', 'string']","['generic', 'type']",['java.lang.Integer.parseInt']
121,convert (.*) to (.*),"['from', 'void']","['arraylist', 'string']",['java.util.Collections.shuffle']
122,convert (.*) to (.*),"['long', 'value']","['char', 'sequence']",['java.nio.ByteBuffer.allocate']
123,convert (.*) to (.*),['rgb'],['bgr'],['java.lang.Integer.decode']
124,convert (.*) to (.*),['windows'],['utf'],['java.nio.charset.Charset.forName']
125,convert (.*) to (.*),"['list', 'string']","['list', 'integer']",['java.lang.Integer.parseInt']
126,convert (.*) to (.*),['dates'],['utc'],['java.util.TimeZone.setDefault']
127,convert (.*) to (.*),['string'],['integer'],['java.lang.Integer.parseInt']
128,convert (.*) to (.*),['localdate'],['offsetdatetime'],['java.time.OffsetDateTime.of']
129,convert (.*) to (.*),['inputstream'],['int'],['java.lang.Integer.parseInt']
130,convert (.*) to (.*),"['string', 'month']","['integer', 'java']",['java.util.Calendar.getInstance']
131,convert (.*) to (.*),['string'],['int'],['java.lang.Integer.parseInt']
132,convert (.*) to (.*),['binary'],['text'],['java.lang.Integer.parseInt']
133,convert (.*) to (.*),['ints'],['booleans'],['java.lang.Boolean.parseBoolean']
134,convert (.*) to (.*),"['timestamp', 'string']","['epoch', 'time']","['java.time.LocalDateTime.parse', 'java.time.ZoneId.getAvailableZoneIds', 'java.time.LocalDateTime.of', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.ZoneId.of', 'java.time.ZoneId.systemDefault']"
135,convert (.*) to (.*),"['a', 'bufferedimage']",['bit'],['javax.imageio.ImageIO.write']
136,convert (.*) to (.*),['hexadecimal'],['string'],['javax.xml.bind.DatatypeConverter.parseHexBinary']
137,convert (.*) to (.*),['arraylist'],['string'],['java.lang.StringBuilder.replace']
138,convert (.*) to (.*),['string'],['long'],"['java.lang.Long.parseLong', 'java.lang.Integer.parseInt']"
139,convert (.*) to (.*),"['dicom', 'file']","['jpg', 'conversion']","['javax.imageio.ImageIO.getImageReadersByFormatName', 'javax.imageio.ImageIO.createImageInputStream']"
140,convert (.*) to (.*),['string'],"['byte', 'array']",['java.lang.String.getBytes']
141,convert (.*) to (.*),"['bigint', 'timestamp']",['date'],"['java.time.Instant.ofEpochMilli', 'java.time.format.DateTimeFormatter.ofPattern', 'java.math.BigInteger.longValue']"
142,convert (.*) to (.*),['string'],"['string', 'array']",['java.util.regex.Pattern.compile']
143,convert (.*) to (.*),['localdatetime'],['date'],['java.util.Date.from']
144,convert (.*) to (.*),['byte'],['string'],"['java.lang.Integer.toString', 'java.math.BigInteger.toString']"
145,convert (.*) to (.*),"['dataurl', 'image']","['image', 'file']","['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write', 'javax.xml.bind.DatatypeConverter.parseBase64Binary']"
146,convert (.*) to (.*),['webelement'],['int'],['java.lang.Integer.parseInt']
147,convert (.*) to (.*),"['byte', 'stream']","['character', 'stream']","['java.nio.charset.Charset.forName', 'java.nio.CharBuffer.allocate']"
148,convert (.*) to (.*),['string'],"['epoch', 'time']",['java.time.LocalDateTime.parse']
149,convert (.*) to (.*),['string'],"['double', 'java']",['java.lang.Double.parseDouble']
150,convert (.*) to (.*),['biginteger'],"['shorter', 'string']",['java.math.BigInteger.toString']
151,convert (.*) to (.*),"['simpledateformat', 'year']",['integer'],"['java.util.Calendar.getInstance', 'java.lang.Integer.parseInt']"
152,convert (.*) to (.*),['ist'],['pst'],['java.util.TimeZone.getTimeZone']
153,convert (.*) to (.*),"['arbitrary', 'string']","['java', 'identifier']",['java.util.Arrays.toString']
154,convert (.*) to (.*),['string'],['localdate'],['java.time.LocalDate.parse']
155,convert (.*) to (.*),"['a', 'uuid']",['base'],['java.nio.ByteBuffer.wrap']
156,convert (.*) to (.*),"['an', 'optional']","['an', 'optionalint']",['java.util.stream.Stream.of']
157,convert (.*) to (.*),['integer'],['int'],['java.lang.Integer.parseInt']
158,convert (.*) to (.*),"['hhmm', 'string']","['gmt', 'format']",['java.util.Calendar.getInstance']
159,convert (.*) to (.*),['int'],['uint'],"['java.util.Arrays.fill', 'java.lang.Math.pow', 'java.lang.Math.min']"
160,convert (.*) to (.*),"['x', 'y']",['angle'],['java.lang.Math.atan2']
161,convert (.*) to (.*),"['int', 'array']",['int'],['java.lang.Integer.parseInt']
162,convert (.*) to (.*),"['element', 'object']",['int'],['java.lang.Integer.parseInt']
163,convert (.*) to (.*),"['binary', 'number']",['double'],['java.nio.ByteBuffer.wrap']
164,convert (.*) to (.*),['utf'],['utf'],"['java.lang.Character.codePointAt', 'java.lang.Character.charCount', 'java.lang.String.format']"
165,convert (.*) to (.*),['byte'],['bitset'],"['java.util.BitSet.toByteArray', 'java.util.BitSet.length']"
166,convert (.*) to (.*),['byte'],"['aes', 'key']",['javax.crypto.Cipher.getInstance']
167,convert (.*) to (.*),"['vietnamese', 'text']","['normal', 'text']","['java.text.Normalizer.normalize', 'java.util.regex.Pattern.compile']"
168,convert (.*) to (.*),"['hex', 'string']",['base'],"['java.lang.Integer.parseInt', 'java.lang.Byte.parseByte']"
169,convert (.*) to (.*),"['string', 'arraylist']","['integer', 'arraylist']",['java.util.regex.Pattern.compile']
170,convert (.*) to (.*),"['a', 'string']","['timezone', 'android']",['java.util.TimeZone.getTimeZone']
171,convert (.*) to (.*),"['type', 'instant']","['type', 'xmlgregoriancalendar']","['javax.xml.datatype.DatatypeFactory.newInstance', 'java.time.Instant.now']"
172,convert (.*) to (.*),['xml'],"['messageelement', 'java']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
173,convert (.*) to (.*),"['a', 'string']","['jtextfield', 'type']","['java.lang.Class.forName', 'java.util.logging.Logger.getLogger']"
174,convert (.*) to (.*),"['unsigned', 'long']",['string'],"['java.lang.String.valueOf', 'java.math.BigInteger.valueOf']"
175,convert (.*) to (.*),"['a', 'char']","['an', 'int']",['java.lang.Integer.parseInt']
176,convert (.*) to (.*),"['a', 'string']",['float'],['java.text.NumberFormat.getInstance']
177,convert (.*) to (.*),['double'],['biginteger'],['java.math.BigDecimal.valueOf']
178,convert (.*) to (.*),"['a', 'char']","['bytes', 'array']","['java.nio.charset.Charset.forName', 'java.nio.ByteBuffer.wrap']"
179,convert (.*) to (.*),['string'],['hexadecimal'],['java.lang.String.format']
180,convert (.*) to (.*),"['binary', 'string']","['int', 'array']","['java.lang.Integer.parseInt', 'java.lang.Integer.toBinaryString']"
181,convert (.*) to (.*),"['jdom', 'document']",['soapmessage'],['javax.xml.soap.MessageFactory.newInstance']
182,convert (.*) to (.*),['jtree'],['xml'],"['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
183,convert (.*) to (.*),"['accented', 'letters']","['regular', 'char']",['java.text.Normalizer.normalize']
184,convert (.*) to (.*),['jarentry'],['file'],['java.io.File.createTempFile']
185,convert (.*) to (.*),['double'],"['int', 'array']",['java.lang.String.valueOf']
186,convert (.*) to (.*),"['character', 'value']",['hexa'],['java.lang.String.format']
187,convert (.*) to (.*),"['string', 'object']","['arraylist', 'entity']",['java.lang.String.valueOf']
188,convert (.*) to (.*),['string'],"['hex', 'bytes']",['java.lang.Character.digit']
189,convert (.*) to (.*),['array'],['collection'],['java.util.Arrays.asList']
190,convert (.*) to (.*),['date'],"['timestamp', 'utc']",['java.sql.Timestamp.valueOf']
191,convert (.*) to (.*),"['string', 'array']",['arraylist'],['java.util.Arrays.asList']
192,convert (.*) to (.*),"['given', 'time']",['gmt'],['java.util.TimeZone.getTimeZone']
193,convert (.*) to (.*),"['for', 'loop']","['foreach', 'lambda']","['java.util.Arrays.asList', 'java.lang.Double.parseDouble', 'java.util.stream.Stream.of']"
194,convert (.*) to (.*),['pkcs'],['pkcs'],"['java.security.KeyFactory.getInstance', 'java.security.KeyStore.getInstance']"
195,convert (.*) to (.*),['null'],"['enum', 'null']",['java.util.Optional.ofNullable']
196,convert (.*) to (.*),"['french', 'accents']","['percent', 'encoding']",['java.net.URLEncoder.encode']
197,convert (.*) to (.*),['int'],['bytebuffer'],"['java.nio.ByteBuffer.asIntBuffer', 'java.nio.ByteBuffer.allocateDirect', 'java.nio.ByteBuffer.order']"
198,convert (.*) to (.*),"['dollar', 'amount']",['cents'],['java.math.BigDecimal.valueOf']
199,convert (.*) to (.*),"['argb', 'bitmap']","['byte', 'bgr']",['java.nio.ByteBuffer.allocate']
200,convert (.*) to (.*),['double'],['string'],['java.text.NumberFormat.getInstance']
201,convert (.*) to (.*),['rgb'],['hexadecimal'],['java.lang.Integer.toHexString']
202,convert (.*) to (.*),['file'],['string'],['java.util.Arrays.stream']
203,convert (.*) to (.*),"['plain', 'text']","['html', 'hyperlink']",['java.util.regex.Pattern.compile']
204,convert (.*) to (.*),['pst'],['gmt'],['java.util.TimeZone.getTimeZone']
205,convert (.*) to (.*),['imagebytearray'],['bufferedimage'],['javax.imageio.ImageIO.write']
206,convert (.*) to (.*),"['any', 'string']","['color', 'hex']","['java.lang.String.hashCode', 'java.lang.String.format']"
207,convert (.*) to (.*),"['http', 'response']","['xml', 'document']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
208,convert (.*) to (.*),['charbuffer'],['bytebuffer'],"['java.nio.ByteBuffer.allocate', 'java.nio.charset.Charset.encode', 'java.nio.CharBuffer.wrap']"
209,convert (.*) to (.*),"['a', 'double']","['decimal', 'places']","['java.lang.Float.valueOf', 'java.lang.String.format']"
210,convert (.*) to (.*),"['character', 'array']",['set'],"['java.util.Collections.unmodifiableSet', 'java.util.Arrays.stream', 'java.util.Arrays.asList']"
211,convert (.*) to (.*),['decimal'],"['gray', 'code']",['java.lang.String.valueOf']
212,convert (.*) to (.*),['milliseconds'],['hours'],"['java.lang.Long.parseLong', 'java.util.Calendar.getInstance']"
213,convert (.*) to (.*),"['a', 'string']",['jsonarray'],['java.util.regex.Pattern.compile']
214,convert (.*) to (.*),"['a', 'bytebuffer']",['long'],"['java.nio.LongBuffer.array', 'java.nio.ByteBuffer.wrap']"
215,convert (.*) to (.*),['byte'],['binary'],['java.lang.String.format']
216,convert (.*) to (.*),['pdfcopy'],"['byte', 'array']",['java.nio.file.Files.write']
217,convert (.*) to (.*),"['currency', 'format']",['double'],['java.text.NumberFormat.getNumberInstance']
218,convert (.*) to (.*),"['from', 'xmlaccesstype']",['accesstype'],['javax.xml.bind.JAXBContext.newInstance']
219,convert (.*) to (.*),"['string', 'number']","['integer', 'number']","['java.lang.Long.parseLong', 'java.lang.Double.parseDouble', 'java.lang.Integer.parseInt', 'java.lang.Float.parseFloat']"
220,convert (.*) to (.*),['input'],['uppercase'],['java.lang.Character.toUpperCase']
221,convert (.*) to (.*),"['c', 'datetime']","['java', 'datetime']","['java.time.LocalDateTime.now', 'java.time.LocalDateTime.of']"
222,convert (.*) to (.*),['object'],"['arraylist', 'object']",['java.util.Arrays.asList']
223,convert (.*) to (.*),['xmlgregoriancalender'],"['different', 'timezone']",['javax.xml.datatype.DatatypeFactory.newInstance']
224,convert (.*) to (.*),"['integer', 'double']",['string'],['java.lang.Double.toString']
225,convert (.*) to (.*),['element'],['string'],['org.w3c.dom.Node.getNodeName']
226,convert (.*) to (.*),"['from', 'void']",['char'],"['java.util.Arrays.equals', 'java.util.Arrays.sort']"
227,convert (.*) to (.*),"['int', 'array']","['base', 'string']","['java.nio.ByteBuffer.allocate', 'java.util.stream.IntStream.of', 'java.util.Base64.getEncoder']"
228,convert (.*) to (.*),"['the', 'code']","['use', 'completablefuture']",['java.util.concurrent.CompletableFuture.supplyAsync']
229,convert (.*) to (.*),['textview'],['string'],['java.lang.String.valueOf']
230,convert (.*) to (.*),"['an', 'angle']","['a', 'vector']","['java.lang.Math.sin', 'java.lang.Math.cos', 'java.lang.Math.atan2']"
231,convert (.*) to (.*),['all'],['lowercase'],['java.lang.String.format']
232,convert (.*) to (.*),['string'],['bytes'],['java.util.regex.Pattern.compile']
233,convert (.*) to (.*),['imageinputstream'],['bufferedimage'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
234,convert (.*) to (.*),"['large', 'binary']",['decimal'],['java.lang.Integer.parseInt']
235,convert (.*) to (.*),"['here', 'url']",['string'],"['java.nio.file.Paths.get', 'java.nio.file.Files.copy']"
236,convert (.*) to (.*),"['textbox', 'input']","['integer', 'java']",['java.lang.Integer.parseInt']
237,convert (.*) to (.*),"['byte', 'array']","['japanese', 'character']",['java.lang.String.getBytes']
238,convert (.*) to (.*),['string'],"['multiple', 'strings']","['java.util.Arrays.toString', 'java.lang.String.split']"
239,convert (.*) to (.*),['recursion'],['iteration'],['java.util.Arrays.stream']
240,convert (.*) to (.*),"['python', 'time']","['java', 'date']",['java.lang.Long.parseLong']
241,convert (.*) to (.*),"['est', 'time']","['local', 'time']",['java.util.TimeZone.getDefault']
242,convert (.*) to (.*),['array'],['sentence'],['java.util.Arrays.copyOfRange']
243,convert (.*) to (.*),"['a', 'float']",['int'],['java.lang.Math.abs']
244,convert (.*) to (.*),['int'],['string'],"['java.lang.Integer.toString', 'java.lang.Integer.parseInt']"
245,convert (.*) to (.*),['boolean'],"['boolean', 'java']","['java.text.DecimalFormat.setParseBigDecimal', 'java.text.DecimalFormat.parse']"
246,convert (.*) to (.*),['int'],"['big', 'integer']",['java.nio.ByteBuffer.wrap']
247,convert (.*) to (.*),"['decimal', 'value']",['hexadecimal'],"['java.lang.Integer.parseInt', 'java.lang.String.format']"
248,convert (.*) to (.*),"['a', 'zippath']",['file'],"['java.nio.file.Files.newInputStream', 'java.io.File.createTempFile']"
249,convert (.*) to (.*),"['a', 'linkedhashset']","['an', 'enumset']",['java.util.EnumSet.copyOf']
250,convert (.*) to (.*),"['hex', 'string']","['octal', 'string']",['java.lang.Integer.toString']
251,convert (.*) to (.*),"['a', 'stacktraceelement']","['a', 'string']",['java.lang.Thread.currentThread']
252,convert (.*) to (.*),['hash'],"['random', 'string']","['java.lang.Integer.toString', 'java.lang.Integer.parseInt']"
253,convert (.*) to (.*),"['gregorian', 'string']","['gregorian', 'calendar']","['java.lang.Long.parseLong', 'java.util.regex.Pattern.compile']"
254,convert (.*) to (.*),"['php', 'unicode']",['character'],['java.util.regex.Pattern.compile']
255,convert (.*) to (.*),"['a', 'path']","['absolute', 'path']",['java.nio.file.Paths.get']
256,convert (.*) to (.*),['dec'],"['bit', 'int']",['java.nio.ByteBuffer.wrap']
257,convert (.*) to (.*),['offsettime'],"['local', 'offsettime']",['java.time.OffsetTime.of']
258,convert (.*) to (.*),['decimal'],['hexadecimal'],['java.lang.Integer.toHexString']
259,convert (.*) to (.*),['grayscale'],"['color', 'gradient']","['javax.imageio.ImageIO.read', 'javax.swing.SwingUtilities.invokeLater']"
260,convert (.*) to (.*),"['hexadecimal', 'number']",['binary'],['java.lang.Long.parseLong']
261,convert (.*) to (.*),"['standard', 'time']","['traditional', 'time']","['java.lang.Integer.toString', 'java.lang.Integer.parseInt']"
262,convert (.*) to (.*),"['from', 'geopoint']",['string'],['java.lang.String.valueOf']
263,convert (.*) to (.*),"['japanese', 'date']","['western', 'date']",['java.text.DateFormat.getDateInstance']
264,convert (.*) to (.*),"['arraylist', 'byte']",['bytebuffer'],['java.nio.ByteBuffer.allocate']
265,convert (.*) to (.*),"['bufferedimage', 'rgba']","['bufferedimage', 'rgb']","['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
266,convert (.*) to (.*),['ffff'],['byte'],['java.lang.Integer.parseInt']
267,convert (.*) to (.*),"['a', 'hashmap']","['cucumber', 'datatable']",['java.util.Arrays.asList']
268,convert (.*) to (.*),"['argb', 'color']",['hex'],['java.lang.String.format']
269,convert (.*) to (.*),"['a', 'imageview']",['inputstream'],['javax.imageio.ImageIO.write']
270,convert (.*) to (.*),"['captured', 'group']","['special', 'character']","['java.lang.Character.toString', 'java.util.regex.Pattern.compile']"
271,convert (.*) to (.*),['int'],"['calendar', 'object']","['java.util.GregorianCalendar.from', 'java.time.ZonedDateTime.now']"
272,convert (.*) to (.*),['floatbuffer'],['byte'],['java.nio.ByteBuffer.allocate']
273,convert (.*) to (.*),"['from', 'string']","['enum', 'dynamically']",['java.lang.Enum.valueOf']
274,convert (.*) to (.*),"['a', 'bufferedimage']",['gif'],['javax.imageio.ImageIO.write']
275,convert (.*) to (.*),['string'],['sometype'],['java.lang.Integer.parseInt']
276,convert (.*) to (.*),"['java', 'floats']",['c'],['java.nio.ByteBuffer.allocateDirect']
277,convert (.*) to (.*),"['a', 'double']",['double'],['java.util.stream.Stream.of']
278,convert (.*) to (.*),"['long', 'timestamp']","['shorter', 'timestamp']",['java.util.Calendar.getInstance']
279,convert (.*) to (.*),['radiant'],['degrees'],"['java.lang.Math.toDegrees', 'java.lang.Math.toRadians']"
280,convert (.*) to (.*),['string'],['int'],['java.lang.Integer.parseInt']
281,convert (.*) to (.*),['byte'],"['hexadecimal', 'string']",['java.lang.String.format']
282,convert (.*) to (.*),"['byte', 'cp']","['byte', 'utf']",['java.nio.charset.Charset.availableCharsets']
283,convert (.*) to (.*),['gregoriancalendar'],['xmlgregoriancalendar'],['javax.xml.datatype.DatatypeFactory.newInstance']
284,convert (.*) to (.*),"['byte', 'array']",['outputstream'],['java.lang.System.currentTimeMillis']
285,convert (.*) to (.*),"['java', 'thread']",['kotlin'],['java.lang.Thread.sleep']
286,convert (.*) to (.*),['bufferedimage'],"['an', 'int']","['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
287,convert (.*) to (.*),"['a', 'string']",['chararray'],"['javax.crypto.SecretKeyFactory.getInstance', 'java.util.Arrays.sort']"
288,convert (.*) to (.*),['xml'],"['other', 'format']",['javax.xml.transform.TransformerFactory.newInstance']
289,convert (.*) to (.*),"['c', 'method']",['java'],['java.nio.ByteBuffer.allocate']
290,convert (.*) to (.*),"['binary', 'file']",['object'],['java.nio.channels.FileChannel.map']
291,convert (.*) to (.*),['char'],['string'],['java.util.Arrays.toString']
292,convert (.*) to (.*),['double'],['string'],"['java.lang.Double.parseDouble', 'java.lang.String.valueOf']"
293,convert (.*) to (.*),"['double', 'array']","['string', 'array']",['java.util.Arrays.toString']
294,convert (.*) to (.*),"['image', 'object']","['base', 'image']",['javax.imageio.ImageIO.write']
295,convert (.*) to (.*),"['deeptostring', 'back']","['d', 'array']",['java.util.Arrays.deepToString']
296,convert (.*) to (.*),['integer'],['hex'],['javax.xml.bind.DatatypeConverter.printHexBinary']
297,convert (.*) to (.*),"['jalali', 'calendar']",['georgian'],"['java.time.chrono.HijrahDate.from', 'java.time.LocalDate.of']"
298,convert (.*) to (.*),"['all', 'images']",['png'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
299,convert (.*) to (.*),['stringwithformat'],['java'],"['java.lang.String.valueOf', 'java.lang.String.format']"
300,convert (.*) to (.*),"['gregorian', 'days']","['gregorian', 'date']",['java.lang.Math.round']
301,convert (.*) to (.*),"['from', 'float']",['int'],['java.lang.Float.parseFloat']
302,convert (.*) to (.*),"['a', 'string']",['ccsid'],['java.lang.String.getBytes']
303,convert (.*) to (.*),['time'],"['arab', 'timezone']","['java.text.DateFormat.getDateTimeInstance', 'java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.ZoneId.of', 'java.time.ZoneId.systemDefault']"
304,convert (.*) to (.*),['epoch'],['date'],['java.util.Calendar.getInstance']
305,convert (.*) to (.*),['in'],"['list', 'map']",['java.lang.String.split']
306,convert (.*) to (.*),['object'],"['double', 'scriptengine']",['java.lang.Double.parseDouble']
307,convert (.*) to (.*),['image'],['bufferedimage'],"['javax.imageio.ImageIO.read', 'java.awt.Toolkit.getDefaultToolkit']"
308,convert (.*) to (.*),"['gmt', 'time']","['local', 'time']",['java.lang.Math.floor']
309,convert (.*) to (.*),"['string', 'array']",['list'],['java.util.Arrays.asList']
310,convert (.*) to (.*),['character'],['string'],"['java.io.PrintStream.print', 'java.lang.Character.toChars']"
311,convert (.*) to (.*),['pddocument'],"['base', 'string']",['java.util.Base64.getEncoder']
312,convert (.*) to (.*),"['offsetdatetime', 'string']","['zoneddatetime', 'java']","['java.time.LocalDateTime.parse', 'java.time.OffsetDateTime.parse']"
313,convert (.*) to (.*),"['hex', 'utf']",['utf'],['java.time.OffsetDateTime.parse']
314,convert (.*) to (.*),['epoch'],"['mysql', 'timestamp']",['java.util.Calendar.getInstance']
315,convert (.*) to (.*),"['from', 'byte']",['long'],['java.nio.ByteBuffer.wrap']
316,convert (.*) to (.*),['int'],['integer'],['java.lang.Integer.valueOf']
317,convert (.*) to (.*),['string'],['integer'],['java.lang.Integer.parseInt']
318,convert (.*) to (.*),"['stream', 'string']","['stream', 'string']","['java.util.Arrays.stream', 'java.nio.file.Files.lines']"
319,convert (.*) to (.*),['chars'],"['a', 'string']",['java.lang.String.valueOf']
320,convert (.*) to (.*),['string'],['double'],['java.util.Arrays.toString']
321,convert (.*) to (.*),"['negative', 'double']","['binary', 'representation']","['java.lang.Long.toBinaryString', 'java.lang.Double.doubleToLongBits', 'java.lang.Double.parseDouble']"
322,convert (.*) to (.*),"['base', 'string']",['sha'],"['java.util.Base64.getEncoder', 'java.security.MessageDigest.getInstance']"
323,convert (.*) to (.*),['hexstring'],"['swt', 'color']",['java.awt.Color.decode']
324,convert (.*) to (.*),['byteswritable'],['byte'],['java.util.Arrays.copyOf']
325,convert (.*) to (.*),"['from', 'ascii']",['decimal'],['java.lang.String.valueOf']
326,convert (.*) to (.*),"['nested', 'loops']","['nested', 'streams']","['java.util.Arrays.stream', 'java.util.stream.IntStream.range']"
327,convert (.*) to (.*),['subjectpublickeyinfo'],"['java', 'publickey']",['java.security.KeyFactory.getInstance']
328,convert (.*) to (.*),['string'],"['javardd', 'string']",['java.util.UUID.randomUUID']
329,convert (.*) to (.*),['xml'],['jaxb'],"['javax.xml.bind.JAXBContext.newInstance', 'javax.xml.parsers.SAXParserFactory.newInstance']"
330,convert (.*) to (.*),['int'],['string'],['java.lang.String.valueOf']
331,convert (.*) to (.*),['string'],['epoch'],['java.time.format.DateTimeFormatter.ofPattern']
332,convert (.*) to (.*),"['java', 'code']","['jython', 'code']",['java.lang.management.ManagementFactory.getOperatingSystemMXBean']
333,convert (.*) to (.*),"['a', 'bytearray']",['jar'],['java.net.URL.setURLStreamHandlerFactory']
334,convert (.*) to (.*),"['list', 'string']","['list', 'dto']",['java.util.Arrays.asList']
335,convert (.*) to (.*),"['from', 'void']",['list'],['java.util.Collections.sort']
336,convert (.*) to (.*),"['jar', 'url']",['file'],['java.net.URI.create']
337,convert (.*) to (.*),"['an', 'array']","['hierarchical', 'jsonarray']","['java.util.Objects.equals', 'java.util.Arrays.asList', 'java.util.Objects.hash']"
338,convert (.*) to (.*),"['indian', 'currency']",['double'],['java.lang.Double.parseDouble']
339,convert (.*) to (.*),"['net', 'guid']",['bindata'],"['java.util.Base64.getEncoder', 'java.util.UUID.fromString', 'java.nio.ByteBuffer.wrap']"
340,convert (.*) to (.*),['apfloat'],['bigdecimal'],"['java.math.BigDecimal.valueOf', 'java.lang.Double.toString']"
341,convert (.*) to (.*),"['from', 'string']",['integer'],['java.lang.Integer.valueOf']
342,convert (.*) to (.*),"['local', 'time']","['ldap', 'timestamp']","['java.time.Duration.between', 'java.time.ZoneId.of', 'java.time.Instant.parse', 'java.time.LocalDate.now']"
343,convert (.*) to (.*),"['null', 'checks']",['optional'],['java.util.Optional.ofNullable']
344,convert (.*) to (.*),"['database', 'time']","['ist', 'datetime']",['java.time.LocalDate.now']
345,convert (.*) to (.*),"['hexadecimal', 'number']","['long', 'integer']","['java.lang.Long.parseLong', 'java.lang.String.valueOf']"
346,convert (.*) to (.*),"['certain', 'regions']","['lower', 'string']",['java.util.regex.Pattern.compile']
347,convert (.*) to (.*),"['month', 'name']","['date', 'range']",['java.time.YearMonth.of']
348,convert (.*) to (.*),"['an', 'image']",['int'],['javax.imageio.ImageIO.read']
349,convert (.*) to (.*),['files'],"['io', 'files']","['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
350,convert (.*) to (.*),"['net', 'date']",['localdatetime'],"['java.util.regex.Pattern.quote', 'java.util.regex.Pattern.compile']"
351,convert (.*) to (.*),['format'],"['t', 'format']",['java.time.LocalDateTime.parse']
352,convert (.*) to (.*),"['dimensional', 'array']",['set'],['java.util.Arrays.stream']
353,convert (.*) to (.*),['string'],['xml'],['javax.xml.transform.TransformerFactory.newInstance']
354,convert (.*) to (.*),['csv'],['multimap'],"['java.lang.Integer.parseInt', 'java.lang.Float.parseFloat']"
355,convert (.*) to (.*),"['any', 'image']",['jpg'],"['javax.imageio.ImageIO.write', 'java.awt.image.ColorModel.getRGBdefault', 'javax.imageio.ImageIO.read', 'java.util.Objects.requireNonNull', 'java.awt.image.Raster.createInterleavedRaster']"
356,convert (.*) to (.*),"['hexadecimal', 'value']",['ascii'],['java.lang.Integer.parseInt']
357,convert (.*) to (.*),['text'],['url'],['java.net.URLEncoder.encode']
358,convert (.*) to (.*),"['string', 'array']","['stringbuilder', 'array']","['java.util.Arrays.stream', 'java.util.Arrays.setAll', 'java.util.stream.IntStream.range', 'java.util.Objects.requireNonNull']"
359,convert (.*) to (.*),['shortbuffer'],['buffer'],['java.nio.ShortBuffer.wrap']
360,convert (.*) to (.*),['dictionary'],"['sqlite', 'database']",['java.util.regex.Pattern.compile']
361,convert (.*) to (.*),['integer'],['int'],['java.util.Arrays.stream']
362,convert (.*) to (.*),"['optional', 't']","['stream', 't']",['java.util.Optional.of']
363,convert (.*) to (.*),['socket'],"['tls', 'error']",['java.lang.System.getProperties']
364,convert (.*) to (.*),"['a', 'string']",['zoneddatetime'],['java.time.OffsetDateTime.parse']
365,convert (.*) to (.*),"['iterative', 'function']",['recursion'],['java.lang.String.valueOf']
366,convert (.*) to (.*),['interface'],"['rmi', 'interface']","['java.rmi.registry.LocateRegistry.createRegistry', 'java.rmi.Naming.rebind']"
367,convert (.*) to (.*),"['short', 'url']","['complete', 'url']",['java.net.URLEncoder.encode']
368,convert (.*) to (.*),['date'],"['int', 'array']",['java.util.Calendar.getInstance']
369,convert (.*) to (.*),"['enum', 'array']","['integer', 'value']",['java.util.stream.Stream.of']
370,convert (.*) to (.*),['them'],"['java', 'object']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
371,convert (.*) to (.*),['string'],['int'],['java.lang.Double.parseDouble']
372,convert (.*) to (.*),"['string', 'values']",['dates'],"['java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
373,convert (.*) to (.*),['bytes'],"['single', 'variable']",['java.lang.System.arraycopy']
374,convert (.*) to (.*),['byte'],['image'],['javax.imageio.ImageIO.read']
375,convert (.*) to (.*),['string'],['localdatetime'],"['java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
376,convert (.*) to (.*),"['a', 'string']","['an', 'integer']",['java.lang.Integer.parseInt']
377,convert (.*) to (.*),['string'],['byte'],['java.lang.Integer.parseInt']
378,convert (.*) to (.*),"['random', 'string']",['enum'],['java.util.stream.Stream.of']
379,convert (.*) to (.*),['bytesref'],['float'],['java.nio.ByteBuffer.wrap']
380,convert (.*) to (.*),"['an', 'array']","['json', 'java']","['java.util.Arrays.toString', 'java.util.Arrays.stream']"
381,convert (.*) to (.*),"['int', 'array']",['directions'],['java.lang.Math.abs']
382,convert (.*) to (.*),"['several', 'strings']","['image', 'format']",['java.awt.print.PrinterJob.getPrinterJob']
383,convert (.*) to (.*),"['from', 'string']",['integer'],['java.lang.Long.parseLong']
384,convert (.*) to (.*),['tiff'],['jpg'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
385,convert (.*) to (.*),"['from', 'string']",['int'],"['javax.swing.JOptionPane.showInputDialog', 'java.lang.Integer.parseInt']"
386,convert (.*) to (.*),['employee'],"['optional', 'u']",['java.util.Optional.ofNullable']
387,convert (.*) to (.*),['heapbytebuffer'],['file'],['javax.sound.sampled.AudioSystem.getAudioInputStream']
388,convert (.*) to (.*),"['decimal', 'base']","['hexadecimal', 'base']",['java.lang.String.format']
389,convert (.*) to (.*),['imagicon'],['image'],['javax.imageio.ImageIO.write']
390,convert (.*) to (.*),['double'],['int'],"['java.lang.Integer.parseInt', 'javax.swing.JOptionPane.showMessageDialog']"
391,convert (.*) to (.*),"['from', 'byte']",['doublebuffer'],['java.nio.ByteBuffer.wrap']
392,convert (.*) to (.*),"['string', 'array']",['int'],['java.lang.Integer.parseInt']
393,convert (.*) to (.*),['double'],"['string', 'directly']",['java.text.NumberFormat.getNumberInstance']
394,convert (.*) to (.*),['it'],"['another', 'type']","['java.lang.Integer.toString', 'java.lang.Integer.valueOf']"
395,convert (.*) to (.*),"['this', 'string']",['date'],"['java.time.ZonedDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
396,convert (.*) to (.*),"['from', 'string']",['int'],"['java.time.LocalTime.of', 'java.time.LocalTime.parse']"
397,convert (.*) to (.*),['string'],"['datetime', 'java']","['java.util.Optional.of', 'java.time.LocalDateTime.parse', 'java.util.regex.Pattern.compile', 'java.util.logging.Logger.getLogger', 'java.util.Optional.empty']"
398,convert (.*) to (.*),['image'],['byte'],['java.awt.geom.AffineTransform.getScaleInstance']
399,convert (.*) to (.*),"['from', 'double']",['class'],['java.lang.Math.sqrt']
400,convert (.*) to (.*),['string'],['integer'],['java.lang.Integer.parseInt']
401,convert (.*) to (.*),['int'],['string'],"['java.lang.Integer.toString', 'java.util.Arrays.deepToString']"
402,convert (.*) to (.*),['literals'],['objects'],['java.lang.Class.forName']
403,convert (.*) to (.*),"['a', 'list']","['multidimensional', 'map']","['java.util.stream.Collectors.groupingBy', 'java.util.stream.Collectors.mapping']"
404,convert (.*) to (.*),"['encoded', 'string']","['readable', 'string']",['java.net.URLDecoder.decode']
405,convert (.*) to (.*),"['an', 'integer']","['a', 'string']",['java.lang.Integer.toString']
406,convert (.*) to (.*),"['date', 'string']",['characters'],['java.math.BigInteger.valueOf']
407,convert (.*) to (.*),"['a', 'string']","['a', 'guid']",['java.util.UUID.fromString']
408,convert (.*) to (.*),['decimal'],['integer'],['java.lang.Math.round']
409,convert (.*) to (.*),"['from', 'uri']","['location', 'object']",['java.lang.Double.valueOf']
410,convert (.*) to (.*),"['an', 'int']","['an', 'int']","['java.lang.Math.abs', 'java.lang.String.valueOf']"
411,convert (.*) to (.*),"['the', 'number']","['a', 'hex']",['java.lang.Integer.toHexString']
412,convert (.*) to (.*),"['string', 'value']",['type'],"['java.lang.Class.forName', 'java.lang.Class.newInstance', 'java.lang.Class.getName']"
413,convert (.*) to (.*),['string'],['datatime'],"['java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
414,convert (.*) to (.*),['select'],['enum'],['java.lang.Enum.valueOf']
415,convert (.*) to (.*),['bytebuffer'],['string'],"['java.nio.ByteBuffer.allocate', 'java.lang.System.arraycopy', 'java.nio.channels.DatagramChannel.open']"
416,convert (.*) to (.*),['string'],"['localdatetime', 'java']","['java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
417,convert (.*) to (.*),['directly'],['integer'],['java.util.Arrays.asList']
418,convert (.*) to (.*),"['list', 'map']",['str'],['java.util.Arrays.toString']
419,convert (.*) to (.*),['double'],"['specific', 'form']",['java.lang.String.format']
420,convert (.*) to (.*),"['some', 'strings']","['class', 'names']",['java.lang.Class.forName']
421,convert (.*) to (.*),"['string', 'binary']",['hexadecimal'],"['java.lang.String.format', 'java.math.BigInteger.valueOf']"
422,convert (.*) to (.*),['int'],"['string', 'array']",['java.lang.String.valueOf']
423,convert (.*) to (.*),['string'],"['local', 'date']","['java.time.LocalDateTime.parse', 'java.time.ZoneId.of', 'java.time.Instant.parse']"
424,convert (.*) to (.*),['number'],"['a', 'letter']",['java.lang.Long.toString']
425,convert (.*) to (.*),"['string', 'like']",['arraylist'],"['java.util.Arrays.asList', 'java.util.regex.Pattern.compile']"
426,convert (.*) to (.*),['it'],['utc'],"['java.time.LocalDateTime.parse', 'java.time.ZoneId.of', 'java.time.LocalTime.of']"
427,convert (.*) to (.*),"['files', 'walk']","['a', 'simplefilevisitor']","['java.nio.file.Files.walkFileTree', 'java.nio.file.Files.walk']"
428,convert (.*) to (.*),"['a', 'string']","['a', 'map']",['java.util.Arrays.stream']
429,convert (.*) to (.*),['xmlgregoriandate'],"['normal', 'date']",['java.time.format.DateTimeFormatter.ofPattern']
430,convert (.*) to (.*),['byte'],"['normal', 'view']",['java.lang.Integer.toBinaryString']
431,convert (.*) to (.*),['string'],['int'],['java.lang.Integer.parseInt']
432,convert (.*) to (.*),"['from', 'string']",['float'],['java.lang.Double.parseDouble']
433,convert (.*) to (.*),['image'],"['byte', 'array']",['javax.imageio.ImageIO.read']
434,convert (.*) to (.*),"['a', 'long']",['milliseconds'],['java.lang.System.currentTimeMillis']
435,convert (.*) to (.*),['boundmethodhandle'],['reflection'],['java.lang.invoke.MethodHandles.lookup']
436,convert (.*) to (.*),['int'],"['byte', 'array']",['java.nio.ByteBuffer.allocate']
437,convert (.*) to (.*),"['array', 'byte']",['string'],['java.lang.Byte.toString']
438,convert (.*) to (.*),"['file', 'type']",['image'],['javax.imageio.ImageIO.read']
439,convert (.*) to (.*),['array'],['intbuffer'],['java.nio.IntBuffer.wrap']
440,convert (.*) to (.*),['currenttime'],['string'],['java.lang.String.valueOf']
441,convert (.*) to (.*),"['xamarin', 'code']",['native'],['java.lang.String.format']
442,convert (.*) to (.*),['sting'],['zoneddatetime'],"['java.time.LocalDate.parse', 'java.time.ZonedDateTime.now']"
443,convert (.*) to (.*),['arraylist'],"['string', 'array']",['java.util.List.toArray']
444,convert (.*) to (.*),"['a', 'bit']","['base', 'character']",['java.lang.String.format']
445,convert (.*) to (.*),['floatbuffer'],"['float', 'unsupportedoperationexception']","['java.nio.FloatBuffer.allocate', 'java.nio.Buffer.array', 'java.nio.FloatBuffer.wrap']"
446,convert (.*) to (.*),['it'],['string'],['java.lang.Integer.toString']
0,get (.*) from (.*),"['pixel', 'array']",['image'],"['javax.imageio.ImageIO.read', 'java.lang.System.nanoTime']"
1,get (.*) from (.*),['timezone'],"['android', 'mobile']",['java.util.TimeZone.getDefault']
2,get (.*) from (.*),['milliseconds'],['epoch'],"['java.lang.System.currentTimeMillis', 'java.time.Instant.now']"
3,get (.*) from (.*),"['week', 'number']","['any', 'date']","['java.text.DateFormat.getDateInstance', 'java.util.Calendar.getInstance']"
4,get (.*) from (.*),['value'],"['date', 'picker']","['java.util.Date.from', 'java.time.Instant.from']"
5,get (.*) from (.*),"['different', 'datatypes']",['resultsetmetadata'],"['java.sql.DriverManager.getConnection', 'java.sql.ResultSetMetaData.getColumnType']"
6,get (.*) from (.*),"['md', 'string']","['message', 'digest']","['java.security.MessageDigest.getInstance', 'java.lang.Integer.toHexString']"
7,get (.*) from (.*),"['an', 'inputstream']","['a', 'bufferedimage']",['javax.imageio.ImageIO.write']
8,get (.*) from (.*),"['button', 'name']",['actionlistener'],['java.lang.Integer.toString']
9,get (.*) from (.*),['value'],"['resultset', 'java']",['java.util.logging.Logger.getLogger']
10,get (.*) from (.*),"['month', 'number']","['month', 'name']",['java.util.Calendar.getInstance']
11,get (.*) from (.*),['data'],"['a', 'url']",['java.lang.System.setProperty']
12,get (.*) from (.*),"['integer', 'value']","['edittext', 'android']",['java.lang.Integer.parseInt']
13,get (.*) from (.*),['request'],['java'],['java.net.Authenticator.setDefault']
14,get (.*) from (.*),"['random', 'number']",['arraylist'],['java.util.Collections.shuffle']
15,get (.*) from (.*),['input'],['jframe'],"['java.lang.String.valueOf', 'java.util.logging.Logger.getLogger', 'javax.swing.JOptionPane.showMessageDialog', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
16,get (.*) from (.*),"['audio', 'data']","['a', 'mp']",['javax.sound.sampled.AudioSystem.getAudioInputStream']
17,get (.*) from (.*),"['numberformat', 'instance']","['currency', 'code']","['java.text.NumberFormat.getInstance', 'java.util.Currency.getInstance']"
18,get (.*) from (.*),"['file', 'extension']","['content', 'type']",['java.lang.Boolean.valueOf']
19,get (.*) from (.*),['hostname'],['request'],['java.net.NetworkInterface.getNetworkInterfaces']
20,get (.*) from (.*),['strings'],"['soap', 'message']",['javax.xml.soap.MessageFactory.newInstance']
21,get (.*) from (.*),"['user', 'input']","['a', 'jtextfield']",['javax.swing.JOptionPane.showMessageDialog']
22,get (.*) from (.*),['files'],"['folder', 'subfolder']","['java.nio.file.FileSystems.getDefault', 'java.nio.file.Files.walk']"
23,get (.*) from (.*),"['a', 'bufferedimage']","['a', 'svg']",['java.io.File.createTempFile']
24,get (.*) from (.*),['filename'],"['content', 'disposition']",['java.net.URLDecoder.decode']
25,get (.*) from (.*),"['key', 'position']","['a', 'hashmap']","['java.util.Map.keySet', 'java.util.List.indexOf']"
26,get (.*) from (.*),['image'],"['sqlite', 'database']",['java.lang.String.valueOf']
27,get (.*) from (.*),['variable'],['servlet'],['java.lang.Integer.parseInt']
28,get (.*) from (.*),['keystore'],"['usb', 'token']","['java.security.Security.addProvider', 'java.security.KeyStore.getInstance']"
29,get (.*) from (.*),['subnet'],"['ip', 'address']","['java.lang.Math.pow', 'java.lang.Integer.parseInt']"
30,get (.*) from (.*),"['latest', 'file']",['ftp'],['java.util.Collections.max']
31,get (.*) from (.*),"['image', 'extension']","['byte', 'array']",['java.net.URLConnection.guessContentTypeFromStream']
32,get (.*) from (.*),"['integer', 'value']",['edittext'],['java.lang.Integer.parseInt']
33,get (.*) from (.*),['attribute'],['xpath'],['javax.xml.xpath.XPathFactory.newInstance']
34,get (.*) from (.*),"['d', 'subarray']","['d', 'array']",['java.util.Arrays.copyOfRange']
35,get (.*) from (.*),"['a', 'cookie']","['a', 'request']",['java.lang.Integer.valueOf']
36,get (.*) from (.*),['byte'],"['javafx', 'imageview']",['javax.imageio.ImageIO.write']
37,get (.*) from (.*),"['specific', 'value']",['html'],['javax.swing.JOptionPane.showMessageDialog']
38,get (.*) from (.*),['substring'],"['a', 'string']",['java.util.regex.Pattern.compile']
39,get (.*) from (.*),"['float', 'value']",['string'],['java.lang.Float.valueOf']
40,get (.*) from (.*),['timezone'],"['timezone', 'offset']",['java.util.TimeZone.getDefault']
41,get (.*) from (.*),['numbers'],['edittext'],['java.lang.Integer.parseInt']
42,get (.*) from (.*),"['a', 'bufferedimage']","['and', 'outputstream']",['javax.imageio.ImageIO.read']
43,get (.*) from (.*),['number'],['edittext'],['java.lang.Integer.parseInt']
44,get (.*) from (.*),"['all', 'keys']","['spring', 'reloadableresourcebundlemessagesource']",['java.util.logging.Logger.getLogger']
45,get (.*) from (.*),['data'],['linkedlist'],['java.lang.System.exit']
46,get (.*) from (.*),['mbean'],"['jmx', 'server']","['javax.management.remote.JMXConnectorFactory.connect', 'java.lang.System.getProperty', 'javax.management.JMX.newMBeanProxy']"
47,get (.*) from (.*),['boolean'],['string'],['javax.xml.bind.JAXBContext.newInstance']
48,get (.*) from (.*),"['a', 'raster']","['an', 'image']",['javax.imageio.ImageIO.read']
49,get (.*) from (.*),['values'],['matrix'],"['java.lang.reflect.Array.get', 'java.lang.reflect.Array.newInstance', 'java.lang.reflect.Array.setInt']"
50,get (.*) from (.*),"['page', 'content']",['url'],['java.nio.charset.Charset.forName']
51,get (.*) from (.*),"['the', 'signature']","['a', 'certificate']","['java.nio.file.Paths.get', 'java.nio.file.Files.copy', 'java.security.Security.addProvider', 'java.security.KeyStore.getInstance']"
52,get (.*) from (.*),"['table', 'name']",['query'],['java.util.regex.Pattern.compile']
53,get (.*) from (.*),['bufferedimage'],['url'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.scanForPlugins']"
54,get (.*) from (.*),"['string', 'date']",['calendar'],['java.util.Calendar.getInstance']
55,get (.*) from (.*),"['an', 'integer']","['a', 'string']","['java.lang.Short.parseShort', 'java.lang.Long.parseLong', 'java.lang.Double.parseDouble', 'java.lang.Float.parseFloat', 'java.lang.Byte.parseByte']"
56,get (.*) from (.*),"['unsigned', 'integer']","['byte', 'array']",['java.io.DataInputStream.readInt']
57,get (.*) from (.*),"['sorted', 'data']","['firebase', 'database']",['java.util.Collections.sort']
58,get (.*) from (.*),"['the', 'string']",['hashcode'],['java.lang.Object.hashCode']
59,get (.*) from (.*),"['java', 'list']","['c', 'code']","['java.util.List.get', 'java.util.List.size']"
60,get (.*) from (.*),['icon'],['jtable'],"['java.lang.Thread.sleep', 'javax.swing.SwingUtilities.invokeLater']"
61,get (.*) from (.*),"['absolute', 'path']",['filedialog'],['java.io.File.getAbsolutePath']
62,get (.*) from (.*),"['current', 'day']","['unix', 'timestamp']",['java.util.Calendar.getInstance']
63,get (.*) from (.*),"['a', 'value']","['a', 'thread']","['java.lang.Thread.sleep', 'java.util.concurrent.Executors.newSingleThreadScheduledExecutor', 'java.util.concurrent.Executors.newCachedThreadPool']"
64,get (.*) from (.*),['object'],"['hashmap', 'respectively']",['java.util.Map.entrySet']
65,get (.*) from (.*),['results'],"['the', 'completablefuture']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.lang.Thread.sleep']"
66,get (.*) from (.*),"['a', 'type']","['class', 'name']",['java.lang.Class.forName']
67,get (.*) from (.*),['keychar'],"['key', 'text']",['java.awt.AWTKeyStroke.getAWTKeyStroke']
68,get (.*) from (.*),['float'],"['unsigned', 'bytes']",['java.lang.Float.intBitsToFloat']
69,get (.*) from (.*),['calendar'],['date'],['java.util.Calendar.getInstance']
70,get (.*) from (.*),"['text', 'value']",['joptionpane'],"['javax.swing.JOptionPane.showConfirmDialog', 'java.lang.Integer.parseInt']"
71,get (.*) from (.*),"['days', 'starting']",['epoch'],"['java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.ZoneId.systemDefault']"
72,get (.*) from (.*),"['all', 'hashtags']",['edittext'],['java.util.regex.Pattern.compile']
73,get (.*) from (.*),"['an', 'integer']","['a', 'spinner']",['java.lang.Integer.parseInt']
74,get (.*) from (.*),"['number', 'format']",['os'],['java.lang.System.getProperty']
75,get (.*) from (.*),"['a', 'file']","['resources', 'folder']","['java.lang.System.exit', 'java.lang.ClassLoader.getSystemResource', 'java.lang.System.getSecurityManager']"
76,get (.*) from (.*),"['the', 'data']","['mapped', 'class']",['java.lang.String.format']
77,get (.*) from (.*),['values'],['nodes'],"['javax.xml.parsers.DocumentBuilderFactory.newInstance', 'java.lang.Integer.parseInt']"
78,get (.*) from (.*),"['a', 'string']","['another', 'class']",['java.lang.Integer.parseInt']
79,get (.*) from (.*),"['elastic', 'ip']","['running', 'instance']",['java.lang.Runtime.getRuntime']
80,get (.*) from (.*),['file'],['path'],['java.nio.file.Files.isDirectory']
81,get (.*) from (.*),['value'],"['another', 'window']",['javax.swing.SwingUtilities.invokeLater']
82,get (.*) from (.*),['data'],"['fragment', 'android']",['java.lang.Integer.parseInt']
83,get (.*) from (.*),['secret'],"['key', 'vault']",['java.util.concurrent.Executors.newFixedThreadPool']
84,get (.*) from (.*),['annotations'],"['parent', 'method']","['java.util.stream.Stream.concat', 'java.util.stream.Stream.of']"
85,get (.*) from (.*),['html'],['url'],['java.net.CookieHandler.setDefault']
86,get (.*) from (.*),"['a', 'key']",['jtextarea'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.text.Utilities.getTabbedTextWidth']"
87,get (.*) from (.*),['date'],['jcalendar'],"['java.time.LocalDateTime.parse', 'java.time.LocalDateTime.now', 'java.time.format.DateTimeFormatter.ofPattern']"
88,get (.*) from (.*),"['the', 'values']","['string', 'tokenizer']",['java.util.Calendar.getInstance']
89,get (.*) from (.*),['properties'],"['workflow', 'xml']",['java.lang.System.getProperty']
90,get (.*) from (.*),['abbreviation'],"['java', 'timezone']",['java.util.TimeZone.getTimeZone']
91,get (.*) from (.*),"['user', 'input']",['console'],"['java.lang.System.console', 'java.lang.System.exit']"
92,get (.*) from (.*),"['top', 'values']",['map'],['java.util.Collections.sort']
93,get (.*) from (.*),['text'],['jtextfield'],"['javax.swing.JOptionPane.showInternalMessageDialog', 'java.lang.Double.parseDouble']"
94,get (.*) from (.*),"['italic', 'lines']","['a', 'pdf']",['java.lang.System.currentTimeMillis']
95,get (.*) from (.*),"['nth', 'item']","['a', 'treemap']",['java.util.Arrays.copyOf']
96,get (.*) from (.*),['values'],"['specific', 'elements']",['javax.xml.xpath.XPathFactory.newInstance']
97,get (.*) from (.*),"['hits', 'data']",['elasticsearch'],['java.util.Arrays.stream']
98,get (.*) from (.*),"['the', 'output']",['top'],['java.lang.Runtime.getRuntime']
99,get (.*) from (.*),['font'],['resources'],['java.lang.Class.getResourceAsStream']
100,get (.*) from (.*),['elements'],['json'],['java.util.logging.Logger.info']
101,get (.*) from (.*),"['individual', 'results']","['completablefuture', 'allof']",['java.util.concurrent.CompletableFuture.allOf']
102,get (.*) from (.*),"['multiple', 'variables']","['one', 'edittext']",['java.lang.Float.valueOf']
103,get (.*) from (.*),['annotation'],"['overridden', 'method']","['java.util.Objects.equals', 'java.util.Arrays.asList', 'java.util.Collections.addAll', 'java.lang.Integer.compare']"
104,get (.*) from (.*),"['audioformat', 'details']",['mixer'],"['javax.sound.sampled.AudioSystem.getMixerInfo', 'javax.sound.sampled.AudioSystem.getMixer']"
105,get (.*) from (.*),"['exact', 'value']","['stack', 'frame']","['java.util.Objects.equals', 'java.util.Objects.requireNonNull']"
106,get (.*) from (.*),"['keystore', 'fingerprint']",['code'],"['java.security.cert.CertificateFactory.getInstance', 'java.security.MessageDigest.getInstance', 'java.lang.Integer.toHexString']"
107,get (.*) from (.*),"['emulator', 'list']",['chrome'],['java.util.logging.Logger.getLogger']
108,get (.*) from (.*),"['logarithmic', 'bytefrequencydata']",['audio'],"['java.lang.Math.ceil', 'java.lang.Math.pow', 'java.lang.Math.floor']"
109,get (.*) from (.*),"['an', 'enum']","['a', 'value']",['java.util.Arrays.stream']
110,get (.*) from (.*),"['string', 'values']","['supplier', 'enum']",['java.util.Arrays.stream']
111,get (.*) from (.*),['distance'],['gpx'],['java.lang.Math.sin']
112,get (.*) from (.*),['jlist'],"['its', 'listselectionmodel']",['javax.swing.SwingUtilities.invokeLater']
113,get (.*) from (.*),"['random', 'line']","['text', 'file']",['java.lang.Math.floor']
114,get (.*) from (.*),"['a', 'result']","['the', 'future']",['java.util.concurrent.Executors.newFixedThreadPool']
115,get (.*) from (.*),['subnet'],"['an', 'ip']","['java.util.Arrays.stream', 'java.lang.Integer.bitCount']"
116,get (.*) from (.*),"['formatted', 'date']","['android', 'datepicker']",['java.util.Calendar.getInstance']
117,get (.*) from (.*),"['a', 'keyevent']","['another', 'class']",['java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager']
118,get (.*) from (.*),"['an', 'integer']","['an', 'actionlistener']",['java.lang.Integer.parseInt']
119,get (.*) from (.*),['integer'],['jtextfield'],['java.lang.Integer.parseInt']
120,get (.*) from (.*),"['full', 'path']",['filesystem'],['java.nio.file.Paths.get']
121,get (.*) from (.*),['double'],['string'],['java.text.NumberFormat.getInstance']
122,get (.*) from (.*),"['specific', 'values']",['string'],['java.util.regex.Pattern.compile']
123,get (.*) from (.*),['values'],"['arraylist', 'string']",['java.util.Arrays.toString']
124,get (.*) from (.*),"['all', 'jradiobutton']","['a', 'buttongroup']",['java.util.Collections.list']
125,get (.*) from (.*),"['hexadecimal', 'value']","['combined', 'booleans']","['java.lang.Integer.toString', 'java.lang.Integer.parseInt']"
126,get (.*) from (.*),"['optional', 'item']",['map'],['java.util.Optional.ofNullable']
127,get (.*) from (.*),"['client', 'list']","['a', 'router']","['java.net.InetAddress.getLocalHost', 'java.net.InetAddress.getByName']"
128,get (.*) from (.*),"['latest', 'value']","['jtable', 'cell']","['java.lang.Thread.sleep', 'javax.swing.SwingUtilities.invokeLater', 'javax.swing.JTable.getTableHeader', 'java.util.concurrent.Executors.newCachedThreadPool']"
129,get (.*) from (.*),"['a', 'float']",['int'],['java.lang.Math.pow']
130,get (.*) from (.*),"['median', 'values']","['sorted', 'data']",['java.util.Collections.sort']
131,get (.*) from (.*),['url'],['properties'],['java.lang.System.getenv']
132,get (.*) from (.*),"['a', 'response']",['server'],['java.text.DateFormat.getDateTimeInstance']
133,get (.*) from (.*),['timezone'],['temporal'],['java.time.ZonedDateTime.now']
134,get (.*) from (.*),"['log', 'filepath']","['another', 'file']","['java.lang.System.setProperty', 'java.util.logging.Logger.getLogger']"
135,get (.*) from (.*),"['dynamic', 'elements']","['javafx', 'container']",['java.lang.Double.parseDouble']
136,get (.*) from (.*),['targetdataline'],['speakers'],['javax.sound.sampled.AudioSystem.getLine']
137,get (.*) from (.*),['bytes'],"['type', 'long']",['java.io.DataOutputStream.writeLong']
138,get (.*) from (.*),"['the', 'average']","['xml', 'list']","['javax.xml.xpath.XPathFactory.newInstance', 'java.util.Calendar.getInstance', 'java.lang.Integer.valueOf', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
139,get (.*) from (.*),['value'],['actionlistener'],['javax.swing.JOptionPane.showInputDialog']
140,get (.*) from (.*),"['k', 'followersids']",['user'],['java.lang.System.arraycopy']
141,get (.*) from (.*),"['their', 'actions']","['action', 'commands']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel', 'javax.swing.KeyStroke.getKeyStroke']"
142,get (.*) from (.*),"['next', 'int']",['array'],"['java.lang.Thread.sleep', 'java.util.logging.Logger.getLogger']"
143,get (.*) from (.*),"['total', 'hours']","['two', 'timepicker']",['java.lang.Float.parseFloat']
144,get (.*) from (.*),"['the', 'string']","['stringbuilder', 'fast']","['java.lang.StringBuilder.toString', 'java.lang.StringBuilder.append']"
145,get (.*) from (.*),"['the', 'messages']","['other', 'clients']",['java.util.concurrent.Executors.newFixedThreadPool']
146,get (.*) from (.*),"['all', 'commits']",['today'],['java.util.Calendar.getInstance']
147,get (.*) from (.*),['value'],['object'],['javax.swing.JOptionPane.showConfirmDialog']
148,get (.*) from (.*),"['sub', 'image']",['image'],['java.lang.Math.min']
149,get (.*) from (.*),"['all', 'elements']",['arraylist'],['java.lang.String.join']
150,get (.*) from (.*),['values'],"['arraylist', 'java']",['java.text.MessageFormat.format']
151,get (.*) from (.*),"['files', 'crc']","['file', 'system']",['java.nio.file.Files.readAllBytes']
152,get (.*) from (.*),"['source', 'string']",['numberformatexception'],['java.lang.Integer.parseInt']
153,get (.*) from (.*),"['its', 'value']",['edittext'],['java.lang.Double.valueOf']
154,get (.*) from (.*),"['a', 'float']","['a', 'string']",['java.util.regex.Pattern.compile']
155,get (.*) from (.*),"['relative', 'scale']","['level', 'stack']","['java.lang.Math.log', 'java.lang.Math.pow']"
156,get (.*) from (.*),"['all', 'milliseconds']","['localtime', 'java']",['java.lang.System.currentTimeMillis']
157,get (.*) from (.*),['tooltip'],"['jcombobox', 'renderer']",['javax.swing.SwingUtilities.convertPoint']
158,get (.*) from (.*),['value'],"['excel', 'file']",['java.lang.Double.toString']
159,get (.*) from (.*),"['a', 'value']","['another', 'jvm']",['java.lang.Class.forName']
160,get (.*) from (.*),['duration'],['database'],['java.lang.System.currentTimeMillis']
161,get (.*) from (.*),['value'],['string'],"['java.util.Collections.sort', 'java.lang.Integer.parseInt']"
162,get (.*) from (.*),"['src', 'value']",['xml'],['java.util.regex.Pattern.compile']
163,get (.*) from (.*),"['precise', 'xpath']","['general', 'xpath']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
164,get (.*) from (.*),['text'],"['text', 'field']",['java.lang.Integer.parseInt']
165,get (.*) from (.*),"['class', 't']","['class', 't']",['java.lang.reflect.Array.newInstance']
166,get (.*) from (.*),"['i', 'd']","['href', 'selenium']",['java.lang.Integer.valueOf']
167,get (.*) from (.*),"['a', 'sortedmap']","['a', 'contentquerymap']",['java.lang.Long.valueOf']
168,get (.*) from (.*),"['a', 'value']","['a', 'element']","['javax.xml.xpath.XPathFactory.newInstance', 'java.util.Collections.singletonList']"
169,get (.*) from (.*),"['two', 'midnights']","['given', 'instant']",['java.time.ZoneId.of']
170,get (.*) from (.*),"['the', 'datetime']",['numberlong'],['java.lang.Long.parseLong']
171,get (.*) from (.*),"['integer', 'value']",['edittext'],['java.lang.Integer.parseInt']
172,get (.*) from (.*),['item'],['list'],['javax.swing.JOptionPane.showMessageDialog']
173,get (.*) from (.*),"['the', 'date']",['materialdatepicker'],['java.util.Calendar.getInstance']
174,get (.*) from (.*),"['specific', 'text']","['a', 'webpage']",['java.util.regex.Pattern.compile']
175,get (.*) from (.*),"['repeated', 'elements']",['list'],['java.util.Collections.frequency']
176,get (.*) from (.*),['type'],['string'],['java.lang.Class.forName']
177,get (.*) from (.*),"['split', 'filenames']",['string'],['java.util.regex.Pattern.compile']
178,get (.*) from (.*),['class'],"['generic', 'type']",['java.lang.Class.forName']
179,get (.*) from (.*),"['enum', 'values']","['enum', 'object']",['java.util.EnumSet.allOf']
180,get (.*) from (.*),"['particular', 'values']","['a', 'string']",['java.util.regex.Pattern.compile']
181,get (.*) from (.*),"['duplicate', 'values']",['arraylist'],['java.util.Collections.sort']
182,get (.*) from (.*),['text'],"['specific', 'tags']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
183,get (.*) from (.*),"['specific', 'data']","['mysql', 'database']",['java.lang.System.exit']
184,get (.*) from (.*),"['a', 'character']","['another', 'character']",['java.lang.Character.toChars']
185,get (.*) from (.*),"['an', 'element']","['a', 'string']",['java.util.regex.Pattern.compile']
186,get (.*) from (.*),['objects'],['list'],"['java.util.Map.get', 'java.util.Map.entrySet', 'java.util.Map.put']"
187,get (.*) from (.*),['string'],['string'],['java.util.regex.Pattern.compile']
188,get (.*) from (.*),"['arraylist', 'items']","['some', 'position']",['java.lang.Math.min']
189,get (.*) from (.*),"['the', 'integer']",['bigdecimal'],['java.math.BigDecimal.unscaledValue']
190,get (.*) from (.*),"['new', 'string']","['existing', 'string']",['java.util.regex.Pattern.compile']
191,get (.*) from (.*),"['simultaneos', 'input']","['key', 'listener']",['java.awt.event.KeyEvent.getKeyText']
192,get (.*) from (.*),['echo'],['server'],['java.net.URLEncoder.encode']
193,get (.*) from (.*),"['a', 'value']",['enum'],['java.lang.Enum.valueOf']
194,get (.*) from (.*),"['the', 'value']",['jcombobox'],['javax.swing.JOptionPane.showConfirmDialog']
195,get (.*) from (.*),['method'],['map'],"['java.util.Collections.synchronizedMap', 'java.util.concurrent.ConcurrentHashMap.putIfAbsent']"
196,get (.*) from (.*),"['the', 'values']",['database'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
197,get (.*) from (.*),"['the', 'date']","['a', 'calendar']","['java.lang.System.currentTimeMillis', 'java.util.Calendar.getInstance']"
198,get (.*) from (.*),['variables'],['it'],['java.util.regex.Pattern.compile']
199,get (.*) from (.*),"['var', 'information']","['another', 'jdialog']",['javax.swing.JOptionPane.showMessageDialog']
200,get (.*) from (.*),"['updated', 'value']","['a', 'varible']","['java.lang.Thread.sleep', 'java.util.concurrent.Executors.newCachedThreadPool']"
201,get (.*) from (.*),['converted'],['curl'],"['java.net.CookieHandler.getDefault', 'javax.net.ssl.SSLContext.getDefault', 'java.util.Arrays.stream', 'javax.net.ssl.SSLContext.setDefault', 'java.nio.file.Files.copy', 'java.net.HttpURLConnection.setFollowRedirects', 'javax.net.ssl.TrustManagerFactory.getInstance', 'java.net.HttpURLConnection.getFollowRedirects', 'javax.net.ssl.TrustManagerFactory.getDefaultAlgorithm', 'java.net.URLEncoder.encode', 'java.nio.file.Paths.get', 'java.net.CookieHandler.setDefault', 'java.net.URI.create', 'javax.net.ssl.SSLContext.getInstance']"
202,get (.*) from (.*),"['table', 'alias']","['sql', 'query']",['java.util.regex.Pattern.compile']
203,get (.*) from (.*),"['the', 'input']",['textfield'],"['java.lang.Double.toString', 'java.lang.Integer.parseInt']"
204,get (.*) from (.*),"['enum', 'constant']","['jsonproperty', 'value']",['java.lang.Enum.valueOf']
205,get (.*) from (.*),"['the', 'values']","['soap', 'response']","['java.util.Arrays.asList', 'java.util.regex.Pattern.compile']"
206,get (.*) from (.*),"['particular', 'string']","['a', 'response']",['java.util.regex.Pattern.compile']
207,get (.*) from (.*),"['directory', 'path']",['filedialog'],"['java.lang.System.setProperty', 'java.lang.System.getProperty']"
208,get (.*) from (.*),['value'],['url'],['java.util.regex.Pattern.compile']
209,get (.*) from (.*),"['header', 'info']","['web', 'directory']",['java.net.InetAddress.getByName']
210,get (.*) from (.*),['tagname'],"['json', 'googledirection']",['java.lang.Long.valueOf']
211,get (.*) from (.*),['text'],['piechart'],['java.util.ArrayList.get']
212,get (.*) from (.*),"['separate', 'objects']","['string', 'object']","['java.util.regex.Pattern.compile', 'java.lang.String.format']"
213,get (.*) from (.*),"['specific', 'element']","['xml', 'file']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
214,get (.*) from (.*),"['key', 'words']",['them'],['java.util.regex.Pattern.compile']
215,get (.*) from (.*),"['specific', 'substrings']",['strings'],['java.util.regex.Pattern.compile']
216,get (.*) from (.*),['emojis'],['hexacode'],['java.lang.Character.toChars']
217,get (.*) from (.*),"['largest', 'number']","['firebase', 'datalist']",['java.util.Collections.max']
218,get (.*) from (.*),"['certain', 'data']","['text', 'java']","['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
219,get (.*) from (.*),['responsebody'],"['httpservletresponse', 'java']",['java.util.logging.Logger.getLogger']
220,get (.*) from (.*),"['values', 'only']","['second', 'request']",['java.lang.String.valueOf']
221,get (.*) from (.*),['text'],['user'],['javax.swing.JOptionPane.showInputDialog']
222,get (.*) from (.*),['value'],['mainactivity'],['java.lang.Thread.sleep']
223,get (.*) from (.*),"['file', 'properties']","['res', 'folder']",['java.util.ResourceBundle.getBundle']
224,get (.*) from (.*),['results'],"['a', 'dataset']",['java.lang.Integer.parseInt']
0,add (.*) to (.*),"['new', 'elements']","['an', 'array']",['java.util.ArrayList.toArray']
1,add (.*) to (.*),"['an', 'image']","['a', 'jpanel']",['javax.imageio.ImageIO.read']
2,add (.*) to (.*),"['one', 'day']","['a', 'date']","['java.time.LocalDateTime.from', 'java.util.Calendar.getInstance']"
3,add (.*) to (.*),"['leading', 'zeroes']",['number'],['java.lang.String.format']
4,add (.*) to (.*),"['an', 'image']","['a', 'jbutton']",['javax.imageio.ImageIO.read']
5,add (.*) to (.*),['minutes'],"['my', 'date']",['java.util.Calendar.getInstance']
6,add (.*) to (.*),['resources'],['classpath'],['java.lang.ClassLoader.getSystemResource']
7,add (.*) to (.*),"['server', 'cert']","['keystore', 'programmatically']","['javax.net.ssl.SSLContext.getInstance', 'java.security.KeyStore.getInstance']"
8,add (.*) to (.*),['seconds'],['timestamp'],"['java.lang.System.currentTimeMillis', 'java.util.Calendar.getInstance']"
9,add (.*) to (.*),['them'],"['a', 'list']",['java.lang.ClassLoader.getSystemClassLoader']
10,add (.*) to (.*),['text'],"['an', 'image']","['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
11,add (.*) to (.*),['weeks'],"['a', 'date']",['java.util.Calendar.getInstance']
12,add (.*) to (.*),['values'],"['double', 'arraylist']",['java.lang.Double.parseDouble']
13,add (.*) to (.*),['jlabels'],['jpanel'],['javax.swing.SwingUtilities.invokeLater']
14,add (.*) to (.*),"['an', 'integer']","['a', 'char']",['java.lang.String.getBytes']
15,add (.*) to (.*),"['a', 'jlist']","['a', 'jscrollpane']",['javax.swing.SwingUtilities.invokeLater']
16,add (.*) to (.*),['padding'],"['a', 'jtextfield']",['javax.swing.BorderFactory.createEmptyBorder']
17,add (.*) to (.*),"['command', 'arguments']","['main', 'java']",['java.lang.Integer.parseInt']
18,add (.*) to (.*),"['an', 'image']",['form'],['javax.imageio.ImageIO.read']
19,add (.*) to (.*),['days'],"['a', 'date']",['java.util.Calendar.getInstance']
20,add (.*) to (.*),"['a', 'jfreechart']","['a', 'panel']",['java.awt.EventQueue.invokeLater']
21,add (.*) to (.*),"['new', 'element']",['varargs'],['java.util.Arrays.asList']
22,add (.*) to (.*),"['a', 'sound']","['your', 'program']",['javax.sound.sampled.AudioSystem.getAudioInputStream']
23,add (.*) to (.*),['jpanel'],"['jframe', 'netbeans']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.BorderFactory.createEmptyBorder']"
24,add (.*) to (.*),['them'],['array'],"['java.net.URLEncoder.encode', 'java.util.Base64.getEncoder', 'java.lang.String.format']"
25,add (.*) to (.*),"['a', 'jpanel']",['jframe'],['javax.swing.SwingUtilities.invokeLater']
26,add (.*) to (.*),['icon'],['jpanel'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
27,add (.*) to (.*),['object'],['jpanel'],['java.lang.Math.abs']
28,add (.*) to (.*),['arguments'],['varargs'],['java.lang.System.arraycopy']
29,add (.*) to (.*),"['an', 'imageicon']","['a', 'jtoolbar']",['javax.swing.SwingUtilities.invokeLater']
30,add (.*) to (.*),"['random', 'numbers']","['array', 'list']",['java.lang.Math.abs']
31,add (.*) to (.*),['actionlistener'],"['customize', 'component']",['java.awt.EventQueue.invokeLater']
32,add (.*) to (.*),"['external', 'css']","['html', 'style']",['java.nio.file.Files.readAllBytes']
33,add (.*) to (.*),['data'],['arraylist'],['java.lang.Integer.parseInt']
34,add (.*) to (.*),['item'],"['final', 'list']",['java.util.Arrays.asList']
35,add (.*) to (.*),['jlabel'],['jeditorpane'],['javax.swing.SwingUtilities.invokeLater']
36,add (.*) to (.*),"['xml', 'element']","['root', 'tag']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
37,add (.*) to (.*),"['shortcut', 'keys']",['jtextfield'],['javax.swing.KeyStroke.getKeyStroke']
38,add (.*) to (.*),['jtextfield'],['jtoolbar'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
39,add (.*) to (.*),['up'],"['some', 'value']",['java.lang.Math.round']
40,add (.*) to (.*),['mouselistener'],['jcheckbox'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
41,add (.*) to (.*),"['a', 'jscrollpane']","['a', 'jinternalframe']",['javax.swing.JOptionPane.showMessageDialog']
42,add (.*) to (.*),"['ssl', 'certificate']","['selenium', 'webdriver']",['java.lang.ClassLoader.getSystemClassLoader']
43,add (.*) to (.*),['elements'],"['an', 'xsd']",['javax.xml.xpath.XPathFactory.newInstance']
44,add (.*) to (.*),['checkcombobox'],"['propertysheet', 'javafx']","['java.util.Objects.equals', 'java.util.Objects.hashCode']"
45,add (.*) to (.*),['jpanel'],"['a', 'jframe']",['java.lang.Thread.sleep']
46,add (.*) to (.*),"['arraylist', 'string']",['table'],['java.lang.Integer.parseInt']
47,add (.*) to (.*),['integer'],['jlist'],['javax.swing.SwingUtilities.invokeLater']
48,add (.*) to (.*),"['exact', 'distance']","['gps', 'coordinates']","['java.lang.Math.sqrt', 'java.lang.Math.toRadians']"
49,add (.*) to (.*),"['timezone', 'offset']","['java', 'date']",['java.util.TimeZone.getDefault']
50,add (.*) to (.*),['it'],['jtable'],['javax.swing.SwingUtilities.invokeLater']
51,add (.*) to (.*),"['multiple', 'byte']","['one', 'array']",['java.lang.Math.min']
52,add (.*) to (.*),['opacity'],"['d', 'colorscale']",['java.lang.Math.round']
53,add (.*) to (.*),"['custom', 'headers']","['soap', 'response']","['javax.xml.datatype.DatatypeFactory.newInstance', 'javax.xml.bind.JAXBContext.newInstance', 'java.util.UUID.randomUUID']"
54,add (.*) to (.*),"['if', 'statements']",['joptionpane'],['javax.swing.JOptionPane.showOptionDialog']
55,add (.*) to (.*),['image'],['jpanel'],['javax.swing.JOptionPane.showMessageDialog']
56,add (.*) to (.*),"['xml', 'base']","['xml', 'file']",['java.util.logging.Logger.getLogger']
57,add (.*) to (.*),"['d', 'surface']","['the', 'anchorpane']","['java.lang.Math.sin', 'java.lang.Math.max']"
58,add (.*) to (.*),"['that', 'item']",['jlist'],['javax.swing.SwingUtilities.invokeLater']
59,add (.*) to (.*),"['flaglike', 'waving']","['d', 'context']",['java.lang.Math.sin']
60,add (.*) to (.*),['name'],"['array', 'feature']","['java.lang.Math.floor', 'java.lang.Math.random']"
61,add (.*) to (.*),"['a', 'method']","['a', 'jpanel']",['javax.swing.SwingUtilities.invokeLater']
62,add (.*) to (.*),"['each', 'column']","['different', 'array']",['java.util.Arrays.stream']
63,add (.*) to (.*),['jlabel'],['jpanel'],"['javax.imageio.ImageIO.read', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
64,add (.*) to (.*),"['dynamic', 'kml']","['google', 'earth']",['java.lang.Math.random']
65,add (.*) to (.*),"['multiple', 'values']",['dynamodb'],['java.util.Calendar.getInstance']
66,add (.*) to (.*),"['new', 'ingridients']",['list'],"['java.util.Collections.emptyList', 'java.util.Collections.unmodifiableList']"
67,add (.*) to (.*),['arguments'],"['the', 'actionperformed']",['javax.swing.SwingUtilities.invokeLater']
68,add (.*) to (.*),['progressmonitorinputstream'],"['ftp', 'upload']",['java.lang.Thread.sleep']
69,add (.*) to (.*),['arraylist'],['list'],['java.util.Collections.emptyList']
70,add (.*) to (.*),['startelement'],"['jaxbcontext', 'marshal']","['javax.xml.stream.XMLOutputFactory.newFactory', 'javax.xml.bind.JAXBContext.newInstance']"
71,add (.*) to (.*),['thread'],"['my', 'server']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.lang.System.exit']"
72,add (.*) to (.*),['text'],"['a', 'jframe']",['javax.swing.JOptionPane.showMessageDialog']
73,add (.*) to (.*),['jcomponent'],['jpanel'],['java.awt.Toolkit.getDefaultToolkit']
74,add (.*) to (.*),"['a', 'gui']",['class'],['javax.swing.SwingUtilities.invokeLater']
75,add (.*) to (.*),"['emty', 'space']",['jscrollpane'],"['javax.swing.SwingUtilities.getAncestorOfClass', 'java.awt.EventQueue.invokeLater']"
76,add (.*) to (.*),['border'],"['jmenu', 'button']",['javax.swing.UIManager.put']
77,add (.*) to (.*),['headers'],['zerocopypost'],['java.net.URI.create']
78,add (.*) to (.*),['jlabel'],"['existing', 'jtextfield']",['java.awt.EventQueue.invokeLater']
79,add (.*) to (.*),['field'],"['root', 'list']",['java.util.Objects.requireNonNull']
80,add (.*) to (.*),"['key', 'usage']",['certificatesigninginfo'],"['java.security.Signature.getInstance', 'java.security.KeyPairGenerator.getInstance']"
81,add (.*) to (.*),['image'],['jcheckboxmenuitem'],['javax.swing.SwingUtilities.invokeLater']
82,add (.*) to (.*),"['gradient', 'background']",['jtextarea'],['javax.swing.SwingUtilities.invokeLater']
83,add (.*) to (.*),['jpanel'],"['multiple', 'jframes']",['java.awt.Container.addImpl']
84,add (.*) to (.*),"['asm', 'library']","['java', 'project']",['java.lang.System.loadLibrary']
85,add (.*) to (.*),['them'],['arraylist'],['java.lang.Integer.parseInt']
86,add (.*) to (.*),"['any', 'control']",['window'],"['javax.imageio.ImageIO.read', 'java.awt.EventQueue.invokeLater', 'java.lang.System.exit', 'javax.swing.UIManager.setLookAndFeel']"
87,add (.*) to (.*),"['decimal', 'month']",['date'],['java.time.ZonedDateTime.now']
88,add (.*) to (.*),['scrollbar'],"['jframe', 'grid']",['java.awt.EventQueue.invokeLater']
89,add (.*) to (.*),['elements'],"['a', 'jscrollpanel']",['javax.swing.SwingUtilities.invokeLater']
90,add (.*) to (.*),"['count', 'constraint']",['xmlelement'],['javax.xml.validation.SchemaFactory.newInstance']
91,add (.*) to (.*),['components'],"['a', 'panel']",['javax.swing.JPopupMenu.setDefaultLightWeightPopupEnabled']
92,add (.*) to (.*),['rollover'],"['jtree', 'handles']","['java.awt.EventQueue.invokeLater', 'javax.swing.plaf.basic.BasicTreeUI.paintExpandControl']"
93,add (.*) to (.*),['elements'],['it'],['java.util.stream.Stream.builder']
94,add (.*) to (.*),"['a', 'background']","['a', 'jframe']","['javax.imageio.ImageIO.read', 'java.awt.EventQueue.invokeLater', 'java.awt.Desktop.getDesktop']"
95,add (.*) to (.*),"['custom', 'decoder']","['webmvc', 'endpoint']",['java.util.Collections.singleton']
96,add (.*) to (.*),"['a', 'border']","['an', 'image']",['java.awt.Graphics2D.drawImage']
97,add (.*) to (.*),['elements'],['list'],"['java.util.Arrays.asList', 'java.util.stream.IntStream.rangeClosed']"
98,add (.*) to (.*),['jpanel'],['jpanel'],"['javax.swing.SwingUtilities.invokeLater', 'java.awt.Graphics2D.rotate']"
99,add (.*) to (.*),"['null', 'values']","['mysql', 'database']",['java.lang.String.valueOf']
100,add (.*) to (.*),"['a', 'row']","['a', 'jtable']",['javax.swing.SwingUtilities.invokeLater']
101,add (.*) to (.*),['keybindings'],['program'],['javax.swing.SwingUtilities.invokeLater']
102,add (.*) to (.*),['elements'],"['java', 'array']",['java.lang.System.arraycopy']
103,add (.*) to (.*),"['method', 'equalsor']","['string', 'class']",['java.util.Arrays.asList']
104,add (.*) to (.*),['time'],"['hours', 'days']",['java.util.Calendar.getInstance']
105,add (.*) to (.*),"['multiple', 'jtable']",['jframe'],['javax.swing.JOptionPane.showMessageDialog']
106,add (.*) to (.*),['numbers'],"['matching', 'words']",['java.lang.String.valueOf']
107,add (.*) to (.*),"['a', 'jpanel']","['a', 'jframe']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
108,add (.*) to (.*),['lists'],"['another', 'list']",['java.lang.Integer.parseInt']
109,add (.*) to (.*),"['integers', 'from']",['n'],"['java.lang.Math.abs', 'java.lang.Math.pow']"
110,add (.*) to (.*),"['mouse', 'listener']","['joptionpane', 'button']",['javax.swing.UIManager.put']
111,add (.*) to (.*),['images'],"['a', 'listview']",['java.util.stream.Stream.of']
112,add (.*) to (.*),['array'],"['arraylist', 'java']",['java.lang.Float.valueOf']
113,add (.*) to (.*),['hours'],"['my', 'time']",['java.time.format.DateTimeFormatter.ofPattern']
114,add (.*) to (.*),"['a', 'delay']","['my', 'jtable']","['java.lang.Thread.sleep', 'java.lang.Thread.currentThread']"
115,add (.*) to (.*),['it'],"['a', 'var']",['java.lang.String.valueOf']
116,add (.*) to (.*),['text'],['jtextarea'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.SwingUtilities.getWindowAncestor']"
117,add (.*) to (.*),"['all', 'lines']","['a', 'string']",['java.nio.file.Files.readAllLines']
118,add (.*) to (.*),"['a', 'button']","['a', 'panel']","['java.awt.EventQueue.invokeLater', 'java.lang.System.exit', 'javax.swing.JOptionPane.showMessageDialog']"
119,add (.*) to (.*),['days'],['calendar'],['java.time.LocalDate.now']
120,add (.*) to (.*),['image'],['jbutton'],['javax.imageio.ImageIO.read']
121,add (.*) to (.*),['preparedstatement'],"['select', 'statement']",['java.lang.Integer.parseInt']
122,add (.*) to (.*),"['a', 'value']",['time'],['java.util.Calendar.getInstance']
123,add (.*) to (.*),['it'],"['link', 'automatically']",['java.lang.String.valueOf']
124,add (.*) to (.*),"['mutlidimensional', 'array']",['arraylist'],['java.util.stream.IntStream.range']
125,add (.*) to (.*),['it'],"['a', 'list']",['java.util.regex.Pattern.compile']
126,add (.*) to (.*),['image'],['postgresql'],['java.nio.file.Files.readAllBytes']
0,get (.*) of (.*),"['only', 'part']","['an', 'array']",['java.util.Arrays.copyOfRange']
1,get (.*) of (.*),"['an', 'array']",['ints'],['java.util.regex.Pattern.compile']
2,get (.*) of (.*),['day'],"['the', 'month']","['java.lang.String.valueOf', 'java.util.Calendar.getInstance']"
3,get (.*) of (.*),"['first', 'date']","['current', 'month']","['java.util.Calendar.getInstance', 'java.time.LocalDate.now']"
4,get (.*) of (.*),"['the', 'metadata']","['a', 'file']",['java.nio.file.Files.readAttributes']
5,get (.*) of (.*),['rgb'],"['a', 'bufferedimage']",['javax.imageio.ImageIO.read']
6,get (.*) of (.*),"['week', 'number']","['localdate', 'java']",['java.time.temporal.WeekFields.of']
7,get (.*) of (.*),"['date', 'as']","['hours', 'ago']",['java.util.Calendar.getInstance']
8,get (.*) of (.*),"['mac', 'address']",['system'],"['java.net.InetAddress.getLocalHost', 'java.net.NetworkInterface.getNetworkInterfaces']"
9,get (.*) of (.*),"['last', 'friday']",['month'],['java.util.Calendar.getInstance']
10,get (.*) of (.*),"['a', 'list']","['installed', 'printers']",['javax.print.PrintServiceLookup.lookupPrintServices']
11,get (.*) of (.*),['source'],['website'],['java.util.regex.Pattern.compile']
12,get (.*) of (.*),"['the', 'weekday']","['a', 'date']",['java.util.Calendar.getInstance']
13,get (.*) of (.*),"['eol', 'character']","['any', 'file']",['java.lang.System.getProperty']
14,get (.*) of (.*),"['specific', 'part']",['string'],['java.util.regex.Pattern.compile']
15,get (.*) of (.*),['list'],['packages'],['java.lang.Package.getPackages']
16,get (.*) of (.*),"['string', 'representation']",['xmltype'],['javax.xml.bind.JAXBContext.newInstance']
17,get (.*) of (.*),['value'],"['hashmap', 'array']",['java.lang.Integer.parseInt']
18,get (.*) of (.*),"['default', 'border']",['jbutton'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.UIManager.getBorder']"
19,get (.*) of (.*),"['absolute', 'path']",['project'],['java.io.File.createTempFile']
20,get (.*) of (.*),"['the', 'timestamp']","['previous', 'dates']",['java.util.Calendar.getInstance']
21,get (.*) of (.*),"['last', 'day']","['previous', 'month']",['java.util.Calendar.getInstance']
22,get (.*) of (.*),"['the', 'offset']","['a', 'string']",['java.lang.String.indexOf']
23,get (.*) of (.*),['name'],"['enclosing', 'method']",['java.lang.StackTraceElement.getMethodName']
24,get (.*) of (.*),['list'],"['supported', 'locales']",['java.util.Locale.getAvailableLocales']
25,get (.*) of (.*),"['binary', 'value']","['any', 'file']","['java.lang.Integer.toHexString', 'java.lang.Integer.toBinaryString']"
26,get (.*) of (.*),"['an', 'instance']",['fontmetrics'],['java.awt.Toolkit.getDefaultToolkit']
27,get (.*) of (.*),"['maximized', 'size']",['frame'],['java.awt.EventQueue.invokeLater']
28,get (.*) of (.*),"['the', 'number']",['stars'],['java.lang.String.valueOf']
29,get (.*) of (.*),['namespace'],['xml'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
30,get (.*) of (.*),['name'],"['the', 'month']","['java.util.Locale.getDefault', 'java.util.Calendar.getInstance']"
31,get (.*) of (.*),"['third', 'friday']","['a', 'month']",['java.util.Calendar.getInstance']
32,get (.*) of (.*),"['current', 'frequency']","['audio', 'input']",['java.lang.Math.sqrt']
33,get (.*) of (.*),"['all', 'properties']",['class'],['java.beans.Introspector.getBeanInfo']
34,get (.*) of (.*),"['all', 'subfolders']","['some', 'folder']",['java.nio.file.Files.walk']
35,get (.*) of (.*),['path'],"['specific', 'bufferedimage']",['javax.imageio.ImageIO.read']
36,get (.*) of (.*),"['relative', 'path']","['two', 'uris']","['java.util.Arrays.copyOf', 'java.net.URI.create']"
37,get (.*) of (.*),"['line', 'number']","['method', 'caller']","['java.lang.Thread.currentThread', 'java.lang.Thread.getStackTrace']"
38,get (.*) of (.*),"['an', 'instance']",['rsaprivatekey'],['java.security.KeyFactory.getInstance']
39,get (.*) of (.*),"['string', 'out']","['the', 'brackets']",['java.util.regex.Pattern.compile']
40,get (.*) of (.*),"['the', 'time']","['different', 'timezone']","['java.util.TimeZone.getTimeZone', 'java.text.DateFormat.format']"
41,get (.*) of (.*),"['a', 'range']",['values'],['java.util.stream.IntStream.range']
42,get (.*) of (.*),['string'],"['inner', 'node']",['javax.xml.stream.XMLInputFactory.newInstance']
43,get (.*) of (.*),"['the', 'index']","['an', 'array']",['java.util.Arrays.asList']
44,get (.*) of (.*),"['the', 'intensity']","['a', 'pixel']",['javax.imageio.ImageIO.read']
45,get (.*) of (.*),"['pixel', 'color']",['texture'],['java.nio.ByteBuffer.allocateDirect']
46,get (.*) of (.*),['position'],"['common', 'elements']",['java.util.Collections.indexOfSubList']
47,get (.*) of (.*),['class'],"['generic', 'argument']",['java.lang.Enum.valueOf']
48,get (.*) of (.*),"['the', 'palindrome']","['a', 'string']",['java.lang.StringBuilder.reverse']
49,get (.*) of (.*),"['an', 'inputstream']","['a', 'file']",['java.lang.System.exit']
50,get (.*) of (.*),"['origin', 'class']","['object', 'instance']","['java.lang.Thread.dumpStack', 'java.lang.Thread.currentThread']"
51,get (.*) of (.*),['count'],"['thread', 'instances']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.lang.Thread.activeCount']"
52,get (.*) of (.*),"['all', 'properties']","['an', 'entity']",['java.beans.Introspector.getBeanInfo']
53,get (.*) of (.*),['rid'],['null'],['java.util.Arrays.stream']
54,get (.*) of (.*),"['correct', 'width']","['fonts', 'char']",['java.awt.FontMetrics.charWidth']
55,get (.*) of (.*),"['int', 'value']",['edittext'],['java.lang.Integer.parseInt']
56,get (.*) of (.*),['handle'],"['the', 'process']","['java.lang.Thread.sleep', 'java.lang.Runtime.getRuntime']"
57,get (.*) of (.*),['stream'],"['byte', 'array']","['java.util.stream.IntStream.builder', 'java.util.stream.IntStream.range']"
58,get (.*) of (.*),"['a', 'list']","['classes', 'lambdas']","['java.lang.invoke.MethodHandles.lookup', 'java.lang.invoke.LambdaMetafactory.metafactory', 'java.lang.invoke.MethodType.methodType']"
59,get (.*) of (.*),"['device', 'configuration']","['android', 'mobile']",['java.lang.System.getProperty']
60,get (.*) of (.*),['center'],"['each', 'shape']",['java.lang.Math.toRadians']
61,get (.*) of (.*),"['actual', 'height']",['element'],"['java.lang.Math.sin', 'java.lang.Math.cos']"
62,get (.*) of (.*),['out'],"['error', 'message']","['javax.swing.JOptionPane.showInputDialog', 'java.lang.Double.parseDouble']"
63,get (.*) of (.*),['links'],"['webpage', 'source']",['java.util.regex.Pattern.compile']
64,get (.*) of (.*),"['surrounding', 'element']",['javascript'],['java.lang.Math.floor']
65,get (.*) of (.*),['gifdecoder'],['gifdrawable'],['java.lang.Class.forName']
66,get (.*) of (.*),['output'],"['groovy', 'script']",['java.lang.System.setOut']
67,get (.*) of (.*),"['the', 'description']","['a', 'file']",['java.lang.Runtime.getRuntime']
68,get (.*) of (.*),"['one', 'result']","['tf', 'idf']",['java.lang.Math.log10']
69,get (.*) of (.*),"['the', 'year']","['a', 'temporal']",['java.time.LocalDate.now']
70,get (.*) of (.*),['collection'],['methods'],"['java.util.Arrays.stream', 'java.lang.reflect.Modifier.isStatic']"
71,get (.*) of (.*),"['last', 'character']","['korean', 'word']",['java.lang.Math.round']
72,get (.*) of (.*),['day'],['week'],['java.time.LocalDate.get']
73,get (.*) of (.*),['output'],"['getbooksbyauthor', 'method']",['java.lang.Double.doubleToLongBits']
74,get (.*) of (.*),['average'],"['third', 'property']","['java.util.stream.Collectors.groupingBy', 'java.util.stream.Collectors.averagingDouble']"
75,get (.*) of (.*),['rid'],"['newline', 'characters']",['java.util.regex.Pattern.compile']
76,get (.*) of (.*),"['thumb', 'icon']","['swing', 'jslider']",['javax.swing.UIManager.getDefaults']
77,get (.*) of (.*),"['last', 'thursday']",['month'],"['java.time.LocalDate.of', 'java.util.Calendar.getInstance']"
78,get (.*) of (.*),['week'],"['selected', 'date']",['java.util.Calendar.getInstance']
79,get (.*) of (.*),['part'],"['exception', 'message']",['java.util.regex.Pattern.compile']
80,get (.*) of (.*),['length'],"['a', 'jformattedtextfield']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
81,get (.*) of (.*),"['background', 'color']","['xssfsimpleshape', 'object']","['java.lang.Math.max', 'java.lang.Math.min']"
82,get (.*) of (.*),['pixels'],['subimage'],['java.awt.image.BufferedImage.getData']
83,get (.*) of (.*),['instance'],"['any', 'class']",['java.beans.Introspector.decapitalize']
84,get (.*) of (.*),"['first', 'day']","['next', 'month']","['java.time.temporal.TemporalAdjusters.firstDayOfNextMonth', 'java.time.LocalDate.of']"
85,get (.*) of (.*),"['formatted', 'value']","['environment', 'variable']",['java.lang.System.getenv']
86,get (.*) of (.*),['sunday'],"['any', 'day']",['java.util.Calendar.getInstance']
87,get (.*) of (.*),"['some', 'parts']","['a', 'string']",['java.util.regex.Pattern.compile']
88,get (.*) of (.*),"['strings', 'instead']",['ints'],['java.util.Scanner.hasNext']
89,get (.*) of (.*),['text'],"['each', 'jtextarea']",['java.lang.String.valueOf']
90,get (.*) of (.*),"['attribute', 'value']","['specfic', 'tag']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
91,get (.*) of (.*),"['correct', 'values']","['screen', 'resolution']",['java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment']
92,get (.*) of (.*),"['epoch', 'limits']","['java', 'chronology']",['java.time.chrono.Chronology.range']
93,get (.*) of (.*),['matrix'],"['unknown', 'size']",['java.lang.Math.random']
94,get (.*) of (.*),['rid'],"['dead', 'windows']",['java.awt.Window.getWindows']
95,get (.*) of (.*),"['the', 'class']","['a', 'variable']",['java.lang.Object.getClass']
96,get (.*) of (.*),"['a', 'segment']","['an', 'url']",['java.util.regex.Pattern.compile']
97,get (.*) of (.*),['values'],"['different', 'lookandfeels']",['javax.swing.UIManager.setLookAndFeel']
98,get (.*) of (.*),['content'],"['a', 'file']",['java.io.File.listFiles']
99,get (.*) of (.*),['title'],"['root', 'window']",['javax.swing.SwingUtilities.windowForComponent']
100,get (.*) of (.*),['part'],['string'],['java.util.regex.Pattern.compile']
101,get (.*) of (.*),"['the', 'child']",['child'],['java.lang.String.valueOf']
102,get (.*) of (.*),"['the', 'value']","['the', 'points']","['java.awt.geom.AffineTransform.getRotateInstance', 'java.lang.Math.toRadians']"
103,get (.*) of (.*),['result'],['completablefuture'],['java.util.concurrent.CompletableFuture.allOf']
104,get (.*) of (.*),"['a', 'list']","['active', 'programs']",['java.lang.Runtime.getRuntime']
105,get (.*) of (.*),"['some', 'part']","['particular', 'word']",['java.util.regex.Pattern.compile']
106,get (.*) of (.*),"['the', 'intersection']","['two', 'lists']",['java.lang.Object.equals']
107,get (.*) of (.*),['numbers'],['monitors'],['java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment']
108,get (.*) of (.*),"['the', 'index']","['an', 'array']",['java.util.Arrays.asList']
109,get (.*) of (.*),"['a', 'part']","['a', 'string']",['java.lang.String.lastIndexOf']
110,get (.*) of (.*),['rid'],"['drawn', 'lines']",['java.awt.EventQueue.invokeLater']
111,get (.*) of (.*),['generic'],['generic'],['java.util.Optional.of']
112,get (.*) of (.*),"['matches', 'group']",['regex'],['java.util.regex.Pattern.compile']
113,get (.*) of (.*),['sum'],"['incoming', 'matrices']",['java.lang.Double.valueOf']
114,get (.*) of (.*),"['previous', 'occurrence']","['a', 'localtime']","['java.time.ZonedDateTime.ofInstant', 'java.time.Instant.now']"
115,get (.*) of (.*),"['a', 'range']",['results'],"['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
116,get (.*) of (.*),['series'],['thumbnails'],['java.lang.String.format']
117,get (.*) of (.*),"['all', 'occurrences']",['bigrams'],['java.util.regex.Pattern.compile']
118,get (.*) of (.*),['date'],"['specific', 'week']","['java.time.LocalDate.of', 'java.time.temporal.WeekFields.of']"
119,get (.*) of (.*),['number'],"['exact', 'substrings']",['java.util.regex.Pattern.compile']
120,get (.*) of (.*),"['last', 'element']",['hasset'],['java.util.Collections.sort']
121,get (.*) of (.*),"['additional', 'attribute']","['enum', 'value']",['java.util.EnumSet.of']
122,get (.*) of (.*),"['maximum', 'result']","['a', 'calculation']","['java.lang.Math.max', 'java.lang.Math.sqrt']"
123,get (.*) of (.*),['day'],"['the', 'month']",['java.time.LocalDate.of']
124,get (.*) of (.*),['length'],"['array', 'element']",['java.lang.Integer.parseInt']
125,get (.*) of (.*),"['sorted', 'values']",['matrix'],['java.util.stream.IntStream.range']
126,get (.*) of (.*),"['a', 'portion']","['a', 'string']",['java.util.regex.Pattern.compile']
127,get (.*) of (.*),"['the', 'directory']","['another', 'file']",['java.lang.System.getProperty']
128,get (.*) of (.*),"['generic', 'parameter']","['interface', 'implementation']",['java.lang.Class.getGenericInterfaces']
129,get (.*) of (.*),"['the', 'runtime']","['another', 'method']",['java.lang.System.currentTimeMillis']
130,get (.*) of (.*),"['the', 'time']","['created', 'button']",['java.lang.System.currentTimeMillis']
131,get (.*) of (.*),"['gray', 'scale']","['an', 'image']",['javax.imageio.ImageIO.read']
132,get (.*) of (.*),"['current', 'size']","['jpanel', 'jframe']","['java.awt.EventQueue.invokeLater', 'javax.swing.BorderFactory.createEmptyBorder', 'javax.swing.UIManager.setLookAndFeel']"
133,get (.*) of (.*),"['the', 'value']","['the', 'column']",['java.lang.Double.parseDouble']
134,get (.*) of (.*),"['parentheses', 'part']",['string'],['java.util.regex.Pattern.compile']
0,get (.*) in (.*),"['combobox', 'value']","['java', 'swing']",['javax.swing.JComboBox.getSelectedItem']
1,get (.*) in (.*),"['utc', 'date']",['java'],"['java.util.Date.from', 'java.time.OffsetDateTime.now']"
2,get (.*) in (.*),['date'],"['current', 'timezone']","['java.util.TimeZone.getTimeZone', 'java.util.TimeZone.getAvailableIDs', 'java.util.Calendar.getInstance']"
3,get (.*) in (.*),"['default', 'zoneoffset']",['java'],"['java.time.ZoneId.of', 'java.time.LocalDate.of', 'java.time.OffsetDateTime.now', 'java.time.ZoneId.systemDefault']"
4,get (.*) in (.*),"['current', 'year']",['android'],['java.util.Calendar.getInstance']
5,get (.*) in (.*),"['object', 'value']","['json', 'array']",['java.lang.String.valueOf']
6,get (.*) in (.*),['date'],['est'],['java.util.TimeZone.setDefault']
7,get (.*) in (.*),"['group', 'names']","['java', 'regex']",['java.util.regex.Pattern.compile']
8,get (.*) in (.*),"['back', 'response']",['servlet'],"['java.net.URLEncoder.encode', 'java.lang.String.format']"
9,get (.*) in (.*),"['current', 'filename']",['jsp'],['java.util.logging.Logger.getLogger']
10,get (.*) in (.*),"['time', 'printed']",['ist'],['java.util.TimeZone.getDefault']
11,get (.*) in (.*),['time'],['london'],"['java.util.TimeZone.getTimeZone', 'java.lang.System.currentTimeMillis', 'java.time.Instant.now']"
12,get (.*) in (.*),"['server', 'response']","['the', 'client']",['java.util.logging.Logger.getLogger']
13,get (.*) in (.*),"['last', 'day']","['next', 'month']",['java.util.Calendar.getInstance']
14,get (.*) in (.*),"['field', 'class']","['annotations', 'processor']",['javax.lang.model.util.ElementFilter.fieldsIn']
15,get (.*) in (.*),"['current', 'day']",['milliseconds'],"['java.util.Calendar.getInstance', 'java.time.LocalDate.now']"
16,get (.*) in (.*),['url'],"['the', 'browser']",['java.lang.System.setProperty']
17,get (.*) in (.*),"['matched', 'terms']",['query'],['java.lang.System.exit']
18,get (.*) in (.*),['permissions'],['safari'],['java.lang.System.getProperty']
19,get (.*) in (.*),"['mq', 'messageid']","['string', 'format']",['java.lang.Integer.toString']
20,get (.*) in (.*),['output'],"['jaxb', 'marshaling']",['javax.xml.bind.JAXBContext.newInstance']
21,get (.*) in (.*),"['all', 'files']","['a', 'package']",['java.nio.file.Files.walk']
22,get (.*) in (.*),"['all', 'packages']","['a', 'project']","['java.lang.Class.forName', 'java.net.URLDecoder.decode', 'java.lang.Thread.currentThread']"
23,get (.*) in (.*),"['around', 'capcha']",['selenium'],['java.lang.Thread.sleep']
24,get (.*) in (.*),['it'],['swtbot'],['java.util.UUID.randomUUID']
25,get (.*) in (.*),['attribute'],['xml'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
26,get (.*) in (.*),['timezones'],"['iana', 'format']","['java.time.ZoneId.of', 'java.time.ZoneId.getAvailableZoneIds', 'java.util.TimeZone.getAvailableIDs']"
27,get (.*) in (.*),['components'],"['display', 'order']","['java.awt.EventQueue.invokeLater', 'java.util.Collections.sort', 'javax.swing.SwingUtilities.convertPoint', 'javax.swing.UIManager.setLookAndFeel']"
28,get (.*) in (.*),"['current', 'hour']","['milliseconds', 'format']",['java.time.LocalDateTime.of']
29,get (.*) in (.*),"['custom', 'userdetails']",['securitycontextholder'],['java.lang.Integer.toString']
30,get (.*) in (.*),"['new', 'line']","['simple', 'email']",['java.lang.System.getProperty']
31,get (.*) in (.*),"['all', 'queues']","['a', 'session']",['javax.management.remote.JMXConnectorFactory.connect']
32,get (.*) in (.*),['methods'],"['source', 'order']",['javax.lang.model.element.TypeElement.getEnclosedElements']
33,get (.*) in (.*),['locale'],['fragment'],['java.util.Locale.setDefault']
34,get (.*) in (.*),"['return', 'code']","['shutdown', 'hook']","['java.lang.Runtime.getRuntime', 'java.lang.System.exit']"
35,get (.*) in (.*),"['d', 'array']",['java'],"['java.lang.Integer.parseInt', 'java.util.stream.Stream.of']"
36,get (.*) in (.*),['duration'],['microseconds'],['java.time.Duration.ofSeconds']
37,get (.*) in (.*),"['the', 'logged']",['user'],"['java.security.AccessController.getContext', 'javax.security.auth.Subject.getSubject']"
38,get (.*) in (.*),"['annotation', 'parameter']","['annotation', 'processor']",['javax.lang.model.element.Element.getAnnotationMirrors']
39,get (.*) in (.*),"['interval', 'date']",['android'],['java.util.Calendar.getInstance']
40,get (.*) in (.*),"['current', 'date']",['jsp'],['java.util.Calendar.getInstance']
41,get (.*) in (.*),"['method', 'name']",['android'],['java.lang.Thread.currentThread']
42,get (.*) in (.*),"['each', 'year']","['a', 'period']","['java.time.LocalDate.of', 'java.time.LocalDate.now']"
43,get (.*) in (.*),"['sysdate', 'days']",['jsp'],['java.util.Calendar.getInstance']
44,get (.*) in (.*),"['java', 'boolean']",['javascript'],['java.lang.Boolean.toString']
45,get (.*) in (.*),"['number', 'not']","['scientific', 'notation']",['java.lang.Double.parseDouble']
46,get (.*) in (.*),"['same', 'date']","['different', 'timezone']","['java.time.ZonedDateTime.ofInstant', 'java.time.LocalDateTime.parse', 'java.time.Instant.ofEpochMilli', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.ZoneId.of']"
47,get (.*) in (.*),"['invoker', 'object']","['my', 'callback']",['java.lang.reflect.Proxy.newProxyInstance']
48,get (.*) in (.*),"['the', 'bigdemical']",['sqlite'],['java.math.BigDecimal.valueOf']
49,get (.*) in (.*),['called'],"['jlabel', 'animation']","['java.lang.Thread.sleep', 'java.awt.AlphaComposite.getInstance']"
50,get (.*) in (.*),['values'],['opengts'],['javax.xml.bind.JAXBContext.newInstance']
51,get (.*) in (.*),"['interval', 'date']",['android'],['java.util.Calendar.getInstance']
52,get (.*) in (.*),"['user', 'input']",['utf'],"['java.lang.System.console', 'java.lang.System.exit']"
53,get (.*) in (.*),"['resized', 'correctly']",['button'],['java.lang.Math.min']
54,get (.*) in (.*),['request'],"['rest', 'assured']",['java.lang.Thread.sleep']
55,get (.*) in (.*),"['caller', 'method']",['java'],['java.lang.invoke.MethodHandles.lookup']
56,get (.*) in (.*),['result'],['getcellformula'],['java.text.NumberFormat.getNumberInstance']
57,get (.*) in (.*),"['all', 'classes']","['a', 'class']","['java.lang.Class.getDeclaredClasses', 'java.lang.Class.getClasses']"
58,get (.*) in (.*),"['it', 'repeat']","['a', 'loop']","['java.lang.System.nanoTime', 'java.lang.String.valueOf']"
59,get (.*) in (.*),"['file', 'size']",['truzip'],['java.io.File.length']
60,get (.*) in (.*),['length'],"['type', 'input']",['java.lang.String.valueOf']
61,get (.*) in (.*),['sublist'],"['python', 'way']",['java.util.Arrays.asList']
62,get (.*) in (.*),['result'],['o'],"['java.lang.System.nanoTime', 'java.lang.Thread.sleep', 'java.util.concurrent.ThreadLocalRandom.current']"
63,get (.*) in (.*),"['to', 'split']","['two', 'places']","['java.util.Arrays.toString', 'java.lang.Integer.parseInt']"
64,get (.*) in (.*),"['equal', 'characters']","['a', 'string']",['java.util.regex.Pattern.compile']
65,get (.*) in (.*),['elements'],['list'],['java.util.stream.IntStream.range']
66,get (.*) in (.*),['request'],['spring'],['java.util.Arrays.asList']
67,get (.*) in (.*),['locked'],"['wait', 'state']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.lang.Thread.sleep', 'java.lang.Runtime.getRuntime']"
68,get (.*) in (.*),['key'],"['a', 'object']",['java.lang.Object.toString']
69,get (.*) in (.*),['age'],"['years', 'alone']","['java.util.Calendar.getInstance', 'java.lang.String.format']"
70,get (.*) in (.*),"['getlastmodifiedtime', 'path']","['timeunit', 'days']","['java.time.Duration.between', 'java.time.Instant.now', 'java.nio.file.Files.getLastModifiedTime']"
71,get (.*) in (.*),['sum'],"['jtable', 'colmn']",['java.lang.Integer.parseInt']
72,get (.*) in (.*),['userdetails'],['securityerrorhandler'],['java.util.Base64.getDecoder']
73,get (.*) in (.*),['everything'],['between'],['java.util.regex.Pattern.compile']
74,get (.*) in (.*),"['a', 'word']","['a', 'pattern']",['java.util.regex.Pattern.compile']
75,get (.*) in (.*),['anything'],"['the', 'class']",['javax.xml.bind.JAXBContext.newInstance']
0,remove (.*) from (.*),"['line', 'breaks']","['a', 'file']",['java.lang.System.getProperty']
1,remove (.*) from (.*),"['an', 'element']","['a', 'list']",['java.lang.String.split']
2,remove (.*) from (.*),['objects'],"['an', 'array']","['java.util.Arrays.asList', 'java.util.Collections.addAll']"
3,remove (.*) from (.*),"['leading', 'zeros']","['alphanumeric', 'text']",['java.lang.String.replaceFirst']
4,remove (.*) from (.*),"['null', 'value']","['string', 'array']",['java.util.Arrays.stream']
5,remove (.*) from (.*),['duplicates'],['arraylists'],['java.util.Arrays.asList']
6,remove (.*) from (.*),"['a', 'jpanel']","['a', 'jframe']","['java.lang.Thread.sleep', 'javax.swing.SwingUtilities.invokeLater', 'java.awt.Container.remove']"
7,remove (.*) from (.*),"['multiple', 'elements']",['arraylist'],['java.util.Collections.sort']
8,remove (.*) from (.*),['milliseconds'],"['a', 'timestamp']",['java.util.Calendar.getInstance']
9,remove (.*) from (.*),"['all', 'zeros']",['array'],['java.lang.System.arraycopy']
10,remove (.*) from (.*),"['a', 'task']",['scheduledexecutorservice'],"['java.lang.Thread.sleep', 'java.util.concurrent.Executors.newScheduledThreadPool']"
11,remove (.*) from (.*),['element'],['set'],"['java.util.Set.remove', 'java.util.Iterator.remove']"
12,remove (.*) from (.*),['accents'],['string'],['java.text.Normalizer.normalize']
13,remove (.*) from (.*),"['duplicate', 'element']","['the', 'set']","['java.util.Arrays.asList', 'java.util.Arrays.equals']"
14,remove (.*) from (.*),"['duplicate', 'values']","['a', 'string']","['java.util.Arrays.stream', 'java.util.Arrays.asList']"
15,remove (.*) from (.*),"['diacritical', 'marks']","['unicode', 'chars']","['java.text.Normalizer.normalize', 'java.util.regex.Pattern.compile', 'java.lang.String.valueOf']"
16,remove (.*) from (.*),"['many', 'items']",['list'],"['java.lang.System.currentTimeMillis', 'java.lang.Runtime.getRuntime']"
17,remove (.*) from (.*),"['the', 'brackets']","['arraylist', 'tostring']",['java.lang.String.valueOf']
18,remove (.*) from (.*),"['even', 'numbers']","['an', 'arraylist']",['java.util.Collections.sort']
19,remove (.*) from (.*),['punctuation'],['string'],['java.util.regex.Pattern.compile']
20,remove (.*) from (.*),['jsessionid'],['url'],['java.util.Collections.singleton']
21,remove (.*) from (.*),"['arraylist', 'object']",['memory'],['java.util.ArrayList.remove']
22,remove (.*) from (.*),"['unwanted', 'tags']",['xml'],"['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
23,remove (.*) from (.*),['diacritics'],['string'],['java.text.Normalizer.normalize']
24,remove (.*) from (.*),"['empty', 'header']","['soap', 'message']",['javax.xml.soap.MessageFactory.newInstance']
25,remove (.*) from (.*),['calendarview'],['datepickerdialogfragment'],['java.util.Calendar.getInstance']
26,remove (.*) from (.*),"['authorization', 'header']","['a', 'httpservletrequest']",['java.util.Collections.enumeration']
27,remove (.*) from (.*),"['sql', 'comments']","['a', 'string']",['java.util.regex.Pattern.compile']
28,remove (.*) from (.*),['comma'],['textfield'],['java.lang.Double.parseDouble']
29,remove (.*) from (.*),['rows'],['jtable'],['javax.swing.SwingUtilities.invokeLater']
30,remove (.*) from (.*),"['default', 'keystrokes']","['any', 'jcomponent']",['javax.swing.KeyStroke.getKeyStroke']
31,remove (.*) from (.*),"['focus', 'border']","['dialogues', 'buttons']",['javax.swing.UIManager.getLookAndFeelDefaults']
32,remove (.*) from (.*),"['certain', 'lines']","['a', 'stringbuffer']",['java.util.regex.Pattern.compile']
33,remove (.*) from (.*),"['an', 'object']","['a', 'list']",['java.util.List.remove']
34,remove (.*) from (.*),"['hexadecimal', 'characters']",['url'],['java.net.URLDecoder.decode']
35,remove (.*) from (.*),['classname'],['output'],['java.lang.ClassLoader.getSystemResource']
36,remove (.*) from (.*),"['plural', 'suffix']","['a', 'word']",['java.lang.String.replaceAll']
37,remove (.*) from (.*),"['blue', 'color']",['jtabbedpane'],"['javax.swing.UIManager.getSystemLookAndFeelClassName', 'javax.swing.UIManager.setLookAndFeel']"
38,remove (.*) from (.*),['elements'],"['multiple', 'threads']",['java.util.Collections.synchronizedList']
39,remove (.*) from (.*),['pattern'],['string'],['java.util.regex.Pattern.compile']
40,remove (.*) from (.*),"['dead', 'threads']",['container'],"['java.util.concurrent.Executors.newFixedThreadPool', 'java.util.concurrent.Executors.newCachedThreadPool']"
41,remove (.*) from (.*),"['gray', 'background']","['scanned', 'image']","['java.lang.Math.round', 'java.lang.Math.min']"
42,remove (.*) from (.*),"['a', 'timestamp']",['string'],['java.util.regex.Pattern.compile']
43,remove (.*) from (.*),"['duplicate', 'substrings']",['string'],['java.util.regex.Pattern.compile']
44,remove (.*) from (.*),['duplicates'],"['a', 'string']",['java.util.stream.Stream.of']
45,remove (.*) from (.*),['duplicates'],"['list', 'string']",['java.util.Arrays.asList']
46,remove (.*) from (.*),"['base', 'prefix']",['inputstream'],['java.util.Base64.getDecoder']
47,remove (.*) from (.*),"['last', 'character']",['jtextpane'],['javax.swing.text.Document.remove']
48,remove (.*) from (.*),"['some', 'characters']","['a', 'string']",['java.util.Calendar.getInstance']
49,remove (.*) from (.*),"['the', 'zeros']","['an', 'integer']","['java.lang.Integer.parseInt', 'java.lang.String.valueOf']"
50,remove (.*) from (.*),"['blacklisted', 'words']","['a', 'sentence']",['java.util.regex.Pattern.compile']
51,remove (.*) from (.*),['elements'],"['the', 'set']",['java.util.Collections.synchronizedSet']
52,remove (.*) from (.*),['timestamp'],"['gwt', 'logger']",['java.util.logging.Logger.getLogger']
53,remove (.*) from (.*),"['blank', 'rows']",['jtable'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
54,remove (.*) from (.*),['row'],"['multidimensional', 'array']",['java.lang.System.arraycopy']
55,remove (.*) from (.*),['elements'],"['xml', 'file']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
56,remove (.*) from (.*),['cdata'],['dom'],['java.util.regex.Pattern.compile']
57,remove (.*) from (.*),"['an', 'object']","['a', 'collection']","['java.util.Set.remove', 'java.util.concurrent.ConcurrentHashMap.newKeySet']"
58,remove (.*) from (.*),"['console', 'logs']","['selenium', 'webdriver']",['java.util.logging.LogManager.getLogManager']
59,remove (.*) from (.*),"['empty', 'string']","['regex', 'output']",['java.util.regex.Pattern.compile']
60,remove (.*) from (.*),['item'],"['comparable', 'array']",['java.util.Iterator.remove']
61,remove (.*) from (.*),['white'],"['jbutton', 'icon']","['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write', 'javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
62,remove (.*) from (.*),"['current', 'element']",['list'],['java.lang.Thread.sleep']
63,remove (.*) from (.*),"['specific', 'string']",['string'],['java.util.regex.Pattern.compile']
64,remove (.*) from (.*),"['all', 'output']",['jtidy'],['java.lang.System.setErr']
65,remove (.*) from (.*),"['all', 'items']",['arraylist'],['javax.swing.JOptionPane.showMessageDialog']
66,remove (.*) from (.*),['nulls'],"['java', 'array']",['java.util.Arrays.stream']
67,remove (.*) from (.*),"['specific', 'jars']","['custom', 'classloader']","['java.lang.Thread.setContextClassLoader', 'java.util.WeakHashMap.get', 'java.lang.ClassLoader.loadClass']"
68,remove (.*) from (.*),['abstractaction'],['jtable'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JFrame.setDefaultLookAndFeelDecorated']"
69,remove (.*) from (.*),"['hashmap', 'key']",['string'],['java.util.Collections.unmodifiableMap']
70,remove (.*) from (.*),"['leading', 'zero']","['time', 'hours']",['java.time.format.DateTimeFormatter.ofPattern']
71,remove (.*) from (.*),"['rectangle', 'objects']","['linked', 'list']",['javax.swing.SwingUtilities.invokeLater']
72,remove (.*) from (.*),"['millisecond', 'precision']","['long', 'value']",['java.time.Instant.ofEpochMilli']
73,remove (.*) from (.*),"['unique', 'elements']",['arraylist'],['java.util.Arrays.asList']
74,remove (.*) from (.*),"['duplicate', 'string']","['both', 'arrays']",['java.util.Arrays.asList']
75,remove (.*) from (.*),['regex'],"['string', 'array']",['java.util.Arrays.toString']
76,remove (.*) from (.*),['actionlistener'],"['a', 'class']",['java.awt.EventQueue.invokeLater']
77,remove (.*) from (.*),"['duplicate', 'values']","['a', 'string']",['java.util.Arrays.asList']
78,remove (.*) from (.*),"['key', 'value']",['url'],['java.util.regex.Pattern.compile']
79,remove (.*) from (.*),"['array', 'list']",['enumeration'],['java.util.Arrays.asList']
80,remove (.*) from (.*),"['duplicate', 'documents']",['topdocs'],['java.lang.Integer.compare']
81,remove (.*) from (.*),"['last', 'separator']","['print', 'statement']",['java.util.Arrays.stream']
82,remove (.*) from (.*),"['repeated', 'objects']",['arraylist'],['java.util.function.Function.identity']
83,remove (.*) from (.*),"['duplicate', 'key']","['a', 'hashmap']",['java.util.Arrays.asList']
84,remove (.*) from (.*),"['specific', 'entries']",['hashmap'],['java.lang.System.currentTimeMillis']
85,remove (.*) from (.*),"['duplicate', 'elements']","['list', 'string']","['java.util.Arrays.asList', 'java.util.Arrays.sort']"
86,remove (.*) from (.*),"['port', 'number']","['a', 'url']",['java.net.URI.create']
87,remove (.*) from (.*),['duplicated'],"['multiple', 'array']",['java.util.Arrays.asList']
88,remove (.*) from (.*),"['integer', 'part']",['string'],['java.util.Arrays.asList']
89,remove (.*) from (.*),"['a', 'number']","['a', 'string']",['java.util.regex.Pattern.compile']
90,remove (.*) from (.*),['items'],"['a', 'array']",['java.lang.System.arraycopy']
91,remove (.*) from (.*),"['esc', 'characters']",['string'],['java.nio.file.Files.write']
92,remove (.*) from (.*),['element'],['list'],"['java.util.Arrays.asList', 'java.lang.Integer.valueOf']"
93,remove (.*) from (.*),['element'],['list'],['java.util.Arrays.asList']
94,remove (.*) from (.*),"['a', 'rigidarea']","['a', 'jpanel']",['javax.swing.Box.createRigidArea']
95,remove (.*) from (.*),"['null', 'values']","['array', 'output']",['java.lang.System.arraycopy']
96,remove (.*) from (.*),['matches'],['string'],['java.util.regex.Pattern.compile']
97,remove (.*) from (.*),"['this', 'character']","['my', 'regex']",['java.util.regex.Pattern.compile']
98,remove (.*) from (.*),['duplicated'],"['my', 'code']",['java.lang.System.nanoTime']
99,remove (.*) from (.*),"['an', 'object']","['a', 'method']",['java.util.Arrays.stream']
100,remove (.*) from (.*),"['title', 'bar']",['jfilechooser'],['javax.swing.SwingUtilities.windowForComponent']
101,remove (.*) from (.*),['zeros'],['begining'],['java.util.regex.Pattern.compile']
102,remove (.*) from (.*),['evaluating'],"['array', 'exp']",['java.util.regex.Pattern.compile']
0,issue (.*) with (.*),"['in', 'curl']",['runtime'],['java.lang.Runtime.getRuntime']
1,issue (.*) with (.*),['enum'],"['underlying', 'class']",['java.util.Collections.unmodifiableSet']
0,convert (.*) into (.*),"['java', 'string']",['byte'],"['java.util.Arrays.toString', 'java.lang.Object.toString']"
1,convert (.*) into (.*),['long'],['integer'],['java.lang.Math.toIntExact']
2,convert (.*) into (.*),"['jtextfield', 'input']","['an', 'integer']",['java.lang.Integer.parseInt']
3,convert (.*) into (.*),['int'],['arraylist'],['java.util.Arrays.asList']
4,convert (.*) into (.*),['md'],['string'],['java.security.MessageDigest.getInstance']
5,convert (.*) into (.*),['seconds'],['hhmmss'],['java.time.Duration.ofSeconds']
6,convert (.*) into (.*),"['a', 'character']",['binary'],['java.lang.Integer.toBinaryString']
7,convert (.*) into (.*),"['arraylist', 'integer']","['arraylist', 'long']",['java.util.Arrays.asList']
8,convert (.*) into (.*),"['iso', 'format']",['milliseconds'],"['java.time.Duration.between', 'java.time.Instant.parse']"
9,convert (.*) into (.*),"['zip', 'file']",['bytes'],['java.nio.file.Files.readAllBytes']
10,convert (.*) into (.*),['cosine'],['degrees'],['java.lang.Math.acos']
11,convert (.*) into (.*),"['byte', 'array']","['integer', 'value']","['java.nio.ByteBuffer.getInt', 'java.nio.ByteBuffer.wrap']"
12,convert (.*) into (.*),['string'],['integer'],['java.lang.Integer.parseInt']
13,convert (.*) into (.*),['image'],['pixels'],"['javax.imageio.ImageIO.read', 'java.lang.Integer.toHexString']"
14,convert (.*) into (.*),"['a', 'callable']","['a', 'runnable']",['java.util.concurrent.Executor.execute']
15,convert (.*) into (.*),"['nested', 'list']","['multidimensional', 'array']","['java.lang.reflect.Array.newInstance', 'java.lang.reflect.Array.set']"
16,convert (.*) into (.*),"['resultset', 'rs']","['integer', 'netbeans']",['java.lang.Integer.parseInt']
17,convert (.*) into (.*),['string'],"['int', 'array']",['java.nio.ByteBuffer.allocate']
18,convert (.*) into (.*),"['image', 'file']","['integer', 'array']","['java.awt.image.Raster.getPixels', 'java.awt.image.BufferedImage.getData']"
19,convert (.*) into (.*),['array'],"['a', 'map']",['java.util.stream.IntStream.range']
20,convert (.*) into (.*),"['t', 'z']","['local', 'time']",['javax.xml.bind.DatatypeConverter.parseDateTime']
21,convert (.*) into (.*),['stringbuilder'],['charbuffer'],['java.nio.CharBuffer.wrap']
22,convert (.*) into (.*),"['c', 'datetime']","['gregoriancalendar', 'date']",['java.util.Calendar.set']
23,convert (.*) into (.*),['darray'],"['d', 'arraylist']",['java.util.Arrays.asList']
24,convert (.*) into (.*),"['the', 'time']","['uk', 'time']",['java.util.TimeZone.getTimeZone']
25,convert (.*) into (.*),['them'],['ints'],['java.lang.Integer.parseInt']
26,convert (.*) into (.*),"['integer', 'values']",['letters'],['java.lang.Integer.parseInt']
27,convert (.*) into (.*),"['short', 'bits']","['an', 'int']",['java.nio.ByteBuffer.allocate']
28,convert (.*) into (.*),['char'],"['a', 'vector']",['java.util.stream.IntStream.range']
29,convert (.*) into (.*),"['strings', 'of']",['bytes'],"['java.lang.Long.toBinaryString', 'java.lang.Long.parseLong']"
30,convert (.*) into (.*),['char'],"['ascii', 'value']",['java.lang.Integer.valueOf']
31,convert (.*) into (.*),"['edittext', 'enter']",['float'],['java.lang.Float.parseFloat']
32,convert (.*) into (.*),"['an', 'integer']","['hours', 'format']",['java.lang.String.format']
33,convert (.*) into (.*),"['an', 'array']","['an', 'listiterator']",['java.util.Arrays.asList']
34,convert (.*) into (.*),['string'],['bitvector'],['java.util.BitSet.set']
35,convert (.*) into (.*),['string'],"['nested', 'arraylist']","['java.util.Collections.reverse', 'java.lang.Character.toString']"
36,convert (.*) into (.*),"['list', 'stream']","['single', 'container']",['java.util.stream.Collectors.toSet']
37,convert (.*) into (.*),"['n', 't']",['not'],['java.util.regex.Pattern.compile']
38,convert (.*) into (.*),"['json', 'response']",['date'],['java.time.LocalDateTime.parse']
39,convert (.*) into (.*),"['matlab', 'output']",['arraylist'],['java.util.Arrays.asList']
40,convert (.*) into (.*),"['raw', 'image']","['signed', 'bit']","['java.lang.Integer.toString', 'java.nio.ByteBuffer.wrap']"
41,convert (.*) into (.*),"['a', 'long']","['printable', 'bytes']","['java.lang.Long.toString', 'java.lang.Long.parseLong', 'java.math.BigInteger.valueOf']"
42,convert (.*) into (.*),['map'],['dto'],['java.lang.String.valueOf']
43,convert (.*) into (.*),"['java', 'string']","['keyvalue', 'pair']",['java.util.regex.Pattern.compile']
44,convert (.*) into (.*),['table'],['string'],['java.util.Arrays.toString']
45,convert (.*) into (.*),['time'],['milliseconds'],['java.util.Calendar.getTimeInMillis']
46,convert (.*) into (.*),"['parse', 'string']",['arraylist'],['java.util.Arrays.asList']
47,convert (.*) into (.*),['it'],"['a', 'string']",['java.lang.System.getProperty']
48,convert (.*) into (.*),"['following', 'program']","['generic', 'program']",['java.lang.System.arraycopy']
49,convert (.*) into (.*),['collections'],"['a', 'map']",['java.util.stream.IntStream.range']
50,convert (.*) into (.*),"['primitive', 'boolean']","['primitive', 'int']",['java.lang.Boolean.valueOf']
51,convert (.*) into (.*),"['a', 'string']","['an', 'array']",['java.lang.Integer.parseInt']
52,convert (.*) into (.*),"['a', 'jsonobject']","['a', 'defaultmutabletreenode']",['java.util.Arrays.copyOf']
0,extract (.*) from (.*),"['numeric', 'values']","['input', 'string']",['java.util.regex.Pattern.compile']
1,extract (.*) from (.*),"['a', 'substring']","['a', 'string']",['java.lang.Integer.parseInt']
2,extract (.*) from (.*),"['multiple', 'integers']","['a', 'string']",['java.lang.Integer.parseInt']
3,extract (.*) from (.*),['double'],"['a', 'string']",['java.lang.Double.parseDouble']
4,extract (.*) from (.*),"['hash', 'tag']",['string'],['java.util.regex.Pattern.compile']
5,extract (.*) from (.*),"['image', 'url']","['html', 'code']",['java.util.regex.Pattern.compile']
6,extract (.*) from (.*),['word'],['string'],['java.util.regex.Pattern.compile']
7,extract (.*) from (.*),"['raw', 'certificate']","['pkcs', 'file']",['java.security.cert.CertificateFactory.getInstance']
8,extract (.*) from (.*),['date'],['string'],['java.util.regex.Pattern.compile']
9,extract (.*) from (.*),"['ip', 'port']","['strings', 'java']",['java.util.regex.Pattern.compile']
10,extract (.*) from (.*),"['public', 'key']","['x', 'cert']",['java.security.cert.CertificateFactory.getInstance']
11,extract (.*) from (.*),"['only', 'number']","['a', 'string']",['java.util.regex.Pattern.compile']
12,extract (.*) from (.*),['hashtags'],['string'],['java.util.regex.Pattern.compile']
13,extract (.*) from (.*),['data'],"['xml', 'file']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
14,extract (.*) from (.*),"['xml', 'value']","['xml', 'element']",['javax.xml.bind.JAXBContext.newInstance']
15,extract (.*) from (.*),['substring'],"['url', 'string']",['java.util.regex.Pattern.compile']
16,extract (.*) from (.*),['time'],"['unix', 'timestamp']",['java.text.DateFormat.getTimeInstance']
17,extract (.*) from (.*),"['phone', 'number']",['string'],['java.util.regex.Pattern.compile']
18,extract (.*) from (.*),['dates'],"['web', 'page']",['java.util.regex.Pattern.compile']
19,extract (.*) from (.*),"['a', 'word']","['given', 'string']",['java.util.regex.Pattern.compile']
20,extract (.*) from (.*),['parts'],"['a', 'string']",['java.util.regex.Pattern.compile']
21,extract (.*) from (.*),['integers'],['string'],['java.util.regex.Pattern.compile']
22,extract (.*) from (.*),['bits'],"['byte', 'array']",['java.util.BitSet.valueOf']
23,extract (.*) from (.*),['link'],"['string', 'value']",['java.util.regex.Pattern.compile']
24,extract (.*) from (.*),['string'],"['xml', 'java']",['org.xml.sax.helpers.XMLReaderFactory.createXMLReader']
25,extract (.*) from (.*),"['image', 'name']","['url', 'java']",['java.net.URLDecoder.decode']
26,extract (.*) from (.*),"['given', 'substring']","['a', 'paragraph']",['java.util.regex.Pattern.compile']
27,extract (.*) from (.*),['code'],"['sms', 'android']",['java.util.regex.Pattern.compile']
28,extract (.*) from (.*),"['float', 'values']","['a', 'string']",['java.lang.Float.parseFloat']
29,extract (.*) from (.*),['text'],"['square', 'bracket']",['java.util.regex.Pattern.compile']
30,extract (.*) from (.*),"['image', 'url']","['a', 'string']",['java.util.regex.Pattern.compile']
31,extract (.*) from (.*),['ids'],['string'],['java.util.regex.Pattern.compile']
32,extract (.*) from (.*),"['some', 'variables']","['a', 'string']",['java.util.regex.Pattern.compile']
33,extract (.*) from (.*),"['unselectable', 'content']",['pdf'],['java.lang.String.format']
34,extract (.*) from (.*),"['last', 'numbers']",['string'],['java.util.regex.Pattern.compile']
35,extract (.*) from (.*),"['job', 'experience']","['a', 'text']",['java.util.regex.Pattern.compile']
36,extract (.*) from (.*),"['specific', 'value']","['complex', 'json']",['java.util.regex.Pattern.compile']
37,extract (.*) from (.*),"['specific', 'value']","['complex', 'json']",['java.util.regex.Pattern.compile']
38,extract (.*) from (.*),['coefficents'],"['quadratic', 'equation']","['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
39,extract (.*) from (.*),"['the', 'balance']","['a', 'string']",['java.util.regex.Pattern.compile']
40,extract (.*) from (.*),['pid'],"['ps', 'command']",['java.util.regex.Matcher.find']
41,extract (.*) from (.*),"['symbol', 'characters']",['docx'],['java.lang.Character.codePointAt']
42,extract (.*) from (.*),['value'],"['long', 'string']",['java.util.regex.Pattern.compile']
43,extract (.*) from (.*),['values'],"['insert', 'query']",['java.util.regex.Pattern.compile']
44,extract (.*) from (.*),"['variable', 'values']",['string'],['java.util.regex.Pattern.compile']
45,extract (.*) from (.*),['numbers'],"['a', 'string']",['java.util.regex.Pattern.compile']
46,extract (.*) from (.*),['layers'],['svg'],"['javax.xml.xpath.XPathFactory.newInstance', 'java.util.logging.Logger.getLogger']"
47,extract (.*) from (.*),['numbers'],"['a', 'string']",['java.util.regex.Pattern.compile']
48,extract (.*) from (.*),['strings'],"['csv', 'file']",['java.util.regex.Pattern.compile']
49,extract (.*) from (.*),['mfcc'],"['wavfiles', 'java']",['javax.sound.sampled.AudioSystem.getAudioInputStream']
50,extract (.*) from (.*),['data'],"['dc', 'tag']",['org.w3c.dom.Node.getTextContent']
51,extract (.*) from (.*),['arguments'],"['string', 'pattern']","['java.util.Arrays.asList', 'java.util.regex.Pattern.compile', 'java.lang.String.format']"
52,extract (.*) from (.*),['string'],['buffer'],['java.lang.Integer.parseInt']
53,extract (.*) from (.*),['urls'],['sms'],['java.util.regex.Pattern.compile']
54,extract (.*) from (.*),"['a', 'double']","['a', 'string']",['java.lang.Double.parseDouble']
55,extract (.*) from (.*),['body'],"['twilio', 'request']",['java.lang.Integer.parseInt']
56,extract (.*) from (.*),['float'],['string'],['java.util.regex.Pattern.compile']
57,extract (.*) from (.*),"['multiline', 'values']","['a', 'file']",['java.util.regex.Pattern.compile']
58,extract (.*) from (.*),['numbers'],"['a', 'string']","['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
59,extract (.*) from (.*),"['arraylist', 'data']",['textfile'],"['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
60,extract (.*) from (.*),"['some', 'strings']","['a', 'string']",['java.util.regex.Pattern.compile']
61,extract (.*) from (.*),"['particular', 'string']",['string'],['java.util.regex.Pattern.compile']
62,extract (.*) from (.*),"['full', 'name']","['a', 'url']","['java.util.Arrays.asList', 'java.util.regex.Pattern.compile']"
63,extract (.*) from (.*),"['the', 'number']","['a', 'string']",['java.lang.Integer.parseInt']
64,extract (.*) from (.*),['numbers'],['string'],['java.lang.Integer.parseInt']
65,extract (.*) from (.*),['information'],['text'],['java.util.regex.Pattern.compile']
66,extract (.*) from (.*),"['i', 'd']",['byte'],['java.nio.ByteBuffer.wrap']
67,extract (.*) from (.*),"['only', 'values']","['string', 'tags']",['java.util.regex.Pattern.compile']
68,extract (.*) from (.*),"['sub', 'string']","['a', 'string']",['java.util.regex.Pattern.compile']
69,extract (.*) from (.*),"['certain', 'string']","['other', 'string']",['java.util.regex.Pattern.compile']
70,extract (.*) from (.*),['username'],['string'],['java.util.regex.Pattern.compile']
71,extract (.*) from (.*),"['bracket', 'data']",['string'],['java.util.regex.Pattern.compile']
72,extract (.*) from (.*),['weeknumbers'],['string'],['java.util.regex.Pattern.compile']
73,extract (.*) from (.*),['data'],['string'],['java.util.regex.Pattern.compile']
74,extract (.*) from (.*),['numbers'],['string'],['java.util.regex.Pattern.compile']
75,extract (.*) from (.*),['expressions'],"['input', 'string']",['java.util.regex.Pattern.compile']
76,extract (.*) from (.*),['substring'],['regex'],['java.util.regex.Pattern.compile']
77,extract (.*) from (.*),"['soap', 'message']","['mime', 'attachemnt']",['javax.xml.transform.TransformerFactory.newInstance']
78,extract (.*) from (.*),"['query', 'value']",['url'],['java.util.Arrays.stream']
0,read (.*) from (.*),"['xml', 'response']","['a', 'url']","['org.xml.sax.helpers.XMLReaderFactory.createXMLReader', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
1,read (.*) from (.*),"['the', 'output']","['java', 'exec']",['java.lang.System.exit']
2,read (.*) from (.*),['input'],"['text', 'file']",['java.nio.file.Files.readAllLines']
3,read (.*) from (.*),['image'],['url'],"['javax.imageio.ImageIO.read', 'java.awt.Toolkit.getDefaultToolkit']"
4,read (.*) from (.*),['arrays'],['user'],['java.lang.Integer.parseInt']
5,read (.*) from (.*),"['jdbc', 'connection']","['xml', 'file']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance', 'java.lang.Thread.currentThread']"
6,read (.*) from (.*),['values'],"['text', 'file']",['java.lang.Double.parseDouble']
7,read (.*) from (.*),"['xml', 'document']",['url'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
8,read (.*) from (.*),"['in', 'double']","['java', 'jtextfield']",['java.lang.Double.parseDouble']
9,read (.*) from (.*),"['signed', 'int']",['bytes'],['java.nio.ByteBuffer.wrap']
10,read (.*) from (.*),['numbers'],"['a', 'file']","['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
11,read (.*) from (.*),['silently'],['stdin'],['java.lang.System.console']
12,read (.*) from (.*),"['meta', 'data']","['manifest', 'file']",['java.lang.Thread.sleep']
13,read (.*) from (.*),['attribute'],['server'],['javax.management.remote.JMXConnectorFactory.connect']
14,read (.*) from (.*),['certificates'],"['windows', 'store']",['java.security.KeyStore.getInstance']
15,read (.*) from (.*),"['an', 'image']",['stream'],"['javax.imageio.ImageIO.createImageInputStream', 'javax.imageio.ImageIO.getImageReaders']"
16,read (.*) from (.*),['integers'],"['text', 'file']",['java.lang.Integer.parseInt']
17,read (.*) from (.*),"['x', 'bytes']","['a', 'stream']",['java.io.DataInputStream.readFully']
18,read (.*) from (.*),['json'],"['server', 'java']",['java.util.Arrays.asList']
19,read (.*) from (.*),"['multiple', 'input']","['same', 'line']",['java.lang.String.split']
20,read (.*) from (.*),['string'],"['socket', 'channel']","['java.nio.ByteBuffer.allocate', 'java.nio.CharBuffer.wrap', 'java.nio.charset.Charset.forName']"
21,read (.*) from (.*),['data'],"['text', 'file']","['java.lang.Double.valueOf', 'java.nio.file.Files.readAllLines', 'java.lang.Integer.valueOf']"
22,read (.*) from (.*),"['the', 'body']","['post', 'request']",['java.lang.Integer.valueOf']
23,read (.*) from (.*),['byte'],['file'],['java.nio.ByteBuffer.wrap']
24,read (.*) from (.*),"['files', 'sequentially']","['a', 'directory']","['java.lang.Integer.compare', 'java.nio.file.Files.walkFileTree', 'java.util.regex.Pattern.compile', 'java.util.Objects.requireNonNull']"
25,read (.*) from (.*),"['all', 'objects']",['file'],['java.nio.file.Files.move']
26,read (.*) from (.*),"['jpg', 'file']",['url'],['javax.imageio.ImageIO.read']
27,read (.*) from (.*),['text'],['file'],['java.lang.System.nanoTime']
28,read (.*) from (.*),['time'],"['text', 'file']",['java.util.Date.toString']
29,read (.*) from (.*),"['swift', 'message']","['file', 'properly']","['java.nio.file.FileSystems.getDefault', 'java.nio.file.Files.move', 'java.lang.Double.parseDouble', 'java.util.regex.Pattern.compile']"
30,read (.*) from (.*),['long'],['file'],"['java.nio.ByteBuffer.getLong', 'java.nio.LongBuffer.array']"
31,read (.*) from (.*),"['user', 'input']","['tomcat', 'startup']",['java.lang.System.getenv']
32,read (.*) from (.*),['in'],"['file', 'java']",['java.lang.Math.sqrt']
33,read (.*) from (.*),['image'],"['another', 'directory']",['javax.imageio.ImageIO.read']
34,read (.*) from (.*),"['numeric', 'value']",['excel'],['java.lang.String.valueOf']
35,read (.*) from (.*),['double'],['keyboard'],"['java.lang.Double.parseDouble', 'java.lang.Integer.parseInt']"
36,read (.*) from (.*),['text'],['line'],"['java.util.Comparator.comparingInt', 'java.util.stream.Stream.concat', 'java.util.stream.Stream.of', 'java.util.stream.StreamSupport.stream', 'java.nio.file.Files.write']"
37,read (.*) from (.*),"['csv', 'file']",['package'],['java.lang.Thread.currentThread']
38,read (.*) from (.*),"['null', 'values']","['csv', 'file']",['java.lang.String.valueOf']
39,read (.*) from (.*),"['schema', 'file']",['document'],['javax.xml.validation.SchemaFactory.newInstance']
40,read (.*) from (.*),['files'],"['jrt', 'image']","['java.nio.file.FileSystems.getFileSystem', 'java.nio.file.Files.readAllBytes']"
41,read (.*) from (.*),['files'],"['big', 'directory']",['java.nio.file.Paths.get']
42,read (.*) from (.*),['input'],['terminal'],['java.lang.Thread.sleep']
43,read (.*) from (.*),"['weighted', 'graph']","['text', 'file']",['java.nio.file.Files.readAllLines']
44,read (.*) from (.*),"['keep', 'transparency']","['png', 'files']",['javax.swing.SwingUtilities.invokeLater']
45,read (.*) from (.*),"['property', 'push']",['undefined'],['java.util.logging.Logger.getLogger']
46,read (.*) from (.*),"['multiple', 'objects']","['a', 'file']",['java.lang.Integer.parseInt']
47,read (.*) from (.*),"['long', 'integers']",['txt'],['java.lang.Double.valueOf']
48,read (.*) from (.*),"['a', 'number']","['a', 'txt']",['java.lang.Integer.valueOf']
49,read (.*) from (.*),"['image', 'data']","['ico', 'files']",['javax.imageio.ImageIO.read']
50,read (.*) from (.*),['xml'],['socket'],['java.util.logging.Logger.getLogger']
51,read (.*) from (.*),"['specific', 'lines']",['excel'],"['java.nio.file.Paths.get', 'java.nio.charset.Charset.forName', 'java.nio.file.Files.readAllLines']"
52,read (.*) from (.*),['input'],['jar'],['javax.sound.midi.MidiSystem.getSequence']
53,read (.*) from (.*),"['scattered', 'data']","['multiple', 'files']","['java.nio.ByteBuffer.allocate', 'java.lang.Integer.reverseBytes']"
54,read (.*) from (.*),"['accented', 'strings']","['properties', 'file']",['java.nio.charset.Charset.forName']
55,read (.*) from (.*),"['input', 'file']",['bin'],"['java.lang.ClassLoader.getSystemResourceAsStream', 'java.net.URL.getFile']"
56,read (.*) from (.*),['times'],"['text', 'file']","['java.io.RandomAccessFile.seek', 'java.io.RandomAccessFile.readInt']"
57,read (.*) from (.*),['write'],['class'],['java.util.Collections.sort']
58,read (.*) from (.*),['data'],['gui'],['javax.imageio.ImageIO.write']
59,read (.*) from (.*),['integers'],"['that', 'file']",['java.util.Scanner.nextLine']
60,read (.*) from (.*),"['these', 'data']","['a', 'file']","['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
61,read (.*) from (.*),['numbers'],"['txt', 'file']",['java.lang.Integer.parseInt']
62,read (.*) from (.*),"['test', 'data']",['excel'],['java.lang.System.getProperty']
63,read (.*) from (.*),"['the', 'arguments']",['console'],['java.lang.System.getProperty']
64,read (.*) from (.*),['bytes'],"['gb', 'file']","['java.nio.ByteBuffer.allocate', 'java.nio.channels.FileChannel.open']"
65,read (.*) from (.*),['data'],['javadb'],['java.lang.Class.forName']
66,read (.*) from (.*),"['an', 'image']","['other', 'host']",['javax.imageio.ImageIO.read']
67,read (.*) from (.*),['it'],['database'],"['java.time.Duration.between', 'java.time.Instant.ofEpochMilli', 'java.time.OffsetDateTime.of', 'java.time.Instant.parse', 'java.time.ZoneId.of', 'java.time.ZoneId.systemDefault']"
68,read (.*) from (.*),['data'],['file'],"['java.lang.Long.parseLong', 'java.lang.Double.parseDouble', 'java.lang.Math.round']"
69,read (.*) from (.*),['usernames'],['file'],"['java.util.regex.Pattern.quote', 'java.util.regex.Pattern.matches']"
70,read (.*) from (.*),['numbers'],"['awt', 'textfields']",['java.lang.Integer.parseInt']
71,read (.*) from (.*),"['byte', 'array']","['write', 'method']",['org.omg.CORBA.portable.OutputStream.write']
72,read (.*) from (.*),"['multiple', 'inputs']","['one', 'line']",['java.lang.Integer.parseInt']
73,read (.*) from (.*),"['different', 'inputs']","['inputstream', 'java']",['java.security.MessageDigest.getInstance']
74,read (.*) from (.*),"['specific', 'data']","['firebase', 'database']",['java.lang.String.valueOf']
0,create (.*) from (.*),['object'],"['xml', 'string']",['javax.xml.bind.JAXBContext.newInstance']
1,create (.*) from (.*),"['new', 'object']","['a', 'string']",['java.lang.Class.forName']
2,create (.*) from (.*),"['a', 'stream']","['an', 'array']","['java.util.Arrays.stream', 'java.util.stream.StreamSupport.stream', 'java.util.stream.Stream.of']"
3,create (.*) from (.*),"['biginteger', 'instance']","['int', 'value']",['java.math.BigInteger.valueOf']
4,create (.*) from (.*),"['jar', 'file']","['command', 'line']","['java.net.URLClassLoader.findClass', 'java.security.AccessController.doPrivileged', 'java.lang.ClassLoader.loadClass']"
5,create (.*) from (.*),"['png', 'image']","['a', 'byte']","['javax.imageio.ImageIO.write', 'java.awt.image.Raster.createInterleavedRaster']"
6,create (.*) from (.*),['stringbuilder'],['byte'],"['java.lang.System.currentTimeMillis', 'java.nio.charset.Charset.forName', 'java.nio.ByteBuffer.wrap']"
7,create (.*) from (.*),['pdf'],"['binary', 'data']",['java.util.Base64.getDecoder']
8,create (.*) from (.*),['bytestring'],['int'],['java.nio.ByteBuffer.allocate']
9,create (.*) from (.*),"['stream', 't']","['single', 'object']",['java.util.stream.Stream.of']
10,create (.*) from (.*),"['xml', 'file']","['java', 'object']",['javax.xml.bind.JAXBContext.newInstance']
11,create (.*) from (.*),['bitmap'],['glsurfaceview'],['java.nio.IntBuffer.wrap']
12,create (.*) from (.*),['image'],"['pixel', 'array']",['javax.imageio.ImageIO.write']
13,create (.*) from (.*),['jwk'],"['rsa', 'publickey']",['java.util.Base64.getUrlEncoder']
14,create (.*) from (.*),['envelope'],"['given', 'source']",['javax.xml.soap.MessageFactory.newInstance']
15,create (.*) from (.*),"['pkcs', 'signature']","['file', 'digest']","['java.security.cert.CertificateFactory.getInstance', 'java.security.MessageDigest.getInstance', 'java.util.Arrays.asList']"
16,create (.*) from (.*),"['jaxbelement', 'book']",['string'],['javax.xml.bind.JAXBContext.newInstance']
17,create (.*) from (.*),"['x', 'amount']",['them'],"['java.util.Arrays.hashCode', 'java.util.Arrays.equals', 'java.lang.Math.min', 'java.util.Arrays.toString', 'java.util.Arrays.copyOf']"
18,create (.*) from (.*),['xml'],['map'],['javax.xml.bind.JAXBContext.newInstance']
19,create (.*) from (.*),['bytes'],['bits'],['java.lang.Integer.toHexString']
20,create (.*) from (.*),"['an', 'object']","['a', 'classpath']","['java.lang.Class.forName', 'java.net.URLClassLoader.newInstance']"
21,create (.*) from (.*),['file'],"['java', 'applet']",['java.security.AccessController.doPrivileged']
22,create (.*) from (.*),"['a', 'map']","['a', 'longstream']",['java.util.stream.LongStream.range']
23,create (.*) from (.*),"['xml', 'document']",['string'],"['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
24,create (.*) from (.*),['topic'],['code'],"['java.nio.ByteBuffer.allocate', 'java.lang.Integer.parseInt', 'java.nio.ByteBuffer.wrap']"
25,create (.*) from (.*),"['swing', 'component']",['string'],['java.lang.Class.forName']
26,create (.*) from (.*),['list'],['array'],['java.util.Arrays.fill']
27,create (.*) from (.*),['stream'],"['string', 'directly']",['java.util.stream.Stream.of']
28,create (.*) from (.*),"['xml', 'file']",['java'],"['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
29,create (.*) from (.*),['image'],"['sqlite', 'database']",['javax.imageio.ImageIO.read']
30,create (.*) from (.*),"['new', 'document']",['template'],['java.lang.Runtime.getRuntime']
31,create (.*) from (.*),"['soap', 'request']",['jwsdl'],"['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.soap.SOAPConnectionFactory.newInstance', 'javax.xml.soap.MessageFactory.newInstance', 'javax.xml.soap.SOAPFactory.newInstance']"
32,create (.*) from (.*),['tuples'],"['java', 'list']",['java.util.stream.IntStream.range']
33,create (.*) from (.*),['keypair'],"['byte', 'array']","['java.security.KeyFactory.getInstance', 'java.security.KeyPairGenerator.getInstance']"
34,create (.*) from (.*),['sessionfactory'],"['properties', 'file']",['java.lang.Class.forName']
35,create (.*) from (.*),['inputstreamreader'],"['joptionpane', 'showinputdialog']",['javax.swing.JOptionPane.showInputDialog']
36,create (.*) from (.*),"['direct', 'doublebuffer']","['byte', 'array']","['java.nio.ByteBuffer.allocateDirect', 'java.nio.ByteBuffer.wrap']"
37,create (.*) from (.*),['slider'],['jbutton'],['java.awt.event.MouseListener.mousePressed']
38,create (.*) from (.*),"['an', 'arraylist']","['a', 'intstream']",['java.util.stream.IntStream.range']
39,create (.*) from (.*),"['an', 'image']",['graph'],['javax.imageio.ImageIO.write']
40,create (.*) from (.*),['lists'],['list'],['java.lang.Math.min']
41,create (.*) from (.*),"['a', 'tree']",['rowset'],"['java.util.Arrays.asList', 'java.lang.Integer.valueOf']"
42,create (.*) from (.*),"['meteor', 'password']",['java'],['java.security.MessageDigest.getInstance']
43,create (.*) from (.*),['float'],['string'],['java.lang.Float.parseFloat']
44,create (.*) from (.*),['jbuttons'],"['actionlistener', 'variable']","['javax.swing.JOptionPane.showInputDialog', 'java.lang.Integer.parseInt']"
45,create (.*) from (.*),['variable'],"['regex', 'findings']",['java.util.regex.Pattern.compile']
46,create (.*) from (.*),"['a', 'chart']",['dataframe'],['java.time.LocalDate.of']
47,create (.*) from (.*),['directory'],"['rest', 'param']",['java.nio.file.Files.write']
0,parse (.*) with (.*),"['format', 'dates']","['localdatetime', 'java']","['java.time.LocalDateTime.parse', 'java.time.LocalDateTime.of', 'java.time.format.DateTimeFormatter.ofPattern']"
1,parse (.*) with (.*),['javascript'],['jsoup'],['java.util.regex.Pattern.compile']
2,parse (.*) with (.*),['string'],['java'],['java.util.regex.Pattern.compile']
3,parse (.*) with (.*),"['an', 'inputstreamreader']",['documentbuilder'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
4,parse (.*) with (.*),"['negative', 'number']",['parentheses'],['java.lang.Integer.parseInt']
5,parse (.*) with (.*),"['gpx', 'files']",['saxreader'],"['java.lang.Double.parseDouble', 'javax.xml.parsers.SAXParserFactory.newInstance']"
6,parse (.*) with (.*),"['xml', 'document']","['java', 'code']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
7,parse (.*) with (.*),"['this', 'string']",['regex'],['java.util.regex.Pattern.compile']
8,parse (.*) with (.*),"['nested', 'arrays']",['jackson'],['java.util.Arrays.asList']
9,parse (.*) with (.*),"['zoneddatetime', 'now']",['datetimeformatter'],"['java.time.ZonedDateTime.toString', 'java.time.ZonedDateTime.now']"
10,parse (.*) with (.*),"['json', 'object']","['variable', 'keyname']",['java.util.EnumSet.noneOf']
11,parse (.*) with (.*),['text'],"['dynamic', 'variables']",['java.util.regex.Pattern.compile']
12,parse (.*) with (.*),"['text', 'file']","['regular', 'expression']",['java.util.regex.Pattern.compile']
13,parse (.*) with (.*),['date'],['localdatetime'],"['java.util.Locale.setDefault', 'java.time.format.DateTimeFormatter.ofPattern']"
14,parse (.*) with (.*),['javascript'],['java'],['java.util.regex.Pattern.compile']
15,parse (.*) with (.*),"['custom', 'objects']","['string', 'input']",['java.lang.Enum.valueOf']
16,parse (.*) with (.*),['log'],"['regular', 'expression']","['java.util.regex.Pattern.compile', 'java.lang.String.join']"
17,parse (.*) with (.*),"['json', 'response']","['array', 'list']",['java.lang.String.join']
18,parse (.*) with (.*),['ww'],['yyyy'],['java.time.LocalDate.parse']
19,parse (.*) with (.*),['ddmmmyyyy'],['java'],['java.util.Locale.setDefault']
20,parse (.*) with (.*),"['chinese', 'characters']",['urlencodedutils'],['java.net.URLEncoder.encode']
21,parse (.*) with (.*),['path'],['hashtag'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
22,parse (.*) with (.*),"['url', 'hash']",['regex'],['java.util.regex.Pattern.compile']
23,parse (.*) with (.*),['yearmonth'],['offset'],"['java.time.format.DateTimeFormatter.ofPattern', 'java.time.YearMonth.parse']"
24,parse (.*) with (.*),['xml'],['birt'],['org.w3c.dom.Node.getNodeName']
25,parse (.*) with (.*),"['these', 'fields']","['single', 'regex']",['java.util.regex.Pattern.compile']
26,parse (.*) with (.*),"['a', 'href']",['img'],['java.util.regex.Pattern.compile']
27,parse (.*) with (.*),"['text', 'file']",['array'],"['java.nio.file.Paths.get', 'java.nio.file.Files.lines']"
28,parse (.*) with (.*),"['nested', 'tables']",['jsoup'],['java.lang.System.exit']
29,parse (.*) with (.*),"['iso', 'date']","['lower', 'specificity']","['java.time.YearMonth.from', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.YearMonth.parse']"
30,parse (.*) with (.*),['string'],['regex'],['java.util.regex.Pattern.compile']
31,parse (.*) with (.*),"['command', 'watch']",['inputstream'],['java.util.concurrent.Executors.newSingleThreadScheduledExecutor']
32,parse (.*) with (.*),['regex'],['regex'],['java.util.regex.Pattern.compile']
33,parse (.*) with (.*),"['throws', 'datetimeparseexception']",['values'],['java.time.Year.parse']
34,parse (.*) with (.*),['string'],"['java', 'regex']",['java.lang.String.split']
35,parse (.*) with (.*),"['functions', 'exception']","['negative', 'numbers']","['java.lang.Integer.valueOf', 'java.lang.Integer.parseInt']"
36,parse (.*) with (.*),"['a', 'string']",['regex'],['java.util.regex.Pattern.compile']
0,set (.*) in (.*),"['rgb', 'color']",['android'],['java.lang.Integer.parseInt']
1,set (.*) in (.*),"['dpi', 'information']","['an', 'image']","['javax.imageio.ImageTypeSpecifier.createFromBufferedImageType', 'javax.imageio.ImageIO.createImageOutputStream']"
2,set (.*) in (.*),"['header', 'value']",['jsp'],['java.text.MessageFormat.format']
3,set (.*) in (.*),['value'],"['arraylist', 'object']",['java.util.ArrayList.set']
4,set (.*) in (.*),"['jcalendar', 'date']",['jdatechooser'],['java.util.Calendar.getInstance']
5,set (.*) in (.*),"['the', 'border']","['a', 'jlist']","['javax.swing.BorderFactory.createLineBorder', 'javax.swing.BorderFactory.createEmptyBorder']"
6,set (.*) in (.*),['bit'],"['an', 'integer']",['java.lang.Integer.numberOfTrailingZeros']
7,set (.*) in (.*),['priority'],"['an', 'arraylist']","['java.util.Collections.sort', 'java.lang.Integer.parseInt']"
8,set (.*) in (.*),"['character', 'encoding']",['beanio'],['java.nio.charset.Charset.forName']
9,set (.*) in (.*),"['as', 'font']","['java', 'swing']",['java.awt.Font.createFont']
10,set (.*) in (.*),"['a', 'delay']",['libgdx'],['java.lang.System.currentTimeMillis']
11,set (.*) in (.*),"['mime', 'type']",['android'],['java.net.URLConnection.guessContentTypeFromName']
12,set (.*) in (.*),"['of', 'files']","['a', 'directory']","['java.nio.file.Paths.get', 'java.nio.file.Files.walkFileTree']"
13,set (.*) in (.*),['text'],['textview'],['java.lang.Integer.toString']
14,set (.*) in (.*),"['properties', 'attributes']","['java', 'programmatically']",['java.lang.System.setProperty']
15,set (.*) in (.*),"['of', 'strings']","['a', 'string']",['java.util.regex.Pattern.compile']
16,set (.*) in (.*),"['pixel', 'height']","['java', 'swing']",['javax.swing.SwingUtilities.invokeLater']
17,set (.*) in (.*),"['of', 'elements']","['a', 'list']","['java.util.Collections.sort', 'java.util.Collections.shuffle']"
18,set (.*) in (.*),['breakpoints'],['blocks'],['java.util.Collections.sort']
19,set (.*) in (.*),"['of', 'strings']","['spring', 'boot']",['java.util.Collections.addAll']
20,set (.*) in (.*),['implementation'],"['collectors', 'toset']",['java.util.stream.Collectors.toSet']
21,set (.*) in (.*),"['to', 'horizontal']",['jasperreport'],['java.awt.Desktop.getDesktop']
22,set (.*) in (.*),['long'],['concise'],['java.util.stream.Stream.of']
23,set (.*) in (.*),"['field', 'value']",['constructor'],['java.util.logging.Logger.getLogger']
24,set (.*) in (.*),"['dscp', 'value']","['android', 'app']",['java.lang.System.setProperty']
25,set (.*) in (.*),['timepicker'],"['different', 'edittext']",['java.util.Calendar.getInstance']
26,set (.*) in (.*),['sparklines'],"['excel', 'file']","['java.lang.Math.toDegrees', 'java.lang.Math.round', 'java.lang.Integer.parseInt', 'java.lang.Math.atan', 'java.lang.Math.sqrt', 'java.util.Arrays.sort']"
27,set (.*) in (.*),"['default', 'date']","['annotation', 'createddate']",['java.lang.System.setProperty']
28,set (.*) in (.*),['timer'],['snackbar'],['java.lang.String.format']
29,set (.*) in (.*),"['typed', 'text']","['a', 'jlabel']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
30,set (.*) in (.*),['it'],"['the', 'response']",['java.util.Optional.ofNullable']
31,set (.*) in (.*),"['gradient', 'direction']",['swing'],"['javax.swing.SwingUtilities.invokeLater', 'java.awt.geom.AffineTransform.getTranslateInstance']"
32,set (.*) in (.*),"['hilighting', 'color']",['jtextfield'],"['java.awt.EventQueue.invokeLater', 'javax.swing.text.StyleConstants.setBackground', 'javax.swing.UIManager.setLookAndFeel']"
33,set (.*) in (.*),"['variable', 'text']","['text', 'view']",['java.lang.Integer.parseInt']
34,set (.*) in (.*),['flags'],"['my', 'code']",['java.util.logging.Logger.getLogger']
35,set (.*) in (.*),"['custom', 'font']","['synth', 'style']",['java.awt.Font.createFont']
36,set (.*) in (.*),"['and', 'echo']","['java', 'program']","['java.net.InetAddress.getLocalHost', 'java.lang.System.getenv']"
37,set (.*) in (.*),"['my', 'listview']","['alphabetical', 'order']",['java.util.Collections.sort']
38,set (.*) in (.*),"['label', 'layout']",['panels'],['javax.swing.SwingUtilities.invokeLater']
39,set (.*) in (.*),"['permisson', 'region']","['docx', 'document']",['java.lang.Integer.toString']
40,set (.*) in (.*),"['a', 'permission']",['bukkit'],['java.lang.System.currentTimeMillis']
41,set (.*) in (.*),['loop'],"['pig', 'latin']","['java.lang.Character.toLowerCase', 'java.lang.Character.toUpperCase']"
42,set (.*) in (.*),['date'],"['est', 'android']","['java.time.format.DateTimeFormatter.ofLocalizedDateTime', 'java.time.ZonedDateTime.of', 'java.time.ZoneOffset.ofHours', 'java.time.OffsetDateTime.of', 'java.time.LocalDate.of', 'java.time.ZoneId.of', 'java.time.LocalTime.of']"
43,set (.*) in (.*),"['of', 'data']",['java'],['java.util.stream.Collectors.summingInt']
44,set (.*) in (.*),"['common', 'variable']","['spring', 'configuration']",['java.lang.System.getenv']
45,set (.*) in (.*),"['of', 'results']",['array'],['java.lang.Math.max']
46,set (.*) in (.*),['margins'],['millimeters'],['java.lang.Math.round']
47,set (.*) in (.*),['task'],"['time', 'interval']",['java.util.concurrent.Executors.newScheduledThreadPool']
48,set (.*) in (.*),['integer'],['java'],['java.util.Arrays.stream']
49,set (.*) in (.*),['authentication'],"['post', 'request']",['java.util.Base64.getEncoder']
50,set (.*) in (.*),['defaults'],['mysql'],['java.sql.ResultSet.next']
51,set (.*) in (.*),"['of', 'objects']","['a', 'file']",['java.io.File.createTempFile']
52,set (.*) in (.*),['it'],"['textview', 'android']",['java.text.NumberFormat.getCurrencyInstance']
53,set (.*) in (.*),"['task', 'timeout']",['javafx'],"['java.util.concurrent.CompletableFuture.runAsync', 'java.lang.Thread.currentThread']"
54,set (.*) in (.*),['data'],"['external', 'database']",['java.net.URLEncoder.encode']
55,set (.*) in (.*),['immediately'],"['android', 'studio']",['java.lang.Thread.sleep']
0,sort (.*) by (.*),['arraylist'],['properties'],['java.util.Collections.sort']
1,sort (.*) by (.*),['hashtable'],['values'],['java.util.Collections.sort']
2,sort (.*) by (.*),['hashmap'],['value'],['java.util.Arrays.sort']
3,sort (.*) by (.*),"['arraylist', 'values']",['name'],['java.util.Collections.sort']
4,sort (.*) by (.*),"['multiple', 'arraylist']","['their', 'size']",['java.util.Collections.sort']
5,sort (.*) by (.*),"['a', 'treeset']",['value'],['java.util.Collections.sort']
6,sort (.*) by (.*),"['csv', 'file']","['two', 'columns']","['java.util.Arrays.asList', 'java.util.Collections.sort']"
7,sort (.*) by (.*),"['the', 'result']",['value'],"['java.util.Collections.sort', 'java.util.regex.Pattern.compile', 'java.util.stream.Stream.of']"
8,sort (.*) by (.*),"['the', 'words']","['their', 'frequency']","['java.util.Collections.sort', 'java.util.Arrays.sort']"
9,sort (.*) by (.*),['list'],"['multiple', 'variables']","['java.lang.Integer.compare', 'java.util.Collections.sort', 'java.util.Comparator.comparing']"
10,sort (.*) by (.*),"['d', 'array']","['nd', 'dimension']",['java.util.Collections.sort']
11,sort (.*) by (.*),"['the', 'list']","['ascending', 'order']","['java.util.Collections.sort', 'java.lang.Double.valueOf', 'java.lang.Integer.parseInt']"
12,sort (.*) by (.*),"['an', 'array']","['numerical', 'order']","['java.util.Arrays.sort', 'java.lang.Integer.parseInt']"
13,sort (.*) by (.*),['coordinates'],"['y', 'value']","['java.lang.Integer.compareTo', 'java.util.Arrays.sort']"
14,sort (.*) by (.*),"['this', 'arraylist']","['various', 'parameters']",['java.util.Collections.sort']
15,sort (.*) by (.*),['object'],"['two', 'attributes']",['java.lang.Integer.compare']
16,sort (.*) by (.*),"['the', 'output']",['sum'],"['java.lang.Integer.compare', 'java.util.Collections.sort', 'java.lang.String.format']"
17,sort (.*) by (.*),['map'],"['top', 'scores']",['java.util.Collections.sort']
18,sort (.*) by (.*),"['adapter', 'arraylist']","['reverse', 'date']",['java.util.Collections.sort']
19,sort (.*) by (.*),['hashset'],"['two', 'conditions']",['java.util.Collections.sort']
20,sort (.*) by (.*),['list'],['integer'],"['java.lang.Integer.compare', 'java.util.Collections.sort']"
21,sort (.*) by (.*),"['a', 'list']","['several', 'comparators']",['java.util.Collections.sort']
22,sort (.*) by (.*),['atomiclongmap'],['value'],['java.util.Collections.sort']
23,sort (.*) by (.*),['jsonobject'],"['a', 'string']","['java.util.Collections.sort', 'java.lang.Integer.parseInt']"
24,sort (.*) by (.*),['arraylist'],['age'],['java.util.Collections.sort']
25,sort (.*) by (.*),"['list', 'object']","['long', 'field']",['java.util.Comparator.comparingLong']
26,sort (.*) by (.*),"['array', 'd']","['index', 'java']",['java.util.Arrays.stream']
27,sort (.*) by (.*),"['one', 'array']",['another'],"['java.lang.Double.compare', 'java.util.Arrays.sort']"
28,sort (.*) by (.*),['objects'],"['field', 'value']",['java.lang.Integer.compare']
29,sort (.*) by (.*),['alphabetically'],['name'],['java.util.Collections.sort']
30,sort (.*) by (.*),['arraylist'],"['many', 'catogories']",['java.util.Collections.sort']
31,sort (.*) by (.*),"['an', 'arraylist']",['fields'],['java.util.Comparator.comparing']
32,sort (.*) by (.*),"['enumeration', 'values']",['name'],['java.util.Arrays.sort']
33,sort (.*) by (.*),['map'],"['two', 'factors']",['java.lang.Integer.compare']
34,sort (.*) by (.*),"['ascending', 'list']",['price'],['java.util.Collections.sort']
0,set (.*) for (.*),['timeout'],"['socket', 'receive']",['java.net.InetAddress.getByName']
1,set (.*) for (.*),['credentials'],"['kerberos', 'authentication']","['java.lang.System.setProperty', 'javax.security.auth.Subject.getSubject', 'javax.security.auth.Subject.doAs']"
2,set (.*) for (.*),"['a', 'size']",['jmenuitem'],['java.lang.Math.max']
3,set (.*) for (.*),"['manually', 'timeout']",['datainputstream'],"['java.nio.ByteBuffer.allocate', 'java.lang.System.nanoTime', 'java.nio.channels.Selector.open']"
4,set (.*) for (.*),"['the', 'properties']","['the', 'object']",['java.lang.Class.forName']
5,set (.*) for (.*),"['relative', 'classpath']","['jasper', 'reports']",['java.lang.System.getenv']
6,set (.*) for (.*),"['page', 'range']","['print', 'dialog']",['java.awt.print.PrinterJob.getPrinterJob']
7,set (.*) for (.*),"['transparent', 'background']","['jtree', 'cell']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.put', 'javax.swing.UIManager.setLookAndFeel']"
8,set (.*) for (.*),['certificate'],"['keystore', 'trustedcertificateentry']",['java.security.KeyStore.getInstance']
9,set (.*) for (.*),"['up', 'proxy']",['selenide'],['java.lang.System.setProperty']
10,set (.*) for (.*),"['vertical', 'separators']",['jmenuitems'],"['java.util.logging.Logger.getLogger', 'javax.swing.UIManager.setLookAndFeel']"
11,set (.*) for (.*),"['z', 'index']",['components'],['java.awt.EventQueue.invokeLater']
12,set (.*) for (.*),['defaultfilesystemprovider'],['testing'],['java.nio.file.FileSystems.getDefault']
13,set (.*) for (.*),"['bit', 'position']","['an', 'int']","['java.lang.Integer.numberOfLeadingZeros', 'java.lang.Integer.highestOneBit', 'java.lang.Integer.bitCount']"
14,set (.*) for (.*),"['default', 'value']","['crl', 'path']","['java.lang.System.setProperty', 'javax.net.ssl.TrustManagerFactory.getInstance']"
15,set (.*) for (.*),['arguments'],"['virtual', 'keyboard']","['java.lang.Class.forName', 'java.lang.System.setProperty']"
16,set (.*) for (.*),['placeholder'],"['categorical', 'columns']",['java.lang.System.getProperty']
17,set (.*) for (.*),['threadlocal'],['parallelstream'],['java.util.stream.IntStream.range']
18,set (.*) for (.*),['encoding'],['bundle'],['java.util.ResourceBundle.getBundle']
19,set (.*) for (.*),"['pool', 'size']",['mysqldatasource'],['java.lang.String.format']
20,set (.*) for (.*),['parameters'],"['math', 'random']",['java.lang.Math.random']
21,set (.*) for (.*),"['multiple', 'masks']",['keystroke'],"['java.awt.Toolkit.getDefaultToolkit', 'javax.swing.KeyStroke.getKeyStroke']"
22,set (.*) for (.*),"['file', 'path']",['fileinputstream'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
23,set (.*) for (.*),"['default', 'value']","['enum', 'collection']",['java.util.EnumSet.of']
24,set (.*) for (.*),['direction'],"['output', 'programs']",['javax.swing.JOptionPane.showMessageDialog']
25,set (.*) for (.*),['value'],['it'],['java.util.Arrays.asList']
26,set (.*) for (.*),"['a', 'layout']","['joptionspane', 'showoptiondialog']","['javax.swing.JOptionPane.showOptionDialog', 'javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showConfirmDialog']"
27,set (.*) for (.*),['labels'],['error'],['java.text.NumberFormat.getInstance']
28,set (.*) for (.*),"['different', 'timezone']","['multiple', 'thread']","['java.lang.ThreadLocal.withInitial', 'java.time.ZoneId.of', 'java.time.ZonedDateTime.of']"
29,set (.*) for (.*),"['progress', 'value']","['second', 'time']",['java.lang.Double.parseDouble']
30,set (.*) for (.*),"['jpanel', 'transparent']",['keypad'],"['java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment', 'javax.swing.SwingUtilities.invokeLater', 'java.lang.System.exit']"
0,display (.*) in (.*),['image'],"['a', 'jpanel']","['javax.swing.SwingUtilities.invokeLater', 'java.lang.System.exit']"
1,display (.*) in (.*),"['an', 'image']","['the', 'applet']","['javax.imageio.ImageIO.read', 'java.applet.Applet.getImage']"
2,display (.*) in (.*),['strings'],"['jtextarea', 'jtextfield']",['javax.swing.JTextArea.append']
3,display (.*) in (.*),"['url', 'image']",['jframe'],"['javax.imageio.ImageIO.read', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
4,display (.*) in (.*),['it'],"['a', 'joptionpane']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
5,display (.*) in (.*),"['an', 'image']","['a', 'frame']","['javax.swing.SwingUtilities.invokeLater', 'java.awt.Image.getScaledInstance']"
6,display (.*) in (.*),['results'],"['a', 'jpanel']","['java.awt.EventQueue.invokeLater', 'javax.swing.JOptionPane.showMessageDialog', 'javax.swing.UIManager.setLookAndFeel']"
7,display (.*) in (.*),['latex'],['android'],['javax.imageio.ImageIO.write']
8,display (.*) in (.*),['jdatechooser'],['joptionpane'],['javax.swing.JOptionPane.showConfirmDialog']
9,display (.*) in (.*),"['japanese', 'characters']",['jtextarea'],"['javax.swing.UIManager.get', 'javax.swing.UIManager.getDefaults', 'javax.swing.UIManager.put']"
10,display (.*) in (.*),['inputstream'],['jtextarea'],['javax.swing.JTextArea.append']
11,display (.*) in (.*),"['multiple', 'images']",['jsp'],['java.lang.Integer.parseInt']
12,display (.*) in (.*),"['console', 'output']",['webapp'],['java.lang.Thread.sleep']
13,display (.*) in (.*),"['an', 'image']","['java', 'scala']",['javax.swing.JOptionPane.showMessageDialog']
14,display (.*) in (.*),"['a', 'picture']","['a', 'jtable']",['javax.swing.JOptionPane.showMessageDialog']
15,display (.*) in (.*),['jcheckbox'],['jtable'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
16,display (.*) in (.*),['emoji'],"['java', 'jframe']",['java.nio.charset.Charset.forName']
17,display (.*) in (.*),['them'],['gui'],['javax.swing.JOptionPane.showInputDialog']
18,display (.*) in (.*),"['html', 'document']","['javafx', 'webview']",['java.util.logging.Logger.getLogger']
19,display (.*) in (.*),"['corresponding', 'data']","['other', 'field']",['java.lang.Integer.parseInt']
20,display (.*) in (.*),['buttons'],"['jcombobox', 'items']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.PopupFactory.getSharedInstance', 'java.util.logging.Logger.getLogger']"
21,display (.*) in (.*),"['database', 'records']",['jtextfield'],['java.lang.Integer.toString']
22,display (.*) in (.*),['it'],"['a', 'label']",['java.lang.Long.toString']
23,display (.*) in (.*),"['integer', 'array']",['tableview'],['java.util.Arrays.toString']
24,display (.*) in (.*),"['random', 'images']",['div'],['java.lang.Math.floor']
25,display (.*) in (.*),"['digit', 'numbers']","['scientific', 'notation']",['java.lang.String.format']
26,display (.*) in (.*),"['it', 'as']","['adobe', 'reader']",['java.awt.Desktop.getDesktop']
27,display (.*) in (.*),"['different', 'components']","['a', 'jframe']",['javax.swing.SwingUtilities.invokeLater']
28,display (.*) in (.*),['properly'],"['the', 'gui']",['javax.swing.SwingUtilities.invokeLater']
29,display (.*) in (.*),"['ansi', 'art']","['a', 'jtextpane']",['javax.swing.text.StyleConstants.setLineSpacing']
30,display (.*) in (.*),"['progress', 'column']","['java', 'table']",['javax.swing.SwingUtilities.invokeLater']
31,display (.*) in (.*),"['moving', 'blocks']","['a', 'jframe']","['javax.swing.JComponent.repaint', 'java.lang.System.currentTimeMillis', 'javax.swing.JFrame.getContentPane']"
32,display (.*) in (.*),"['center', 'text']","['ring', 'chart']",['java.awt.EventQueue.invokeLater']
33,display (.*) in (.*),['text'],['jtextarea'],['java.awt.EventQueue.invokeLater']
34,display (.*) in (.*),"['content', 'properly']","['table', 'cell']","['java.text.NumberFormat.getIntegerInstance', 'java.lang.Integer.parseInt']"
35,display (.*) in (.*),"['the', 'result']","['a', 'textview']",['java.util.Calendar.getInstance']
36,display (.*) in (.*),"['shared', 'preference']",['textview'],['java.lang.Integer.parseInt']
37,display (.*) in (.*),['pairs'],"['random', 'order']",['java.util.Collections.shuffle']
38,display (.*) in (.*),['output'],"['reverse', 'order']","['java.util.Collections.reverseOrder', 'java.util.Collections.sort']"
39,display (.*) in (.*),"['chemical', 'formula']",['android'],['java.lang.String.split']
40,display (.*) in (.*),"['selected', 'image']","['a', 'jtextpane']",['javax.imageio.ImageIO.read']
41,display (.*) in (.*),['camera'],['fragment'],"['java.io.File.createTempFile', 'java.lang.Math.abs']"
42,display (.*) in (.*),['number'],"['exponent', 'format']","['java.lang.Math.log10', 'java.lang.Math.pow', 'java.lang.Math.floor', 'java.lang.String.valueOf', 'java.text.NumberFormat.getInstance']"
43,display (.*) in (.*),"['corresponding', 'name']","['d', 'array']",['javax.swing.JOptionPane.showMessageDialog']
44,display (.*) in (.*),"['an', 'array']","['alphabetic', 'order']",['java.util.Arrays.sort']
45,display (.*) in (.*),"['textfield', 'values']","['another', 'textfield']",['java.lang.Double.parseDouble']
46,display (.*) in (.*),['images'],"['multiple', 'jpanels']",['javax.swing.SwingUtilities.invokeLater']
47,display (.*) in (.*),['dates'],"['multiple', 'fragments']",['java.util.Calendar.getInstance']
48,display (.*) in (.*),"['jtextfield', 'value']","['batch', 'file']",['java.lang.Runtime.getRuntime']
49,display (.*) in (.*),"['different', 'arrays']","['separate', 'joptionpane']",['javax.swing.JOptionPane.showInputDialog']
50,display (.*) in (.*),['data'],['jcombobox'],['java.util.logging.Logger.getLogger']
51,display (.*) in (.*),['image'],['class'],['javax.imageio.ImageIO.read']
52,display (.*) in (.*),"['the', 'average']","['ascending', 'order']",['java.util.Collections.sort']
0,create (.*) with (.*),"['a', 'jbutton']","['a', 'menu']",['javax.swing.JOptionPane.showMessageDialog']
1,create (.*) with (.*),['table'],"['docx', 'j']",['java.lang.Math.floor']
2,create (.*) with (.*),"['custom', 'calendar']",['event'],['java.lang.Long.parseLong']
3,create (.*) with (.*),"['a', 'list']","['n', 'objects']","['java.util.Collections.nCopies', 'java.util.stream.IntStream.range']"
4,create (.*) with (.*),"['a', 'combobox']","['multiple', 'checkbox']",['javax.swing.SwingUtilities.invokeLater']
5,create (.*) with (.*),['table'],['preparedstatement'],['javax.swing.JOptionPane.showInputDialog']
6,create (.*) with (.*),"['facebook', 'session']","['extended', 'permission']",['java.util.Arrays.asList']
7,create (.*) with (.*),"['apollonian', 'gaskets']",['solution'],['java.lang.Math.sqrt']
8,create (.*) with (.*),['bufferedimage'],"['float', 'precision']","['java.awt.image.Raster.createWritableRaster', 'java.awt.color.ColorSpace.getInstance']"
9,create (.*) with (.*),['signature'],['itext'],"['java.security.MessageDigest.getInstance', 'java.security.Security.addProvider', 'java.security.KeyStore.getInstance']"
10,create (.*) with (.*),['form'],"['round', 'corners']","['java.awt.GraphicsDevice.setFullScreenWindow', 'java.awt.Dialog.setUndecorated']"
11,create (.*) with (.*),['timer'],['jlabel'],['java.lang.String.valueOf']
12,create (.*) with (.*),"['a', 'box']",['stars'],['java.lang.System.lineSeparator']
13,create (.*) with (.*),"['reactive', 'method']","['project', 'reactor']",['java.lang.Thread.sleep']
14,create (.*) with (.*),"['jpeg', 'file']","['raw', 'data']",['java.lang.Character.digit']
15,create (.*) with (.*),['method'],"['d', 'array']",['javax.swing.JOptionPane.showMessageDialog']
16,create (.*) with (.*),"['jersey', 'client']",['executor'],['java.util.concurrent.Executors.newFixedThreadPool']
17,create (.*) with (.*),"['a', 'compoundborder']",['borders'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
18,create (.*) with (.*),"['file', 'instance']",['classpath'],['java.lang.Integer.parseInt']
19,create (.*) with (.*),"['a', 'buttongroup']","['connected', 'buttons']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.SwingUtilities.updateComponentTreeUI', 'javax.swing.UIManager.setLookAndFeel']"
20,create (.*) with (.*),"['java', 'stream']","['supplier', 'lazyly']",['java.util.Arrays.stream']
21,create (.*) with (.*),"['a', 'credential']","['opensaml', 'j']",['java.security.KeyStore.getInstance']
22,create (.*) with (.*),['tag'],"['namespace', 'prefix']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
23,create (.*) with (.*),"['a', 'cube']",['vbo'],['java.util.Arrays.fill']
24,create (.*) with (.*),"['snapped', 'components']","['java', 'swing']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
25,create (.*) with (.*),"['a', 'package']",['bytes'],"['java.nio.ByteBuffer.allocate', 'java.nio.ByteBuffer.allocateDirect', 'java.nio.channels.Channels.newChannel']"
26,create (.*) with (.*),"['a', 'string']",['spaces'],['java.util.Arrays.fill']
27,create (.*) with (.*),['connection'],['database'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection', 'java.lang.String.format']"
28,create (.*) with (.*),"['n', 'actionlistener']","['for', 'loop']",['javax.swing.JOptionPane.showMessageDialog']
29,create (.*) with (.*),['gitignore'],['java'],"['java.nio.file.Paths.get', 'java.nio.file.Files.write']"
30,create (.*) with (.*),"['a', 'jbutton']","['unicode', 'image']",['java.lang.Integer.parseInt']
31,create (.*) with (.*),"['class', 'objects']","['serial', 'naming']",['java.lang.String.format']
32,create (.*) with (.*),['objects'],['counter'],['java.util.stream.IntStream.range']
33,create (.*) with (.*),['arraylist'],['resultset'],['java.util.logging.Logger.getLogger']
34,create (.*) with (.*),"['a', 'table']","['n', 'elements']",['java.lang.String.join']
35,create (.*) with (.*),['excel'],['styles'],['java.util.Arrays.asList']
36,create (.*) with (.*),"['shareable', 'testkit']",['junit'],['java.util.Arrays.asList']
0,sort (.*) in (.*),"['arraylist', 'long']","['decreasing', 'order']","['java.util.Collections.reverse', 'java.util.Collections.reverseOrder']"
1,sort (.*) in (.*),"['file', 'names']","['ascending', 'order']","['java.lang.Integer.parseInt', 'java.util.Arrays.sort']"
2,sort (.*) in (.*),['jtable'],"['shortest', 'way']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
3,sort (.*) in (.*),"['a', 'set']","['reverse', 'order']",['java.util.Collections.sort']
4,sort (.*) in (.*),['jsonarray'],['android'],['java.util.Collections.sort']
5,sort (.*) in (.*),['strings'],"['all', 'languages']","['java.text.Collator.getInstance', 'java.util.Collections.sort']"
6,sort (.*) in (.*),['files'],"['a', 'directory']","['java.lang.Integer.compare', 'java.util.Arrays.sort']"
7,sort (.*) in (.*),['numbers'],['arraylist'],"['java.util.Collections.sort', 'java.lang.Integer.valueOf']"
8,sort (.*) in (.*),"['a', 'listview']","['alphabetical', 'order']",['java.util.Collections.sort']
9,sort (.*) in (.*),['integers'],"['ascending', 'order']",['java.util.Collections.sort']
10,sort (.*) in (.*),['arraylist'],"['ascending', 'order']",['java.util.Collections.sort']
11,sort (.*) in (.*),"['xml', 'code']","['ascending', 'order']",['java.util.Collections.sort']
12,sort (.*) in (.*),['intervals'],"['joda', 'time']",['java.util.Collections.sort']
13,sort (.*) in (.*),"['numerical', 'arraylist']","['ascending', 'order']","['java.util.Comparator.comparingInt', 'java.lang.Integer.parseInt']"
14,sort (.*) in (.*),"['by', 'ascending']","['for', 'loop']",['java.util.Arrays.sort']
15,sort (.*) in (.*),['arrays'],"['a', 'collection']",['java.util.stream.IntStream.range']
16,sort (.*) in (.*),"['numeric', 'array']","['jmeter', 'beanshell']",['java.util.Collections.sort']
17,sort (.*) in (.*),['order'],['android'],"['java.util.Collections.sort', 'java.lang.Integer.parseInt']"
18,sort (.*) in (.*),['alphabetically'],"['custom', 'listview']",['java.util.Collections.sort']
19,sort (.*) in (.*),['error'],['main'],"['java.lang.Double.compare', 'java.util.Arrays.sort']"
20,sort (.*) in (.*),"['contact', 'list']",['android'],['java.util.Collections.sort']
21,sort (.*) in (.*),"['date', 'strings']",['map'],['java.lang.Integer.parseInt']
22,sort (.*) in (.*),['string'],"['array', 'list']","['java.util.Collections.sort', 'java.util.Arrays.sort']"
23,sort (.*) in (.*),"['arraylit', 'class']",['api'],"['java.util.Collections.sort', 'javax.naming.Name.compareTo']"
24,sort (.*) in (.*),['items'],['listview'],['java.util.Collections.sort']
25,sort (.*) in (.*),['names'],"['java', 'arraylist']",['java.util.Collections.sort']
26,sort (.*) in (.*),"['an', 'intstream']","['ascending', 'order']",['java.util.stream.IntStream.collect']
27,sort (.*) in (.*),['arraylist'],"['descending', 'order']",['java.util.Collections.sort']
28,sort (.*) in (.*),"['this', 'array']","['ascending', 'order']",['java.util.Arrays.sort']
29,sort (.*) in (.*),"['linear', 'layouts']","['android', 'studio']",['java.util.Collections.reverseOrder']
30,sort (.*) in (.*),"['display', 'output']","['reverse', 'order']","['java.util.Collections.reverseOrder', 'java.util.Collections.sort']"
31,sort (.*) in (.*),['algorithm'],"['multiple', 'threads']",['java.util.Arrays.parallelSort']
32,sort (.*) in (.*),['array'],"['alphabetical', 'order']",['java.util.Arrays.sort']
33,sort (.*) in (.*),['it'],['collection'],['java.util.Collections.sort']
34,sort (.*) in (.*),"['char', 'alphabetically']",['comparator'],['java.lang.Character.compare']
35,sort (.*) in (.*),['values'],"['customized', 'order']","['java.util.Arrays.asList', 'java.util.List.indexOf', 'java.util.Comparator.compare']"
36,sort (.*) in (.*),['values'],"['linked', 'list']",['java.util.Collections.sort']
37,sort (.*) in (.*),"['equal', 'items']",['collection'],['java.util.Collections.sort']
38,sort (.*) in (.*),['function'],"['java', 'collections']","['java.lang.Integer.compare', 'java.util.Collections.sort']"
39,sort (.*) in (.*),['listview'],['listactivity'],['java.util.Collections.reverse']
40,sort (.*) in (.*),"['each', 'line']","['different', 'sequence']","['java.util.Collections.reverse', 'java.util.Collections.reverseOrder', 'java.util.Arrays.sort']"
0,get (.*) with (.*),['substring'],"['regular', 'expression']",['java.util.regex.Pattern.compile']
1,get (.*) with (.*),"['validation', 'events']",['jaxb'],"['javax.xml.validation.SchemaFactory.newInstance', 'javax.xml.bind.JAXBContext.newInstance']"
2,get (.*) with (.*),"['method', 'works']",['timeout'],['java.util.concurrent.Executors.newFixedThreadPool']
3,get (.*) with (.*),"['webmvctest', 'work']",['oauth'],['java.util.stream.Stream.of']
4,get (.*) with (.*),"['xml', 'node']",['namespace'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
5,get (.*) with (.*),"['the', 'coordinate']","['random', 'angle']",['java.lang.Math.toRadians']
6,get (.*) with (.*),"['a', 'submap']",['linkedhashmap'],['java.util.Collections.binarySearch']
7,get (.*) with (.*),"['registry', 'values']",['java'],"['java.util.prefs.Preferences.userRoot', 'java.util.prefs.Preferences.systemRoot']"
8,get (.*) with (.*),['items'],"['lowest', 'price']",['java.util.stream.Collectors.groupingBy']
9,get (.*) with (.*),['resized'],"['different', 'colors']",['javax.imageio.ImageIO.getImageReaders']
10,get (.*) with (.*),['sentence'],"['specific', 'word']",['java.util.regex.Pattern.compile']
11,get (.*) with (.*),"['different', 'localdate']","['same', 'timezone']","['java.util.TimeZone.setDefault', 'java.time.ZonedDateTime.of', 'java.time.Instant.ofEpochMilli', 'java.sql.Date.valueOf', 'java.time.ZoneId.of']"
12,get (.*) with (.*),['color'],['poi'],['javax.imageio.ImageIO.read']
13,get (.*) with (.*),"['register', 'mbean']","['method', 'getplatformmxbean']",['java.lang.management.ManagementFactory.getPlatformMBeanServer']
14,get (.*) with (.*),['requests'],['springboot'],['java.util.logging.Logger.getLogger']
15,get (.*) with (.*),['mapping'],['pathvariable'],['java.util.regex.Pattern.compile']
16,get (.*) with (.*),['optionquote'],"['etrade', 'api']",['java.net.URLEncoder.encode']
17,get (.*) with (.*),"['an', 'azureratecard']",['java'],['java.lang.String.format']
18,get (.*) with (.*),['ladder'],['optional'],['java.util.Optional.ofNullable']
19,get (.*) with (.*),['date'],"['year', 'change']",['java.time.LocalDate.of']
20,get (.*) with (.*),['padded'],['a'],"['java.util.TimeZone.setDefault', 'java.lang.String.format']"
21,get (.*) with (.*),['digest'],['android'],"['java.security.KeyFactory.getInstance', 'java.security.Signature.getInstance']"
22,get (.*) with (.*),"['between', 'dates']","['time', 'ago']","['java.time.LocalDateTime.parse', 'java.time.Instant.parse']"
23,get (.*) with (.*),['inputstream'],"['rest', 'template']",['java.io.File.createTempFile']
24,get (.*) with (.*),"['the', 'url']","['pattern', 'compile']","['java.util.regex.Pattern.compile', 'java.lang.System.exit']"
25,get (.*) with (.*),['amount'],[],"['java.lang.Double.parseDouble', 'java.util.regex.Pattern.compile']"
26,get (.*) with (.*),['hashmap'],['reflection'],['java.lang.Class.forName']
27,get (.*) with (.*),"['unix', 'epoch']",['microsecond'],['java.time.Instant.now']
28,get (.*) with (.*),['rejectedexecutionexception'],['executorservice'],['java.util.concurrent.Executors.newFixedThreadPool']
29,get (.*) with (.*),['group'],"['regex', 'matcher']","['java.util.regex.Pattern.quote', 'java.util.regex.Pattern.compile']"
30,get (.*) with (.*),['function'],"['random', 'string']",['java.lang.Character.toString']
31,get (.*) with (.*),['request'],['groovy'],['java.util.Base64.getEncoder']
32,get (.*) with (.*),"['utc', 'time']",['dateformatter'],['java.time.format.DateTimeFormatter.ofPattern']
0,pass (.*) to (.*),['array'],"['oracle', 'procedure']","['java.sql.DriverManager.getConnection', 'java.sql.DriverManager.registerDriver']"
1,pass (.*) to (.*),"['arithmetic', 'operators']","['a', 'method']",['java.lang.String.valueOf']
2,pass (.*) to (.*),"['custom', 'object']","['arrays', 'aslist']",['java.util.Arrays.asList']
3,pass (.*) to (.*),['parameters'],"['soap', 'method']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
4,pass (.*) to (.*),['commands'],['it'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog', 'javax.swing.UIManager.setLookAndFeel']"
5,pass (.*) to (.*),['itself'],"['the', 'invocationhandler']",['java.lang.reflect.Proxy.newProxyInstance']
6,pass (.*) to (.*),"['list', 'values']","['parameterized', 'simplestatement']",['java.util.UUID.randomUUID']
7,pass (.*) to (.*),['object'],['arraylist'],['java.lang.System.arraycopy']
8,pass (.*) to (.*),['it'],['jsp'],['java.util.Collections.sort']
9,pass (.*) to (.*),"['method', 'call']",['actionlistener'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
10,pass (.*) to (.*),['it'],['asynctask'],['java.lang.String.valueOf']
11,pass (.*) to (.*),['it'],"['a', 'variable']",['java.lang.System.exit']
12,pass (.*) to (.*),"['sql', 'connection']","['actionlistener', 'thread']",['java.util.concurrent.Executors.newSingleThreadScheduledExecutor']
13,pass (.*) to (.*),"['in', 'jframe']","['change', 'brightness']",['javax.swing.SwingUtilities.invokeLater']
14,pass (.*) to (.*),['blockingqueue'],"['spring', 'kafkalistener']",['java.lang.Integer.parseInt']
15,pass (.*) to (.*),"['java', 'backreference']","['method', 'parameter']",['java.util.regex.Pattern.compile']
16,pass (.*) to (.*),['argument'],"['java', 'process']",['java.lang.Runtime.getRuntime']
17,pass (.*) to (.*),"['generic', 'parameters']","['hadoop', 'jar']",['java.lang.System.exit']
18,pass (.*) to (.*),['jlabel'],['integer'],['java.lang.Integer.parseInt']
19,pass (.*) to (.*),"['array', 'byte']",['getreader'],['java.lang.Object.toString']
20,pass (.*) to (.*),"['by', 'value']","['a', 'list']",['java.util.Arrays.asList']
21,pass (.*) to (.*),['bundle'],"['if', 'statement']",['java.lang.Long.parseLong']
22,pass (.*) to (.*),"['map', 'values']",['adapter'],['java.util.Collections.emptyMap']
23,pass (.*) to (.*),"['parseint', 'array']","['previous', 'array']",['java.lang.Integer.parseInt']
24,pass (.*) to (.*),['actionevents'],"['another', 'class']","['java.awt.Toolkit.getDefaultToolkit', 'javax.swing.JOptionPane.showMessageDialog']"
25,pass (.*) to (.*),['class'],['lambda'],['java.io.File.mkdir']
26,pass (.*) to (.*),['classname'],['method'],['java.lang.Class.isAssignableFrom']
27,pass (.*) to (.*),"['generic', 'collections']",['methods'],['java.util.Arrays.asList']
28,pass (.*) to (.*),['values'],['arraylist'],['java.lang.Integer.parseInt']
29,pass (.*) to (.*),['it'],['countdowntimer'],['java.lang.String.format']
30,pass (.*) to (.*),"['currentlocation', 'activityone']",['activitytwo'],['java.lang.String.valueOf']
0,show (.*) in (.*),"['the', 'gridline']",['gridlayout'],"['javax.swing.BorderFactory.createMatteBorder', 'javax.swing.BorderFactory.createLineBorder']"
1,show (.*) in (.*),['anything'],"['test', 'methods']",['java.util.logging.Logger.getLogger']
2,show (.*) in (.*),"['different', 'cards']","['a', 'cardlayout']",['java.awt.EventQueue.invokeLater']
3,show (.*) in (.*),"['loading', 'status']",['android'],['java.awt.Dialog.show']
4,show (.*) in (.*),"['task', 'progress']","['a', 'tab']",['java.awt.EventQueue.invokeLater']
5,show (.*) in (.*),"['icon', 'file']","['system', 'tray']","['java.awt.Toolkit.getDefaultToolkit', 'java.awt.SystemTray.getSystemTray']"
6,show (.*) in (.*),['it'],"['google', 'maps']","['java.awt.Dialog.show', 'java.awt.Dialog.setTitle']"
7,show (.*) in (.*),['data'],"['textarea', 'java']",['java.lang.Integer.parseInt']
8,show (.*) in (.*),['up'],['jframe'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
9,show (.*) in (.*),"['netbeans', 'output']","['a', 'form']","['java.awt.EventQueue.invokeLater', 'java.util.logging.Logger.getLogger', 'javax.swing.UIManager.setLookAndFeel']"
10,show (.*) in (.*),"['time', 'counter']","['decimal', 'format']",['java.lang.Integer.parseInt']
11,show (.*) in (.*),['rows'],['jtable'],"['javax.swing.SwingUtilities.invokeLater', 'java.awt.EventQueue.invokeLater']"
12,show (.*) in (.*),['values'],['power'],['java.awt.EventQueue.invokeLater']
13,show (.*) in (.*),"['calendar', 'value']",['tableview'],['java.text.DateFormat.getDateInstance']
14,show (.*) in (.*),"['image', 'written']",['html'],['java.nio.file.Paths.get']
15,show (.*) in (.*),['ending'],"['program', 'freezing']",['java.lang.Runtime.getRuntime']
16,show (.*) in (.*),['bufferedimages'],"['swt', 'project']",['java.lang.Thread.sleep']
17,show (.*) in (.*),['text'],"['a', 'gridlayout']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.UIManager.put', 'javax.swing.UIManager.setLookAndFeel']"
18,show (.*) in (.*),"['user', 'input']","['jframe', 'box']",['javax.swing.SwingUtilities.invokeLater']
19,show (.*) in (.*),['up'],"['a', 'url']",['java.text.Normalizer.normalize']
20,show (.*) in (.*),"['only', 'directories']",['jtree'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.UIManager.getIcon']"
21,show (.*) in (.*),['progress'],"['pie', 'form']","['java.awt.EventQueue.invokeLater', 'java.lang.Math.min']"
22,show (.*) in (.*),"['the', 'report']","['a', 'jframe']","['java.text.NumberFormat.getInstance', 'javax.swing.SwingUtilities.invokeLater']"
23,show (.*) in (.*),['barchar'],"['jtable', 'column']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
24,show (.*) in (.*),"['the', 'integer']",['listview'],['java.util.Collections.shuffle']
25,show (.*) in (.*),"['only', 'panels']",['jcolorchooser'],['javax.swing.JColorChooser.createDialog']
26,show (.*) in (.*),['image'],['jframe'],['javax.imageio.ImageIO.read']
27,show (.*) in (.*),"['regional', 'characters']",['android'],['java.net.URLConnection.getContentEncoding']
28,show (.*) in (.*),['value'],['toast'],['java.lang.Integer.toString']
29,show (.*) in (.*),"['the', 'file']","['windows', 'explorer']",['java.awt.Desktop.getDesktop']
30,show (.*) in (.*),"['image', 'stored']",['byte'],"['javax.swing.text.StyleContext.getDefaultStyleContext', 'javax.swing.text.StyleConstants.setIcon', 'javax.swing.text.StyleConstants.setAlignment']"
31,show (.*) in (.*),"['json', 'array']","['listview', 'combine']",['java.lang.Integer.valueOf']
32,show (.*) in (.*),['up'],['notepad'],['java.lang.System.getProperty']
33,show (.*) in (.*),"['a', 'queue']","['a', 'jlabel']",['javax.swing.JLabel.setText']
34,show (.*) in (.*),"['different', 'data']","['separate', 'jtables']",['java.lang.System.arraycopy']
0,split (.*) into (.*),"['array', 'list']","['equal', 'parts']",['java.lang.Math.min']
1,split (.*) into (.*),['string'],['sentences'],['java.text.BreakIterator.getSentenceInstance']
2,split (.*) into (.*),"['large', 'file']",['chunks'],"['java.lang.System.lineSeparator', 'java.lang.String.format']"
3,split (.*) into (.*),"['a', 'string']","['two', 'parts']",['java.lang.String.split']
4,split (.*) into (.*),"['an', 'image']",['parts'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
5,split (.*) into (.*),['image'],"['clickable', 'regions']","['javax.imageio.ImageIO.read', 'javax.swing.SwingUtilities.invokeLater', 'java.util.logging.Logger.getLogger']"
6,split (.*) into (.*),['string'],['hashmap'],['java.util.regex.Pattern.compile']
7,split (.*) into (.*),"['a', 'string']",['integers'],['java.lang.Integer.parseInt']
8,split (.*) into (.*),['string'],"['matrix', 'array']","['java.lang.String.split', 'java.lang.Integer.parseInt']"
9,split (.*) into (.*),['time'],"['equal', 'intervals']",['java.lang.String.format']
10,split (.*) into (.*),"['excel', 'file']","['multiple', 'sheets']",['java.util.Calendar.getInstance']
11,split (.*) into (.*),['binary'],"['bytes', 'sections']",['java.lang.Integer.toBinaryString']
12,split (.*) into (.*),"['a', 'string']",['groups'],['java.util.regex.Pattern.compile']
13,split (.*) into (.*),['array'],['ranges'],['java.util.Arrays.stream']
14,split (.*) into (.*),['integer'],['digits'],"['java.lang.System.nanoTime', 'java.util.Collections.reverse']"
15,split (.*) into (.*),['object'],['arrays'],"['java.lang.Math.ceil', 'java.lang.Math.floor']"
16,split (.*) into (.*),['string'],['sentences'],['java.text.BreakIterator.getSentenceInstance']
17,split (.*) into (.*),['arraylist'],"['another', 'list']",['java.util.Arrays.asList']
18,split (.*) into (.*),['application'],['two'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
19,split (.*) into (.*),['biginteger'],"['nibble', 'array']",['java.math.BigInteger.valueOf']
20,split (.*) into (.*),"['digit', 'value']",['integers'],['java.lang.Integer.parseInt']
21,split (.*) into (.*),"['a', 'string']","['meaningful', 'tokens']",['java.util.regex.Pattern.compile']
22,split (.*) into (.*),"['srt', 'file']","['equal', 'chunks']",['java.lang.Long.parseLong']
23,split (.*) into (.*),"['d', 'array']",['chunks'],['java.lang.Short.parseShort']
24,split (.*) into (.*),"['string', 'array']",['float'],['java.lang.Double.parseDouble']
25,split (.*) into (.*),['class'],"['smaller', 'ones']",['java.util.Objects.requireNonNull']
26,split (.*) into (.*),"['request', 'xml']","['different', 'xmls']","['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
27,split (.*) into (.*),['filename'],['groups'],['java.util.regex.Pattern.compile']
28,split (.*) into (.*),"['file', 'items']",['array'],['java.nio.file.Files.readAllLines']
29,split (.*) into (.*),['amount'],"['inputs', 'passed']","['java.util.Optional.ofNullable', 'java.util.stream.IntStream.rangeClosed']"
30,split (.*) into (.*),"['unsymmetrical', 'xml']","['multiple', 'xmls']","['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
0,return (.*) from (.*),"['an', 'int']","['edittext', 'android']",['java.lang.Integer.parseInt']
1,return (.*) from (.*),['values'],"['java', 'threads']",['java.util.concurrent.Executors.newCachedThreadPool']
2,return (.*) from (.*),['object'],['callable'],['java.util.concurrent.Executors.newFixedThreadPool']
3,return (.*) from (.*),['list'],"['foreach', 'java']",['java.util.Arrays.stream']
4,return (.*) from (.*),['value'],['executorservice'],['java.util.concurrent.Executors.newSingleThreadExecutor']
5,return (.*) from (.*),['value'],"['multi', 'threading']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.lang.Thread.sleep']"
6,return (.*) from (.*),['value'],['optional'],['java.util.Comparator.comparingInt']
7,return (.*) from (.*),"['correct', 'data']","['active', 'directory']",['java.lang.Integer.parseInt']
8,return (.*) from (.*),['value'],['catch'],['java.lang.Integer.parseInt']
9,return (.*) from (.*),"['multiple', 'times']","['a', 'method']",['java.lang.System.currentTimeMillis']
10,return (.*) from (.*),['values'],"['another', 'thread']",['javax.swing.SwingUtilities.invokeLater']
11,return (.*) from (.*),"['no', 'property']","['param', 'store']",['java.lang.System.setProperty']
12,return (.*) from (.*),"['a', 'double']","['sharedpreferences', 'android']",['java.lang.Double.longBitsToDouble']
13,return (.*) from (.*),['results'],['runnable'],['java.util.concurrent.Executors.newFixedThreadPool']
14,return (.*) from (.*),"['internal', 'ip']","['networkinterface', 'android']",['java.util.Collections.list']
15,return (.*) from (.*),['null'],"['a', 'method']","['java.net.InetAddress.getLocalHost', 'java.util.Optional.of']"
16,return (.*) from (.*),"['observablelist', 'string']","['application', 'context']",['java.util.concurrent.Executors.newCachedThreadPool']
17,return (.*) from (.*),"['x', 'certificate']","['web', 'service']",['java.security.cert.CertificateFactory.getInstance']
18,return (.*) from (.*),"['the', 'value']",['joptionpane'],['javax.swing.JOptionPane.showConfirmDialog']
19,return (.*) from (.*),"['a', 'value']","['two', 'completablefutures']",['java.util.concurrent.CompletableFuture.anyOf']
20,return (.*) from (.*),['value'],['executorservice'],['java.util.concurrent.Executors.newFixedThreadPool']
21,return (.*) from (.*),['value'],['invokeandwait'],['javax.swing.SwingUtilities.invokeAndWait']
22,return (.*) from (.*),['biginteger'],['string'],"['java.time.ZoneId.of', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.ZonedDateTime.now']"
23,return (.*) from (.*),"['base', 'subtype']","['extended', 'generic']",['java.util.Iterator.next']
24,return (.*) from (.*),['code'],"['java', 'class']",['java.lang.System.exit']
25,return (.*) from (.*),['value'],"['recursive', 'function']",['java.lang.Math.max']
26,return (.*) from (.*),['value'],"['recursive', 'function']",['java.util.Scanner.next']
27,return (.*) from (.*),"['a', 'map']",['it'],['javax.xml.bind.JAXBContext.newInstance']
28,return (.*) from (.*),"['affected', 'class']",['iresourcechangelistener'],['java.util.logging.Logger.getAnonymousLogger']
29,return (.*) from (.*),"['an', 'image']","['a', 'thread']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.util.concurrent.Executors.newCachedThreadPool']"
30,return (.*) from (.*),"['several', 'entries']","['one', 'sequence']",['java.util.regex.Pattern.compile']
31,return (.*) from (.*),"['a', 'value']","['a', 'loop']",['java.lang.Integer.toString']
32,return (.*) from (.*),"['custom', 'colors']","['a', 'constructor']",['java.util.Objects.requireNonNull']
33,return (.*) from (.*),['value'],"['a', 'method']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection', 'java.util.logging.Logger.getLogger', 'javax.swing.JOptionPane.showMessageDialog']"
34,return (.*) from (.*),['cod'],"['custom', 'jdialog']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.SwingUtilities.getWindowAncestor', 'javax.swing.JOptionPane.showConfirmDialog']"
35,return (.*) from (.*),"['another', 'thing']","['a', 'method']",['java.lang.Integer.parseInt']
36,return (.*) from (.*),"['the', 'data']",['mysql'],"['java.util.Optional.of', 'java.util.Optional.empty']"
37,return (.*) from (.*),['any'],['query'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
0,access (.*) from (.*),"['static', 'variable']","['another', 'class']",['java.awt.EventQueue.invokeLater']
1,access (.*) from (.*),['thread'],"['inside', 'runnable']","['java.lang.Thread.sleep', 'java.lang.Thread.currentThread']"
2,access (.*) from (.*),['variables'],"['another', 'method']",['java.lang.Double.toString']
3,access (.*) from (.*),['file'],"['another', 'package']",['java.lang.Class.getResourceAsStream']
4,access (.*) from (.*),"['to', 'hashmap']",['outside'],['java.util.Collections.synchronizedMap']
5,access (.*) from (.*),['database'],['java'],['java.sql.DriverManager.getConnection']
6,access (.*) from (.*),"['to', 'hashmap']","['two', 'threads']",['java.util.Collections.synchronizedMap']
7,access (.*) from (.*),['problem'],['jar'],['java.awt.Toolkit.getDefaultToolkit']
8,access (.*) from (.*),"['inner', 'class']","['other', 'class']",['java.util.Collections.sort']
9,access (.*) from (.*),['jmx'],"['inside', 'jvm']","['java.lang.management.ManagementFactory.getPlatformMBeanServer', 'java.lang.management.ManagementFactory.getMemoryPoolMXBeans', 'java.lang.management.ManagementFactory.getGarbageCollectorMXBeans']"
10,access (.*) from (.*),"['mongo', 'shell']",['application'],"['java.lang.Runtime.getRuntime', 'java.util.logging.Logger.getLogger']"
11,access (.*) from (.*),"['resource', 'files']","['jar', 'file']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
12,access (.*) from (.*),['macro'],['java'],"['java.lang.Runtime.getRuntime', 'java.lang.System.getenv']"
13,access (.*) from (.*),['jframe'],"['another', 'class']",['javax.swing.SwingUtilities.invokeLater']
14,access (.*) from (.*),['jvmargs'],"['inside', 'java']",['java.lang.management.ManagementFactory.getRuntimeMXBean']
15,access (.*) from (.*),['thread'],"['external', 'program']",['java.lang.Integer.parseInt']
16,access (.*) from (.*),"['cups', 'variables']",['java'],['java.lang.System.getenv']
17,access (.*) from (.*),"['my', 'database']","['a', 'servlet']",['java.lang.Class.forName']
18,access (.*) from (.*),['canvas'],"['different', 'class']",['java.util.Calendar.getInstance']
19,access (.*) from (.*),"['data', 'source']","['java', 'code']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
20,access (.*) from (.*),['it'],"['my', 'code']",['java.lang.System.getProperty']
21,access (.*) from (.*),['doublebuffer'],"['native', 'code']",['java.nio.ByteBuffer.allocateDirect']
22,access (.*) from (.*),"['an', 'array']",['arraylist'],['java.util.Collection.toArray']
23,access (.*) from (.*),['token'],['keycloak'],['java.util.Base64.getDecoder']
24,access (.*) from (.*),"['pdf', 'file']","['another', 'project']",['java.lang.System.getProperty']
25,access (.*) from (.*),"['variable', 'data']","['different', 'class']","['java.util.Collections.newSetFromMap', 'java.util.Collections.addAll']"
26,access (.*) from (.*),"['returned', 'results']",['rowset'],['javax.sql.rowset.RowSetProvider.newFactory']
27,access (.*) from (.*),['classes'],['package'],"['java.lang.Class.forName', 'java.lang.System.getProperty']"
28,access (.*) from (.*),"['single', 'integer']",['jsonarray'],['java.lang.Integer.parseInt']
29,access (.*) from (.*),['gui'],"['other', 'methode']",['java.awt.EventQueue.invokeLater']
0,add (.*) in (.*),['hyperlink'],['jlabel'],['java.awt.Desktop.getDesktop']
1,add (.*) in (.*),['mins'],"['my', 'time']",['java.util.Calendar.getInstance']
2,add (.*) in (.*),['jcheckbox'],['jtable'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
3,add (.*) in (.*),['image'],['jlist'],['javax.swing.SwingUtilities.invokeLater']
4,add (.*) in (.*),"['textfields', 'dynamically']",['javafx'],['javax.swing.SwingUtilities.invokeLater']
5,add (.*) in (.*),['smileys'],"['java', 'swing']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.text.Utilities.getRowStart', 'javax.swing.text.StyleConstants.setIcon', 'javax.swing.text.Utilities.getWordStart']"
6,add (.*) in (.*),['image'],"['awt', 'frames']",['java.lang.System.exit']
7,add (.*) in (.*),['constraint'],"['hibernate', 'tutorial']",['java.security.MessageDigest.getInstance']
8,add (.*) in (.*),"['background', 'image']",['jtable'],"['javax.imageio.ImageIO.read', 'java.awt.EventQueue.invokeLater', 'java.lang.Math.max', 'javax.swing.UIManager.setLookAndFeel']"
9,add (.*) in (.*),['days'],"['current', 'date']",['java.util.Calendar.getInstance']
10,add (.*) in (.*),['doctype'],"['jaxb', 'marshaller']",['javax.xml.bind.JAXBContext.newInstance']
11,add (.*) in (.*),"['link', 'address']",['runtime'],['java.util.Arrays.asList']
12,add (.*) in (.*),"['a', 'value']","['single', 'statement']","['java.util.stream.Stream.concat', 'java.util.stream.Stream.of']"
13,add (.*) in (.*),['hours'],"['date', 'object']",['java.util.Calendar.getInstance']
14,add (.*) in (.*),['button'],"['text', 'field']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
15,add (.*) in (.*),"['multiple', 'jpanel']",['jframe'],['javax.swing.SwingUtilities.invokeLater']
16,add (.*) in (.*),['jtable'],['jsplitpane'],"['javax.swing.SwingUtilities.invokeLater', 'java.awt.EventQueue.invokeLater']"
17,add (.*) in (.*),"['data', 'dynamically']","['a', 'collection']",['java.util.Collections.sort']
18,add (.*) in (.*),['jbuttons'],"['a', 'defaultlistmodel']",['javax.swing.SwingUtilities.invokeLater']
19,add (.*) in (.*),"['a', 'title']","['a', 'gridlayout']","['javax.swing.BorderFactory.createLineBorder', 'javax.swing.BorderFactory.createEmptyBorder', 'javax.swing.BorderFactory.createTitledBorder']"
20,add (.*) in (.*),"['time', 'delay']","['java', 'programming']","['java.lang.Thread.sleep', 'java.lang.Thread.currentThread']"
21,add (.*) in (.*),"['a', 'row']",['jtable'],['javax.swing.JOptionPane.showMessageDialog']
22,add (.*) in (.*),"['a', 'tiltledborder']","['a', 'gridbaglayout']",['javax.swing.SwingUtilities.invokeLater']
23,add (.*) in (.*),"['a', 'jcheckbox']",['jtable'],['javax.swing.SwingUtilities.invokeLater']
24,add (.*) in (.*),"['same', 'keys']","['this', 'case']",['java.lang.Character.toString']
25,add (.*) in (.*),['button'],"['jtabbedpane', 'background']",['javax.swing.JTabbedPane.setTabComponentAt']
26,add (.*) in (.*),['space'],"['adb', 'command']",['java.lang.Runtime.exec']
27,add (.*) in (.*),"['d', 'effects']",['jtable'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
28,add (.*) in (.*),"['consecutive', 'numbers']","['a', 'string']",['java.lang.Integer.parseInt']
29,add (.*) in (.*),"['append', 'option']",['stringutils'],['java.lang.Double.parseDouble']
30,add (.*) in (.*),"['a', 'button']",['border'],"['javax.swing.Box.createVerticalBox', 'javax.swing.Box.createHorizontalBox']"
31,add (.*) in (.*),"['a', 'sleep']","['my', 'loop']",['java.lang.Thread.sleep']
32,add (.*) in (.*),"['new', 'node']","['xml', 'file']","['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
33,add (.*) in (.*),['spaces'],"['that', 'position']",['java.lang.String.valueOf']
34,add (.*) in (.*),"['signature', 'column']","['the', 'application']","['java.lang.Math.max', 'java.lang.Math.min']"
35,add (.*) in (.*),['numbers'],"['an', 'edittext']",['java.lang.Character.digit']
36,add (.*) in (.*),['this'],['groovy'],['javax.imageio.ImageIO.write']
37,add (.*) in (.*),"['various', 'edittext']","['one', 'textview']","['java.lang.Double.parseDouble', 'java.lang.Double.valueOf', 'java.lang.String.valueOf']"
38,add (.*) in (.*),['operation'],['copyonwritearraylist'],['java.util.Arrays.copyOf']
39,add (.*) in (.*),"['group', 'box']","['ui', 'form']","['javax.swing.BorderFactory.createCompoundBorder', 'javax.swing.BorderFactory.createTitledBorder', 'javax.swing.BorderFactory.createEmptyBorder']"
40,add (.*) in (.*),"['debug', 'flag']","['rcp', 'application']",['java.lang.System.getProperty']
41,add (.*) in (.*),['statement'],"['array', 'lists']",['javax.swing.JOptionPane.showInputDialog']
42,add (.*) in (.*),"['to', 'evreything']",['arraylist'],['java.lang.System.arraycopy']
43,add (.*) in (.*),['values'],"['an', 'arraylist']",['java.lang.Integer.parseInt']
0,change (.*) in (.*),"['text', 'color']","['the', 'jtextarea']","['javax.swing.text.StyleContext.getDefaultStyleContext', 'javax.swing.SwingUtilities.invokeLater']"
1,change (.*) in (.*),"['java', 'icon']","['a', 'jframe']",['java.awt.Toolkit.getDefaultToolkit']
2,change (.*) in (.*),[],['cursor'],['java.lang.System.currentTimeMillis']
3,change (.*) in (.*),"['button', 'text']","['joptionpane', 'showconfirmdialog']",['javax.swing.JOptionPane.showOptionDialog']
4,change (.*) in (.*),"['one', 'value']","['xml', 'files']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
5,change (.*) in (.*),"['the', 'document']",['documentlistener'],"['java.awt.EventQueue.invokeLater', 'javax.swing.text.StyleConstants.setBackground', 'javax.swing.UIManager.setLookAndFeel']"
6,change (.*) in (.*),"['last', 'element']","['a', 'list']","['java.util.Arrays.asList', 'java.util.stream.Stream.concat']"
7,change (.*) in (.*),"['cell', 'color']","['itext', 'java']",['java.lang.Integer.parseInt']
8,change (.*) in (.*),['gap'],"['swing', 'label']",['javax.swing.SwingUtilities.invokeLater']
9,change (.*) in (.*),['value'],"['another', 'textfield']",['java.lang.Integer.parseInt']
10,change (.*) in (.*),"['download', 'filename']",['struts'],['java.lang.Integer.parseInt']
11,change (.*) in (.*),"['constructor', 'name']",['console'],['java.lang.Math.floor']
12,change (.*) in (.*),['jframe'],"['windowbuilder', 'eclipse']",['javax.swing.JOptionPane.showMessageDialog']
13,change (.*) in (.*),"['color', 'lightness']",['jquery'],"['java.lang.Math.max', 'java.lang.Math.min']"
14,change (.*) in (.*),"['explicitly', 'encoding']",['jackson'],['java.lang.Thread.currentThread']
15,change (.*) in (.*),"['the', 'gui']","['real', 'time']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.SwingUtilities.updateComponentTreeUI', 'javax.swing.UIManager.setLookAndFeel']"
16,change (.*) in (.*),"['description', 'image']","['jlist', 'java']","['javax.swing.BorderFactory.createEmptyBorder', 'javax.swing.UIManager.setLookAndFeel']"
17,change (.*) in (.*),"['date', 'format']",['timestamp'],"['java.time.LocalDate.parse', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.LocalDate.now', 'java.time.ZoneId.systemDefault']"
18,change (.*) in (.*),"['host', 'name']",['endpoint'],['javax.xml.ws.Endpoint.publish']
19,change (.*) in (.*),"['code', 'settings']",['eclipse'],['java.lang.System.getProperty']
20,change (.*) in (.*),['times'],"['an', 'arraylist']",['java.util.stream.IntStream.range']
21,change (.*) in (.*),['month'],"['date', 'valueof']",['java.util.Calendar.getInstance']
22,change (.*) in (.*),"['browser', 'version']",['jsoup'],['java.lang.System.setProperty']
23,change (.*) in (.*),"['row', 'index']","['matrix', 'd']",['java.util.Calendar.getInstance']
24,change (.*) in (.*),['precedence'],['sorting'],['java.util.Arrays.sort']
25,change (.*) in (.*),"['to', 'pst']",['winters'],['java.util.TimeZone.getTimeZone']
26,change (.*) in (.*),['variable'],['jlabel'],['java.awt.EventQueue.invokeLater']
27,change (.*) in (.*),['variable'],['broadcastreceiver'],['java.util.Calendar.getInstance']
0,parse (.*) to (.*),['xml'],['hashmap'],['javax.xml.bind.JAXBContext.newInstance']
1,parse (.*) to (.*),['string'],"['localdate', 'java']",['java.time.format.DateTimeFormatter.ofPattern']
2,parse (.*) to (.*),['txt'],['csv'],"['java.nio.file.Paths.get', 'java.nio.charset.Charset.forName', 'java.nio.file.Files.lines']"
3,parse (.*) to (.*),['string'],['int'],['java.lang.Integer.parseInt']
4,parse (.*) to (.*),"['utf', 'representation']",['string'],['java.lang.Integer.parseInt']
5,parse (.*) to (.*),['string'],['localdatetime'],"['java.time.LocalDate.of', 'java.time.LocalTime.parse']"
6,parse (.*) to (.*),['tree'],['stdout'],"['java.lang.System.lineSeparator', 'java.util.Arrays.asList']"
7,parse (.*) to (.*),['exception'],"['custom', 'exception']",['java.util.Calendar.getInstance']
8,parse (.*) to (.*),"['from', 'one']","['another', 'format']",['java.util.Date.parse']
9,parse (.*) to (.*),['string'],['number'],['java.text.NumberFormat.getNumberInstance']
10,parse (.*) to (.*),['binary'],['long'],['java.lang.Long.parseLong']
11,parse (.*) to (.*),"['the', 'string']",['double'],['java.lang.Double.parseDouble']
12,parse (.*) to (.*),"['csv', 'file']","['sql', 'server']",['javax.swing.JOptionPane.showMessageDialog']
13,parse (.*) to (.*),['string'],['int'],['java.lang.Long.parseLong']
14,parse (.*) to (.*),"['string', 'dateformat']","['only', 'time']","['java.util.Calendar.getInstance', 'java.util.Date.toString']"
15,parse (.*) to (.*),"['the', 'key']","['an', 'object']",['java.util.regex.Pattern.compile']
16,parse (.*) to (.*),['localdate'],"['hashmap', 'token']","['java.time.LocalDate.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
17,parse (.*) to (.*),['history'],"['dialog', 'json']","['java.util.regex.Pattern.compile', 'java.nio.file.Files.write']"
18,parse (.*) to (.*),"['json', 'object']",['array'],"['java.util.Arrays.toString', 'java.lang.Integer.parseInt']"
19,parse (.*) to (.*),['string'],"['an', 'object']","['java.lang.Class.forName', 'javax.swing.JOptionPane.showMessageDialog']"
20,parse (.*) to (.*),"['nov', 'am']",['localdatetime'],['java.time.LocalDateTime.parse']
21,parse (.*) to (.*),[],"['and', 'to']",['java.text.NumberFormat.getInstance']
22,parse (.*) to (.*),"['non', 'iso']","['iso', 'instant']","['java.time.ZoneId.of', 'java.time.OffsetDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
23,parse (.*) to (.*),['string'],['double'],"['java.lang.Double.parseDouble', 'java.util.regex.Pattern.compile', 'java.lang.String.valueOf']"
24,parse (.*) to (.*),['server'],"['retrieve', 'list']",['java.awt.Dialog.show']
0,retrieve (.*) from (.*),['data'],"['database', 'correctly']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
1,retrieve (.*) from (.*),['date'],['jdatechooser'],['java.lang.String.format']
2,retrieve (.*) from (.*),['value'],['xpath'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
3,retrieve (.*) from (.*),['object'],['solr'],['java.util.Arrays.asList']
4,retrieve (.*) from (.*),['image'],"['sql', 'server']",['java.lang.System.getProperty']
5,retrieve (.*) from (.*),"['an', 'image']","['the', 'web']",['javax.imageio.ImageIO.read']
6,retrieve (.*) from (.*),['data'],['database'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
7,retrieve (.*) from (.*),"['class', 'object']","['soap', 'envelope']",['java.lang.Integer.valueOf']
8,retrieve (.*) from (.*),"['chosen', 'date']",['jdatechooser'],['java.text.SimpleDateFormat.format']
9,retrieve (.*) from (.*),['minutes'],"['string', 'date']",['java.lang.Integer.parseInt']
10,retrieve (.*) from (.*),"['an', 'object']","['a', 'collection']","['java.util.Arrays.asList', 'java.util.Collection.iterator', 'java.util.Collection.toArray']"
11,retrieve (.*) from (.*),"['native', 'address']","['bytebuffer', 'object']",['java.nio.ByteBuffer.allocateDirect']
12,retrieve (.*) from (.*),"['timezone', 'offset']","['date', 'time']",['java.util.TimeZone.getAvailableIDs']
13,retrieve (.*) from (.*),"['all', 'objects']","['arraylist', 'method']",['java.util.Collections.unmodifiableList']
14,retrieve (.*) from (.*),"['redirect', 'url']","['http', 'server']",['java.net.HttpURLConnection.setFollowRedirects']
15,retrieve (.*) from (.*),['value'],['cdata'],['javax.xml.bind.JAXB.unmarshal']
16,retrieve (.*) from (.*),"['bare', 'html']","['xpath', 'query']",['javax.xml.transform.TransformerFactory.newInstance']
17,retrieve (.*) from (.*),"['imageicon', 'elements']","['vector', 'strings']",['javax.imageio.ImageIO.read']
18,retrieve (.*) from (.*),['architecture'],['java'],['java.lang.System.getProperty']
19,retrieve (.*) from (.*),['link'],['text'],['java.util.regex.Pattern.compile']
20,retrieve (.*) from (.*),['values'],"['xml', 'tag']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
21,retrieve (.*) from (.*),['data'],"['shared', 'preferences']",['java.lang.String.valueOf']
22,retrieve (.*) from (.*),['response'],"['camel', 'session']",['java.lang.Thread.sleep']
23,retrieve (.*) from (.*),['sample'],['arraylist'],['java.util.Collections.shuffle']
24,retrieve (.*) from (.*),['arraylist'],"['other', 'activity']","['java.util.Collections.sort', 'java.lang.Double.parseDouble']"
25,retrieve (.*) from (.*),['info'],['links'],['java.lang.System.setProperty']
26,retrieve (.*) from (.*),['data'],['xml'],"['java.lang.Integer.parseInt', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
0,replace (.*) with (.*),['it'],"['another', 'value']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
1,replace (.*) with (.*),"['throws', 'error']",['sign'],"['java.util.regex.Matcher.quoteReplacement', 'java.lang.String.replaceAll']"
2,replace (.*) with (.*),"['single', 'backslash']","['double', 'backslashes']",['java.util.regex.Matcher.quoteReplacement']
3,replace (.*) with (.*),"['underscore', 'lowercase']",['uppercase'],['java.util.regex.Pattern.compile']
4,replace (.*) with (.*),['strings'],"['random', 'strings']","['java.util.Arrays.asList', 'java.util.regex.Pattern.compile']"
5,replace (.*) with (.*),"['java', 'hashmap']","['boolean', 'values']",['java.util.HashMap.put']
6,replace (.*) with (.*),"['jaxb', 'properties']",['code'],['javax.xml.bind.JAXBContext.newInstance']
7,replace (.*) with (.*),['content'],['regex'],['java.util.regex.Pattern.compile']
8,replace (.*) with (.*),['string'],"['character', 'code']",['java.lang.String.valueOf']
9,replace (.*) with (.*),['jce'],"['bouncycastle', 'jar']","['java.util.Arrays.copyOf', 'javax.crypto.Cipher.getInstance']"
10,replace (.*) with (.*),['schedulerlock'],"['programmatic', 'style']",['java.time.Instant.now']
11,replace (.*) with (.*),['regexp'],"['processed', 'match']","['java.util.regex.Pattern.compile', 'java.util.regex.Matcher.appendReplacement', 'java.lang.Integer.parseInt']"
12,replace (.*) with (.*),['all'],"['capturing', 'group']",['java.util.regex.Pattern.compile']
13,replace (.*) with (.*),"['capturing', 'group']","['different', 'value']",['java.util.regex.Pattern.compile']
14,replace (.*) with (.*),"['futures', 'successfulaslist']","['java', 'completablefuture']","['java.util.stream.Stream.of', 'java.util.concurrent.CompletableFuture.allOf']"
15,replace (.*) with (.*),['spaces'],['plus'],['java.util.regex.Pattern.compile']
16,replace (.*) with (.*),['placeholders'],"['resource', 'strings']",['java.util.regex.Pattern.compile']
17,replace (.*) with (.*),['characters'],['one'],['java.lang.String.split']
18,replace (.*) with (.*),"['the', 'method']","['java', 'streams']","['java.util.Collections.nCopies', 'java.lang.String.join']"
19,replace (.*) with (.*),"['each', 'text']","['different', 'text']",['java.lang.Integer.parseInt']
20,replace (.*) with (.*),"['xml', 'element']",['java'],"['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
21,replace (.*) with (.*),['it'],"['another', 'color']",['javax.imageio.ImageIO.write']
22,replace (.*) with (.*),"['while', 'loop']",['lambda'],['java.lang.Math.abs']
23,replace (.*) with (.*),['string'],"['increasing', 'number']",['java.util.regex.Pattern.compile']
24,replace (.*) with (.*),"['sql', 'exception']","['empty', 'object']",['java.util.Optional.get']
25,replace (.*) with (.*),"['a', 'character']","['a', 'string']",['java.lang.String.replace']
26,replace (.*) with (.*),['regex'],"['method', 'outcome']",['java.util.regex.Pattern.compile']
27,replace (.*) with (.*),['issue'],"['characters', 'like']","['java.lang.String.replaceAll', 'java.lang.String.replace']"
28,replace (.*) with (.*),['string'],"['method', 'value']","['java.util.regex.Pattern.compile', 'java.lang.String.valueOf']"
29,replace (.*) with (.*),"['each', 'text']",['another'],['javax.swing.text.StyleContext.getDefaultStyleContext']
30,replace (.*) with (.*),"['all', 'variables']",['integers'],['java.util.regex.Pattern.compile']
31,replace (.*) with (.*),['jtextfield'],"['an', 'image']","['javax.imageio.ImageIO.read', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
32,replace (.*) with (.*),"['nested', 'string']","['some', 'rules']",['java.util.regex.Pattern.compile']
33,replace (.*) with (.*),"['thread', 'sleep']",['rxjava'],['java.lang.Thread.sleep']
34,replace (.*) with (.*),"['integer', 'objects']",['primitives'],['java.lang.Integer.valueOf']
35,replace (.*) with (.*),"['regex', 'pattern']","['evaluated', 'key']",['java.util.regex.Pattern.compile']
36,replace (.*) with (.*),['regex'],"['regex', 'pattern']",['java.lang.String.replaceAll']
37,replace (.*) with (.*),"['click', 'button']",['hold'],['java.lang.System.currentTimeMillis']
38,replace (.*) with (.*),['it'],['uppercase'],['java.lang.Character.toUpperCase']
0,issue (.*) in (.*),"['working', 'fine']",['eclipse'],['java.lang.System.lineSeparator']
1,issue (.*) in (.*),"['with', 'subtract']",['bigdecimal'],['java.math.BigDecimal.toPlainString']
0,set (.*) to (.*),['time'],[],['java.util.Calendar.getInstance']
1,set (.*) to (.*),['name'],"['the', 'thread']",['java.lang.Thread.currentThread']
2,set (.*) to (.*),"['output', 'stream']",['textarea'],"['java.awt.EventQueue.invokeLater', 'java.lang.Character.toString', 'java.lang.System.setOut', 'javax.swing.UIManager.setLookAndFeel']"
3,set (.*) to (.*),['value'],"['a', 'string']","['java.lang.Double.toString', 'java.lang.String.format']"
4,set (.*) to (.*),"['dateformat', 'timezone']",['gmt'],['java.text.DateFormat.getDateInstance']
5,set (.*) to (.*),"['namespace', 'aware']",['false'],"['javax.xml.bind.JAXBContext.newInstance', 'javax.xml.stream.XMLInputFactory.newFactory']"
6,set (.*) to (.*),"['system', 'propery']",['null'],['java.lang.System.clearProperty']
7,set (.*) to (.*),"['the', 'border']",['emptyborder'],['javax.swing.SwingUtilities.invokeLater']
8,set (.*) to (.*),"['different', 'colors']","['arraylist', 'content']",['javax.swing.text.StyleContext.getDefaultStyleContext']
9,set (.*) to (.*),"['locale', 'properly']","['a', 'jfilechooser']",['javax.swing.UIManager.getString']
10,set (.*) to (.*),"['unix', 'timestamp']","['a', 'datepicker']",['java.util.Calendar.getInstance']
11,set (.*) to (.*),"['action', 'listener']",['buttons'],['java.util.Calendar.getInstance']
12,set (.*) to (.*),['spannable'],['textview'],['java.lang.String.format']
13,set (.*) to (.*),['icon'],['jframe'],['javax.imageio.ImageIO.getReaderFileSuffixes']
14,set (.*) to (.*),"['scrollablecomposite', 'position']",['location'],['java.lang.String.valueOf']
15,set (.*) to (.*),['calendar'],"['next', 'thursday']",['java.util.Calendar.getInstance']
16,set (.*) to (.*),['scrollbar'],['jtable'],['java.sql.DriverManager.getConnection']
17,set (.*) to (.*),['data'],"['model', 'class']",['javax.xml.parsers.SAXParserFactory.newInstance']
18,set (.*) to (.*),['collection'],"['current', 'date']",['java.util.Date.getTime']
19,set (.*) to (.*),['string'],"['calendar', 'type']",['java.util.Calendar.getInstance']
20,set (.*) to (.*),"['jpanel', 'height']",['auto'],['javax.swing.UIManager.setLookAndFeel']
21,set (.*) to (.*),"['of', 'threads']","['really', 'finish']",['java.lang.Thread.currentThread']
22,set (.*) to (.*),['datepickerdialogue'],"['current', 'date']",['java.util.Calendar.getInstance']
23,set (.*) to (.*),[],['true'],"['java.util.BitSet.valueOf', 'java.util.Arrays.stream', 'java.util.stream.IntStream.rangeClosed', 'java.util.Arrays.sort']"
24,set (.*) to (.*),['it'],"['a', 'clock']","['java.lang.System.currentTimeMillis', 'java.util.Calendar.getInstance']"
25,set (.*) to (.*),"['imagewriter', 'output']",['objectoutputstream'],"['javax.imageio.ImageIO.write', 'javax.imageio.ImageIO.createImageOutputStream', 'javax.imageio.ImageIO.getImageWritersByFormatName']"
26,set (.*) to (.*),"['is', 'changed']","['another', 'value']","['java.util.Arrays.deepHashCode', 'java.lang.Object.hashCode']"
27,set (.*) to (.*),"['calendar', 'date']","['current', 'date']","['java.util.TimeZone.setDefault', 'java.lang.System.currentTimeMillis', 'java.util.Calendar.getInstance']"
28,set (.*) to (.*),['it'],['be'],['java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment']
29,set (.*) to (.*),"['next', 'encoding']","['a', 'file']",['java.nio.file.Files.readAllLines']
30,set (.*) to (.*),['newitem'],['joptionpane'],['javax.swing.JOptionPane.showInputDialog']
0,load (.*) from (.*),"['a', 'file']","['resource', 'folder']","['java.nio.file.Paths.get', 'java.nio.file.Files.readAllLines', 'java.lang.Thread.currentThread']"
1,load (.*) from (.*),['resources'],"['the', 'classpath']","['java.net.URL.setURLStreamHandlerFactory', 'java.lang.Thread.currentThread']"
2,load (.*) from (.*),"['properties', 'file']","['resources', 'directory']",['java.lang.Thread.currentThread']
3,load (.*) from (.*),"['public', 'certificate']","['pem', 'file']",['java.security.cert.CertificateFactory.getInstance']
4,load (.*) from (.*),['icon'],['resource'],['javax.imageio.ImageIO.read']
5,load (.*) from (.*),['dll'],['jar'],"['java.lang.System.mapLibraryName', 'java.lang.System.load']"
6,load (.*) from (.*),['resourcebundle'],['classpath'],['java.util.ResourceBundle.getBundle']
7,load (.*) from (.*),"['native', 'library']","['class', 'path']","['java.lang.System.setProperty', 'java.lang.System.loadLibrary']"
8,load (.*) from (.*),"['java', 'class']",['database'],['java.lang.Class.forName']
9,load (.*) from (.*),"['so', 'file']","['a', 'jar']","['java.io.File.createTempFile', 'java.lang.System.load']"
10,load (.*) from (.*),"['hibernate', 'entities']","['external', 'jar']",['java.lang.Thread.currentThread']
11,load (.*) from (.*),['dynamic'],"['absolute', 'path']",['java.nio.file.Paths.get']
12,load (.*) from (.*),['classes'],"['jar', 'dynamically']",['java.lang.Class.forName']
13,load (.*) from (.*),['mods'],"['external', 'jars']",['java.net.URLClassLoader.newInstance']
14,load (.*) from (.*),['image'],['url'],"['javax.imageio.ImageIO.read', 'java.lang.Math.abs', 'java.lang.System.exit']"
15,load (.*) from (.*),"['icc', 'profile']",['classpath'],['java.util.Collections.singletonList']
16,load (.*) from (.*),"['native', 'sample']",['loader'],['java.lang.System.load']
17,load (.*) from (.*),['classes'],['string'],['java.lang.Class.forName']
18,load (.*) from (.*),['schema'],['string'],['org.w3c.dom.bootstrap.DOMImplementationRegistry.newInstance']
19,load (.*) from (.*),['test'],"['java', 'code']","['java.lang.System.getProperty', 'java.lang.System.exit']"
20,load (.*) from (.*),['data'],['database'],['java.sql.ResultSet.getRow']
21,load (.*) from (.*),['files'],['beanshell'],['java.io.File.listFiles']
22,load (.*) from (.*),['library'],['memoryclassloader'],['java.lang.Runtime.getRuntime']
23,load (.*) from (.*),['class'],"['user', 'input']",['java.lang.Class.forName']
24,load (.*) from (.*),"['static', 'file']",['resources'],['java.nio.file.Paths.get']
25,load (.*) from (.*),['file'],"['jar', 'archive']",['javax.imageio.ImageIO.read']
26,load (.*) from (.*),['properties'],['jar'],['java.util.logging.Logger.getLogger']
27,load (.*) from (.*),"['a', 'number']","['a', 'file']","['java.lang.Long.valueOf', 'java.lang.Long.parseLong']"
28,load (.*) from (.*),"['value', 'dynamically']","['properties', 'file']",['java.lang.Integer.parseInt']
0,format (.*) in (.*),['number'],['millions'],['java.lang.String.format']
1,format (.*) in (.*),"['a', 'decimal']","['birt', 'reports']",['java.util.logging.Formatter.format']
2,format (.*) in (.*),"['a', 'text']",['jlabel'],['javax.swing.JOptionPane.showMessageDialog']
3,format (.*) in (.*),"['a', 'table']",['joptionpane'],['javax.swing.JOptionPane.showMessageDialog']
4,format (.*) in (.*),"['for', 'numbers']",['textview'],['java.lang.String.format']
5,format (.*) in (.*),['equivalent'],['java'],['java.lang.Integer.toHexString']
6,format (.*) in (.*),['exception'],['android'],['java.lang.Integer.parseInt']
7,format (.*) in (.*),"['a', 'date']","['java', 'me']",['java.util.Calendar.getInstance']
8,format (.*) in (.*),['double'],['tablecolumn'],['java.text.NumberFormat.getCurrencyInstance']
9,format (.*) in (.*),"['output', 'date']",['itemwriter'],['java.lang.String.format']
10,format (.*) in (.*),"['gps', 'data']","['java', 'android']",['java.lang.String.valueOf']
11,format (.*) in (.*),"['printf', 'spacing']","['java', 'assistance']",['java.lang.String.format']
12,format (.*) in (.*),"['modifiers', 'doubles']",['string'],['java.lang.String.format']
13,format (.*) in (.*),"['a', 'period']","['java', 'jsr']","['java.time.LocalDate.of', 'java.time.Period.of', 'java.time.format.DateTimeFormatter.ofPattern', 'java.lang.String.format']"
14,format (.*) in (.*),[''],"['iso', 'format']",['java.time.Instant.from']
15,format (.*) in (.*),['output'],"['a', 'textfield']",['java.lang.String.format']
16,format (.*) in (.*),['number'],['android'],['java.text.NumberFormat.getNumberInstance']
17,format (.*) in (.*),[''],"['exponential', 'format']",['java.text.NumberFormat.getInstance']
18,format (.*) in (.*),['dates'],"['three', 'locales']",['java.text.MessageFormat.format']
19,format (.*) in (.*),"['exception', 'error']","['the', 'code']",['java.lang.Integer.parseInt']
20,format (.*) in (.*),['exception'],"['user', 'input']",['java.lang.Double.parseDouble']
21,format (.*) in (.*),['calendar'],['android'],"['java.time.LocalDateTime.parse', 'java.time.ZoneId.of', 'java.time.format.DateTimeFormatter.ofPattern']"
22,format (.*) in (.*),"['be', 'configured']","['the', 'environment']","['java.time.LocalDateTime.parse', 'java.time.LocalDateTime.toString']"
23,format (.*) in (.*),['method'],"['numberformat', 'java']",['java.text.NumberFormat.getInstance']
24,format (.*) in (.*),"['first', 'values']",['arrays'],['java.util.Arrays.stream']
25,format (.*) in (.*),['matching'],['groovy'],"['java.time.LocalDate.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
26,format (.*) in (.*),"['error', 'jtextfields']","['wrong', 'positions']",['java.lang.String.valueOf']
27,format (.*) in (.*),"['numeric', 'string']",['decimal'],"['java.lang.Long.parseLong', 'java.lang.Math.pow']"
0,get (.*) using (.*),"['element', 'values']","['element', 'getattribute']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
1,get (.*) using (.*),"['field', 'values']",['reflection'],['java.lang.Class.forName']
2,get (.*) using (.*),"['list', 'by']",['jsonpath'],"['java.nio.file.Files.readAllBytes', 'java.nio.charset.Charset.defaultCharset']"
3,get (.*) using (.*),"['mariadb', 'connection']",['java'],['java.lang.Class.forName']
4,get (.*) using (.*),"['only', 'weekdays']",['java'],['java.util.Calendar.getInstance']
5,get (.*) using (.*),"['response', 'header']","['jax', 'ws']",['javax.xml.soap.MessageFactory.newInstance']
6,get (.*) using (.*),"['its', 'output']",['java'],['java.lang.Thread.sleep']
7,get (.*) using (.*),"['requestheader', 'value']",['reflection'],['java.lang.reflect.Method.getParameterAnnotations']
8,get (.*) using (.*),"['last', 'string']",['java'],['java.lang.Integer.parseInt']
9,get (.*) using (.*),"['data', 'java']",['rxtx'],['java.lang.System.currentTimeMillis']
10,get (.*) using (.*),"['operation', 'data']",['javassist'],['java.lang.System.getProperty']
11,get (.*) using (.*),['webpage'],"['api', 'htmlunit']",['java.lang.Thread.sleep']
12,get (.*) using (.*),['substring'],"['regular', 'expression']",['java.util.regex.Pattern.compile']
13,get (.*) using (.*),['nullpointerexception'],['cardlayout'],['java.lang.String.valueOf']
14,get (.*) using (.*),"['average', 'time']","['joda', 'time']",['java.text.NumberFormat.getInstance']
15,get (.*) using (.*),"['the', 'response']","['java', 'code']",['java.lang.Runtime.getRuntime']
16,get (.*) using (.*),"['ubuntu', 'version']",['java'],['java.lang.Runtime.getRuntime']
17,get (.*) using (.*),"['snmpv', 'trap']",['adventnet'],['java.lang.Integer.valueOf']
18,get (.*) using (.*),"['an', 'enum']","['its', 'value']",['java.lang.Enum.valueOf']
19,get (.*) using (.*),['json'],"['async', 'task']",['java.net.URLEncoder.encode']
20,get (.*) using (.*),['diff'],"['java', 'streams']","['java.util.stream.Collectors.collectingAndThen', 'java.util.stream.Collectors.groupingBy']"
21,get (.*) using (.*),"['all', 'strings']",['regex'],['java.util.regex.Pattern.compile']
22,get (.*) using (.*),"['thread', 'pool']","['multiple', 'datasource']",['java.util.concurrent.Executors.newFixedThreadPool']
23,get (.*) using (.*),"['integer', 'values']",['regex'],['java.util.regex.Pattern.compile']
24,get (.*) using (.*),"['pattern', 'data']",['loop'],"['java.util.regex.Matcher.group', 'java.util.regex.Matcher.find']"
25,get (.*) using (.*),"['browsers', 'installed']",['jnlp'],"['java.lang.Runtime.exec', 'java.awt.Desktop.getDesktop']"
0,list (.*) of (.*),"['or', 'array']","['sequential', 'integers']",['java.util.stream.IntStream.rangeClosed']
1,list (.*) of (.*),[],[],['java.util.Arrays.asList']
2,list (.*) of (.*),"['to', 'map']",['maps'],['java.util.stream.Collectors.toMap']
3,list (.*) of (.*),['type'],['collections'],['java.util.Collections.sort']
4,list (.*) of (.*),"['on', 'base']","['multiple', 'criteria']",['java.util.Collections.sort']
5,list (.*) of (.*),['consisting'],"['integer', 'pairs']",['java.util.Collections.sort']
6,list (.*) of (.*),"['in', 'groups']",['k'],['java.util.Collections.sort']
7,list (.*) of (.*),"['foreach', 'instead']","['for', 'java']",['java.util.stream.IntStream.range']
8,list (.*) of (.*),['variable'],"['an', 'object']",['java.util.Arrays.stream']
9,list (.*) of (.*),"['with', 'help']",['index'],['java.util.Arrays.asList']
10,list (.*) of (.*),[],"['n', 'values']",['java.util.Collections.nCopies']
11,list (.*) of (.*),"['to', 'list']",['tuple'],['java.lang.String.format']
12,list (.*) of (.*),"['to', 'map']","['objects', 'java']","['java.util.stream.Collectors.groupingBy', 'java.util.stream.Collectors.toList', 'java.util.stream.Collectors.mapping']"
13,list (.*) of (.*),"['in', 'map']",['maps'],"['java.util.Objects.hashCode', 'java.util.Arrays.asList', 'java.util.stream.Collectors.groupingBy', 'java.util.function.Function.identity', 'java.util.stream.Collectors.toMap']"
14,list (.*) of (.*),['type'],"['any', 'object']",['java.util.Collections.reverse']
15,list (.*) of (.*),['made'],"['string', 'arrays']","['java.util.Collections.sort', 'java.lang.Integer.parseInt']"
16,list (.*) of (.*),[],['object'],['java.util.concurrent.CompletableFuture.supplyAsync']
17,list (.*) of (.*),"['with', 'part']","['an', 'array']",['java.util.Arrays.asList']
18,list (.*) of (.*),"['using', 'stream']",[],['java.util.stream.Stream.of']
19,list (.*) of (.*),['out'],['int'],"['java.util.ArrayList.indexOf', 'java.util.Arrays.deepEquals']"
20,list (.*) of (.*),['type'],['object'],['java.util.stream.IntStream.range']
0,handle (.*) in (.*),"['cancel', 'button']",['joptionpane'],"['javax.swing.JOptionPane.showOptionDialog', 'javax.swing.JOptionPane.showInputDialog', 'javax.swing.JOptionPane.showConfirmDialog']"
1,handle (.*) in (.*),['null'],"['pattern', 'compile']",['java.util.regex.Pattern.matcher']
2,handle (.*) in (.*),"['page', 'navigation']",['jsp'],['java.util.UUID.randomUUID']
3,handle (.*) in (.*),"['innodb', 'deadlocks']","['java', 'jdbc']","['java.lang.Thread.sleep', 'java.sql.ResultSet.close', 'java.sql.Statement.executeQuery']"
4,handle (.*) in (.*),"['br', 'tags']",['android'],['java.lang.System.getProperty']
5,handle (.*) in (.*),"['thread', 'interrupted']","['a', 'callable']",['java.nio.channels.Channels.newInputStream']
6,handle (.*) in (.*),['timeout'],"['spring', 'webclient']",['java.time.Duration.ofSeconds']
7,handle (.*) in (.*),"['java', 'exception']","['thread', 'run']",['java.util.concurrent.Executors.newFixedThreadPool']
8,handle (.*) in (.*),['spaces'],"['url', 'android']",['java.net.URLEncoder.encode']
9,handle (.*) in (.*),['cdata'],['jaxb'],['javax.xml.bind.JAXBContext.newInstance']
10,handle (.*) in (.*),"['double', 'quotes']","['pattern', 'compile']",['java.util.regex.Pattern.compile']
11,handle (.*) in (.*),"['special', 'character']",['uri'],"['java.net.URLEncoder.encode', 'java.net.URLDecoder.decode']"
12,handle (.*) in (.*),['exceptions'],"['lambda', 'expressions']",['java.util.Optional.ofNullable']
13,handle (.*) in (.*),"['derived', 'property']",['javafx'],['java.time.Period.between']
14,handle (.*) in (.*),"['back', 'pressure']",['fixedthreadpool'],['java.util.logging.Logger.getLogger']
15,handle (.*) in (.*),['ioexception'],"['a', 'comparator']",['java.nio.file.Files.getLastModifiedTime']
16,handle (.*) in (.*),['errors'],['multithreading'],"['java.util.concurrent.Executors.newFixedThreadPool', 'java.util.concurrent.FutureTask.get', 'java.lang.Thread.run', 'java.util.concurrent.FutureTask.run']"
17,handle (.*) in (.*),"['strings', 'efficiently']",['java'],['java.util.regex.Pattern.split']
18,handle (.*) in (.*),"['extra', 'value']","['java', 'streams']","['java.util.Optional.empty', 'java.util.stream.Stream.of']"
19,handle (.*) in (.*),['exceptions'],"['custom', 'library']",['javax.imageio.ImageIO.read']
20,handle (.*) in (.*),"['unicode', 'words']","['regex', 'parsing']",['java.util.regex.Pattern.compile']
0,change (.*) of (.*),"['background', 'color']",['joptionpane'],['javax.swing.JOptionPane.showMessageDialog']
1,change (.*) of (.*),"['background', 'color']",['jtabbedpane'],"['java.awt.Color.getHSBColor', 'java.awt.EventQueue.invokeLater']"
2,change (.*) of (.*),"['background', 'color']","['progress', 'bar']","['javax.swing.UIManager.getLookAndFeelDefaults', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
3,change (.*) of (.*),"['field', 'value']","['mocked', 'object']","['java.util.Arrays.equals', 'java.util.regex.Pattern.compile', 'java.lang.reflect.Modifier.isFinal']"
4,change (.*) of (.*),['shape'],['jpanel'],"['java.lang.Math.min', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
5,change (.*) of (.*),['position'],"['a', 'jlabel']",['java.awt.EventQueue.invokeLater']
6,change (.*) of (.*),"['the', 'value']","['class', 'variables']",['java.lang.Thread.sleep']
7,change (.*) of (.*),"['the', 'options']","['another', 'dropdownchoice']",['java.util.Arrays.asList']
8,change (.*) of (.*),"['the', 'width']",['jdialog'],['javax.swing.SwingUtilities.computeStringWidth']
9,change (.*) of (.*),['style'],"['progressbar', 'javafx']",['java.lang.Thread.sleep']
10,change (.*) of (.*),['color'],['pixel'],['javax.imageio.ImageIO.write']
11,change (.*) of (.*),['saturation'],['image'],"['java.awt.Color.HSBtoRGB', 'java.awt.Color.RGBtoHSB']"
12,change (.*) of (.*),"['the', 'name']","['thread', 'group']","['java.lang.Thread.sleep', 'java.lang.Thread.currentThread']"
13,change (.*) of (.*),"['the', 'order']",['panels'],"['javax.swing.Box.createVerticalBox', 'javax.swing.Box.createRigidArea', 'java.lang.Math.pow', 'java.lang.Math.sqrt', 'javax.swing.SwingUtilities.convertPointToScreen', 'javax.swing.BorderFactory.createLineBorder', 'javax.swing.BorderFactory.createEmptyBorder', 'java.awt.dnd.DragSource.getDragThreshold', 'java.awt.EventQueue.invokeLater']"
14,change (.*) of (.*),"['background', 'color']",['jframe'],"['javax.swing.SwingUtilities.invokeLater', 'java.awt.EventQueue.invokeLater']"
15,change (.*) of (.*),"['the', 'shape']",['jframe'],['javax.swing.UIManager.setLookAndFeel']
16,change (.*) of (.*),"['the', 'text']","['a', 'textarea']",['java.awt.EventQueue.invokeLater']
17,change (.*) of (.*),"['the', 'colour']",['text'],['java.lang.Integer.parseInt']
18,change (.*) of (.*),"['background', 'color']","['java', 'application']","['java.lang.System.exit', 'javax.imageio.ImageIO.read', 'java.awt.Toolkit.getDefaultToolkit', 'java.awt.EventQueue.invokeLater', 'java.lang.System.getProperty']"
19,change (.*) of (.*),['format'],"['printed', 'double']",['java.lang.Double.parseDouble']
20,change (.*) of (.*),"['text', 'contents']",['jmenuitem'],"['javax.swing.SwingUtilities.getUnwrappedParent', 'java.awt.EventQueue.invokeLater']"
21,change (.*) of (.*),['sorting'],"['a', 'keywordfilterfield']",['java.lang.Integer.toString']
22,change (.*) of (.*),['background'],"['pseudo', 'element']",['java.lang.Math.floor']
23,change (.*) of (.*),['order'],"['for', 'loops']","['java.util.Arrays.fill', 'java.util.Arrays.copyOf']"
24,change (.*) of (.*),"['foreground', 'color']",['basicarrowbutton'],['javax.swing.UIManager.getDefaults']
25,change (.*) of (.*),"['the', 'background']","['a', 'jbutton']",['java.lang.System.setProperty']
26,change (.*) of (.*),['event'],"['rich', 'calendar']",['java.util.logging.Logger.getLogger']
27,change (.*) of (.*),"['the', 'look']",['swing'],['javax.swing.UIManager.setLookAndFeel']
28,change (.*) of (.*),['type'],"['method', 'reference']",['java.util.function.Function.identity']
29,change (.*) of (.*),['size'],['jframe'],['javax.swing.SwingUtilities.invokeLater']
30,change (.*) of (.*),"['calendar', 'day']",['month'],['java.time.LocalDate.of']
31,change (.*) of (.*),"['the', 'behaviour']","['the', 'regex']",['java.util.regex.Pattern.compile']
32,change (.*) of (.*),"['the', 'type']","['an', 'array']",['java.nio.ByteBuffer.wrap']
33,change (.*) of (.*),"['the', 'height']","['a', 'radiobutton']",['javax.swing.UIManager.setLookAndFeel']
34,change (.*) of (.*),"['the', 'name']","['a', 'folder']",['java.nio.file.Files.move']
35,change (.*) of (.*),['value'],['array'],['java.util.Arrays.deepToString']
36,change (.*) of (.*),['type'],"['list', 'string']",['java.util.Arrays.asList']
37,change (.*) of (.*),"['the', 'size']","['a', 'jscrollpane']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
38,change (.*) of (.*),"['the', 'decibels']","['a', 'clip']","['javax.sound.sampled.AudioSystem.getAudioInputStream', 'javax.sound.sampled.AudioSystem.getClip']"
39,change (.*) of (.*),['order'],['listview'],['java.util.Collections.reverse']
40,change (.*) of (.*),['color'],['drawing'],"['java.awt.Color.getHSBColor', 'javax.swing.SwingUtilities.invokeLater']"
41,change (.*) of (.*),['position'],"['jbouton', 'dynamically']",['javax.swing.SwingUtilities.invokeLater']
42,change (.*) of (.*),"['the', 'value']","['static', 'variable']","['java.lang.String.format', 'java.time.LocalDate.now']"
43,change (.*) of (.*),"['the', 'value']","['variable', 'name']",['java.lang.String.valueOf']
44,change (.*) of (.*),['encoding'],"['post', 'query']",['java.lang.System.getProperty']
45,change (.*) of (.*),"['my', 'observableobject']",['date'],['java.util.concurrent.Executors.newSingleThreadScheduledExecutor']
0,make (.*) in (.*),"['a', 'timespinner']",['javafx'],"['java.lang.Integer.parseInt', 'java.time.LocalTime.of', 'java.time.format.DateTimeFormatter.ofPattern']"
1,make (.*) in (.*),['structure'],['jna'],['java.lang.Class.getFields']
2,make (.*) in (.*),"['canvas', 'animate']",['android'],['java.lang.Thread.sleep']
3,make (.*) in (.*),"['progress', 'bar']","['idea', 'console']",['java.lang.Thread.sleep']
4,make (.*) in (.*),"['numberformat', 'returns']","['double', 'type']",['java.lang.Double.parseDouble']
5,make (.*) in (.*),"['dual', 'lines']","['a', 'jtabbedpane']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.UIManager.put']"
6,make (.*) in (.*),"['jradiobutton', 'transparent']","['particular', 'case']",['java.awt.EventQueue.invokeLater']
7,make (.*) in (.*),"['links', 'clickable']",['jtable'],['java.awt.Desktop.getDesktop']
8,make (.*) in (.*),"['jar', 'run']","['bit', 'jre']",['java.lang.System.getProperty']
9,make (.*) in (.*),"['treetableview', 'uncollapseable']",['javafx'],['java.util.stream.IntStream.range']
10,make (.*) in (.*),"['spaces', 'match']","['two', 'strings']",['java.util.regex.Pattern.compile']
11,make (.*) in (.*),"['an', 'imageicon']","['java', 'gui']",['javax.imageio.ImageIO.read']
12,make (.*) in (.*),"['flush', 'jbuttons']",['swing'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
13,make (.*) in (.*),"['character', 'array']","['string', 'array']",['java.lang.Character.toUpperCase']
14,make (.*) in (.*),"['data', 'shows']","['clear', 'way']",['java.lang.Integer.parseInt']
15,make (.*) in (.*),"['a', 'difference']",['performance'],['java.util.regex.Pattern.compile']
16,make (.*) in (.*),"['timer', 'service']",['android'],['java.lang.System.currentTimeMillis']
0,compare (.*) in (.*),['dates'],['hibernate'],['java.util.Calendar.getInstance']
1,compare (.*) in (.*),"['two', 'times']",['android'],['java.util.Calendar.getInstance']
2,compare (.*) in (.*),['keys'],"['java', 'hashmap']","['java.util.Collections.sort', 'java.lang.Math.min']"
3,compare (.*) in (.*),"['pairs', 'stored']","['hashtable', 'java']","['java.util.Collections.reverse', 'java.util.Collections.sort', 'java.lang.Integer.parseInt']"
4,compare (.*) in (.*),"['timestamp', 'date']",['postgresql'],['java.util.Calendar.getInstance']
5,compare (.*) in (.*),['it'],['android'],['java.util.Calendar.getInstance']
6,compare (.*) in (.*),"['point', 'objects']","['a', 'set']","['java.util.Collections.sort', 'java.lang.Double.valueOf']"
7,compare (.*) in (.*),['value'],"['every', 'object']","['java.util.Arrays.asList', 'java.util.stream.Collectors.toMap']"
8,compare (.*) in (.*),['elements'],"['a', 'listiterator']",['java.util.Collections.sort']
9,compare (.*) in (.*),['float'],['arraylist'],['java.lang.Float.compare']
10,compare (.*) in (.*),['lists'],['arraylist'],"['java.util.Arrays.asList', 'java.lang.String.join']"
11,compare (.*) in (.*),"['successive', 'characters']",['string'],"['java.lang.Character.isLowerCase', 'java.lang.Character.isWhitespace', 'java.lang.Character.isUpperCase']"
12,compare (.*) in (.*),['lists'],['entity'],['java.util.Collections.emptyList']
13,compare (.*) in (.*),['string'],['enum'],['java.util.Arrays.stream']
14,compare (.*) in (.*),"['two', 'times']",['android'],['java.util.Calendar.getInstance']
15,compare (.*) in (.*),"['specific', 'keys']",['json'],['java.nio.file.Files.newInputStream']
16,compare (.*) in (.*),['values'],"['enum', 'java']","['java.util.EnumSet.allOf', 'java.util.EnumSet.of']"
17,compare (.*) in (.*),"['image', 'size']",['kb'],"['java.lang.Double.parseDouble', 'java.lang.Integer.parseInt']"
18,compare (.*) in (.*),['dates'],"['iso', 'format']","['java.time.LocalDate.parse', 'java.time.LocalDate.of']"
0,run (.*) from (.*),"['batch', 'file']","['java', 'code']","['java.lang.Runtime.exec', 'java.lang.Runtime.getRuntime']"
1,run (.*) from (.*),"['soapui', 'tests']",['java'],['java.lang.System.currentTimeMillis']
2,run (.*) from (.*),"['eclipse', 'project']","['command', 'line']","['java.net.URLClassLoader.findClass', 'java.lang.ClassLoader.loadClass', 'java.lang.ClassLoader.defineClass', 'java.security.SecureClassLoader.defineClass', 'java.security.AccessController.doPrivileged']"
3,run (.*) from (.*),"['command', 'prompt']",['java'],['java.lang.Runtime.getRuntime']
4,run (.*) from (.*),"['shell', 'script']","['java', 'code']",['java.lang.Runtime.getRuntime']
5,run (.*) from (.*),"['java', 'code']","['swing', 'gui']",['java.lang.Runtime.getRuntime']
6,run (.*) from (.*),"['python', 'script']","['java', 'code']",['java.lang.Runtime.getRuntime']
7,run (.*) from (.*),"['linux', 'script']",['java'],['java.lang.Runtime.getRuntime']
8,run (.*) from (.*),"['unix', 'command']","['java', 'program']",['java.lang.Runtime.getRuntime']
9,run (.*) from (.*),['phantomjs'],"['command', 'line']",['java.lang.Runtime.getRuntime']
10,run (.*) from (.*),"['source', 'code']","['java', 'application']",['java.lang.Runtime.getRuntime']
11,run (.*) from (.*),"['maven', 'plugin']","['java', 'class']",['java.util.Arrays.asList']
12,run (.*) from (.*),"['an', 'application']",['java'],"['java.lang.ProcessBuilder.directory', 'java.lang.Runtime.exec', 'java.lang.ProcessBuilder.start']"
13,run (.*) from (.*),['macro'],"['java', 'code']",['java.lang.Runtime.getRuntime']
14,run (.*) from (.*),"['external', 'process']",['java'],['java.lang.System.getProperty']
15,run (.*) from (.*),"['python', 'script']","['within', 'eclipse']",['java.lang.Runtime.getRuntime']
16,run (.*) from (.*),"['windows', 'command']",['eclipse'],['java.lang.Runtime.getRuntime']
17,run (.*) from (.*),['entirely'],"['a', 'dvd']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
18,run (.*) from (.*),"['jython', 'code']","['java', 'class']",['java.lang.Runtime.getRuntime']
19,run (.*) from (.*),"['a', 'jar']","['a', 'jar']",['java.lang.Runtime.getRuntime']
20,run (.*) from (.*),['code'],['user'],"['java.lang.System.exit', 'java.lang.Class.forName', 'java.lang.Runtime.getRuntime', 'java.nio.file.Files.write']"
21,run (.*) from (.*),"['java', 'class']",['jframe'],['javax.swing.JOptionPane.showMessageDialog']
22,run (.*) from (.*),['program'],"['command', 'line']",['java.lang.Integer.parseInt']
23,run (.*) from (.*),"['batch', 'file']","['java', 'code']",['java.lang.Runtime.getRuntime']
24,run (.*) from (.*),"['one', 'class']",['another'],['java.util.logging.Logger.getLogger']
25,run (.*) from (.*),"['an', 'application']",['java'],['java.util.Arrays.asList']
0,implement (.*) in (.*),"['custom', 'authenticationprovider']","['spring', 'security']",['java.lang.String.valueOf']
1,implement (.*) in (.*),"['binary', 'search']",['objects'],"['java.util.Collections.binarySearch', 'java.lang.Integer.valueOf']"
2,implement (.*) in (.*),"['pause', 'resume']","['file', 'downloading']",['java.lang.Long.valueOf']
3,implement (.*) in (.*),['search'],"['a', 'jtable']",['javax.swing.SwingUtilities.invokeLater']
4,implement (.*) in (.*),"['dynamic', 'gui']",['swing'],['javax.swing.SwingUtilities.invokeLater']
5,implement (.*) in (.*),"['copy', 'paste']",['jtextarea'],['javax.swing.SwingUtilities.invokeLater']
6,implement (.*) in (.*),"['idle', 'task']","['java', 'swing']",['java.awt.Toolkit.getDefaultToolkit']
7,implement (.*) in (.*),"['thread', 'timeout']","['j', 'me']","['java.sql.Connection.close', 'java.lang.Thread.sleep', 'java.lang.Thread.interrupt']"
8,implement (.*) in (.*),"['my', 'classes']",['main'],['java.util.Collections.sort']
9,implement (.*) in (.*),"['comparable', 'interface']","['the', 'subclass']",['java.util.Collections.sort']
10,implement (.*) in (.*),"['aes', 'encryption']",['android'],"['java.security.MessageDigest.getInstance', 'java.util.Arrays.copyOf', 'javax.crypto.Cipher.getInstance']"
11,implement (.*) in (.*),['zip'],"['specific', 'way']","['java.util.Arrays.stream', 'java.util.stream.IntStream.range']"
12,implement (.*) in (.*),['duplicates'],['quickselect'],['java.util.Arrays.copyOfRange']
13,implement (.*) in (.*),"['hilbert', 'curve']",['jframe'],['javax.swing.SwingUtilities.invokeLater']
14,implement (.*) in (.*),"['use', 'maxby']",['rxjava'],['java.lang.Integer.compare']
15,implement (.*) in (.*),"['sugar', 'orm']",['libgdx'],['java.lang.String.format']
16,implement (.*) in (.*),"['java', 'comparator']","['array', 'sort']",['java.util.Comparator.comparing']
17,implement (.*) in (.*),['iterator'],"['that', 'case']",['java.util.Collections.sort']
0,run (.*) in (.*),"['terminal', 'command']","['android', 'application']",['java.lang.Class.forName']
1,run (.*) in (.*),['tasks'],['sequence'],"['java.util.concurrent.Executors.callable', 'java.util.concurrent.Executors.newSingleThreadExecutor']"
2,run (.*) in (.*),"['bash', 'command']",['app'],['java.lang.Runtime.getRuntime']
3,run (.*) in (.*),"['ejb', 'code']","['netbeans', 'beginner']",['java.lang.Integer.parseInt']
4,run (.*) in (.*),"['cmd', 'equivalent']",['osx'],['java.lang.Runtime.getRuntime']
5,run (.*) in (.*),"['sql', 'transaction']","['a', 'preparedstatement']",['java.sql.Connection.commit']
6,run (.*) in (.*),"['batch', 'file']","['java', 'program']",['java.lang.Runtime.getRuntime']
7,run (.*) in (.*),"['several', 'methods']","['a', 'thread']",['java.util.concurrent.Executors.newSingleThreadExecutor']
8,run (.*) in (.*),"['selenium', 'tests']","['chrome', 'browser']",['java.lang.System.setProperty']
9,run (.*) in (.*),"['background', 'tasks']","['a', 'threadpool']",['java.util.Objects.requireNonNull']
10,run (.*) in (.*),"['java', 'app']",['utc'],['java.util.TimeZone.setDefault']
11,run (.*) in (.*),"['webdriver', 'test']",['chrome'],['java.lang.System.setProperty']
12,run (.*) in (.*),"['async', 'actions']",['sequence'],"['java.util.Arrays.stream', 'java.util.concurrent.CompletableFuture.supplyAsync']"
13,run (.*) in (.*),"['matcher', 'method']","['jsp', 'page']","['java.util.regex.Matcher.reset', 'java.util.regex.Pattern.compile', 'java.util.regex.Pattern.matcher']"
14,run (.*) in (.*),"['cmd', 'line']","['java', 'fails']","['java.lang.Runtime.exec', 'java.lang.Runtime.getRuntime']"
15,run (.*) in (.*),['time'],"['java', 'program']","['java.lang.Runtime.getRuntime', 'java.util.logging.Logger.getLogger']"
16,run (.*) in (.*),"['handler', 'task']","['android', 'successively']",['java.lang.Thread.sleep']
17,run (.*) in (.*),"['multiple', 'commands']",['terminal'],['java.lang.Runtime.getRuntime']
18,run (.*) in (.*),"['the', 'tasks']",['parallel'],['java.util.concurrent.ForkJoinPool.commonPool']
19,run (.*) in (.*),['function'],['schedulewithfixeddelay'],['java.util.stream.IntStream.range']
20,run (.*) in (.*),"['runnables', 'concurrently']",['order'],['java.util.concurrent.ConcurrentHashMap.newKeySet']
21,run (.*) in (.*),"['a', 'timer']",['background'],['java.lang.System.currentTimeMillis']
22,run (.*) in (.*),['flow'],"['main', 'thread']",['java.util.concurrent.ForkJoinPool.commonPool']
23,run (.*) in (.*),['programs'],['appdata'],"['java.lang.Runtime.getRuntime', 'java.lang.System.getenv']"
24,run (.*) in (.*),['it'],['netbeans'],['java.lang.Class.forName']
25,run (.*) in (.*),"['java', 'code']",['terminal'],"['javax.swing.JOptionPane.showInputDialog', 'javax.swing.JOptionPane.showMessageDialog']"
26,run (.*) in (.*),"['as', 'administrator']","['jar', 'applications']",['java.lang.Runtime.getRuntime']
27,run (.*) in (.*),['commands'],"['java', 'code']",['java.lang.Runtime.getRuntime']
28,run (.*) in (.*),"['st', 'time']","['that', 'system']","['java.util.prefs.Preferences.userNodeForPackage', 'javax.swing.JOptionPane.showMessageDialog']"
29,run (.*) in (.*),"['dependents', 'stages']","['other', 'thread']",['java.util.concurrent.Executors.newSingleThreadExecutor']
30,run (.*) in (.*),"['what', 'is']","['the', 'loop']",['java.util.Arrays.toString']
31,run (.*) in (.*),['methods'],"['a', 'thread']",['java.util.concurrent.Executors.newSingleThreadExecutor']
32,run (.*) in (.*),['tasks'],"['different', 'threads']",['java.util.concurrent.Executors.newFixedThreadPool']
33,run (.*) in (.*),"['sequential', 'tasks']","['an', 'executorservice']",['java.lang.Math.abs']
0,change (.*) on (.*),"['language', 'permanently']","['android', 'studio']",['java.util.Locale.setDefault']
1,change (.*) on (.*),['icon'],"['mouse', 'over']","['javax.imageio.ImageIO.read', 'javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
2,change (.*) on (.*),"['border', 'title']","['button', 'click']",['javax.swing.BorderFactory.createTitledBorder']
3,change (.*) on (.*),"['jbutton', 'color']",['actionperformed'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
4,change (.*) on (.*),"['a', 'label']","['a', 'jmenuitem']","['java.lang.Math.max', 'javax.swing.UIManager.getColor', 'javax.swing.UIManager.put', 'java.lang.System.exit', 'javax.swing.UIManager.setLookAndFeel']"
5,change (.*) on (.*),['password'],['login'],['java.lang.Thread.sleep']
6,change (.*) on (.*),"['jlabel', 'background']","['mouserelease', 'event']","['javax.imageio.ImageIO.read', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
7,change (.*) on (.*),"['background', 'position']",['scroll'],['java.lang.Math.floor']
8,change (.*) on (.*),['based'],"['loop', 'iteration']",['javax.swing.SwingUtilities.invokeLater']
9,change (.*) on (.*),"['images', 'based']",['keystrokes'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
10,change (.*) on (.*),['based'],"['i', 'd']",['java.lang.String.format']
11,change (.*) on (.*),['action'],"['swing', 'controls']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showConfirmDialog', 'java.lang.String.format']"
12,change (.*) on (.*),"['decimal', 'separator']",['android'],['java.text.DecimalFormatSymbols.getInstance']
13,change (.*) on (.*),['dependent'],"['cursor', 'position']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
14,change (.*) on (.*),"['the', 'result']",['calculator'],['java.lang.Double.parseDouble']
15,change (.*) on (.*),"['cell', 'image']",['selection'],['java.lang.Boolean.valueOf']
0,get (.*) by (.*),"['string', 'character']","['index', 'java']",['java.lang.Character.toString']
1,get (.*) by (.*),['thread'],['name'],"['java.lang.ThreadGroup.enumerate', 'java.lang.ThreadGroup.getParent']"
2,get (.*) by (.*),['item'],['index'],['java.lang.System.nanoTime']
3,get (.*) by (.*),"['instanced', 'object']",['string'],['java.lang.Thread.currentThread']
4,get (.*) by (.*),['list'],"['using', 'jsonpath']","['java.nio.file.Files.readAllBytes', 'java.nio.charset.Charset.defaultCharset']"
5,get (.*) by (.*),"['emoji', 'flag']","['country', 'code']",['java.lang.Character.codePointAt']
6,get (.*) by (.*),['element'],"['testing', 'value']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
7,get (.*) by (.*),"['static', 'property']","['class', 'name']",['java.lang.Class.forName']
8,get (.*) by (.*),['milliseconds'],"['next', 'saturday']",['java.util.Calendar.getInstance']
9,get (.*) by (.*),['tables'],['database'],['java.sql.DriverManager.getConnection']
10,get (.*) by (.*),['timezone'],"['utc', 'offset']",['java.time.ZoneId.getAvailableZoneIds']
11,get (.*) by (.*),['string'],"['pattern', 'java']",['java.util.regex.Pattern.compile']
12,get (.*) by (.*),"['physical', 'address']",['pattern'],['java.lang.Runtime.getRuntime']
13,get (.*) by (.*),"['thread', 'created']","['calling', 'main']",['java.lang.Thread.join']
14,get (.*) by (.*),"['method', 'annotations']",['stacktrace'],"['java.lang.Class.forName', 'java.lang.Thread.currentThread', 'java.lang.Thread.getStackTrace']"
15,get (.*) by (.*),['rank'],['total'],['java.lang.Float.parseFloat']
16,get (.*) by (.*),['field'],['value'],['java.lang.Class.getField']
17,get (.*) by (.*),"['an', 'element']","['his', 'attributes']","['java.util.Collections.binarySearch', 'java.util.Collections.sort', 'java.lang.Integer.compare']"
18,get (.*) by (.*),"['textfield', 'input']","['using', 'arraylist']",['java.util.regex.Pattern.compile']
19,get (.*) by (.*),['data'],"['given', 'index']",['java.lang.Integer.parseInt']
20,get (.*) by (.*),"['classpath', 'resources']",['extension'],"['java.nio.file.Paths.get', 'java.nio.file.Files.find']"
0,map (.*) to (.*),"['entry', 'how']","['use', 'it']","['java.util.Map.keySet', 'java.util.Map.entrySet']"
1,map (.*) to (.*),['entry'],"['an', 'arraylist']",['java.util.Collections.sort']
2,map (.*) to (.*),"['two', 'arrays']","['one', 'hashmap']",['java.util.stream.IntStream.range']
3,map (.*) to (.*),"['sql', 'date']",['localdate'],['java.time.LocalDate.parse']
4,map (.*) to (.*),['entry'],['linkedhashmap'],['java.util.stream.Collectors.toMap']
5,map (.*) to (.*),['string'],"['java', 'class']",['java.lang.Class.forName']
6,map (.*) to (.*),"['from', 'jsp']",['servlet'],['java.lang.Integer.parseInt']
7,map (.*) to (.*),"['control', 'backspace']","['a', 'keystroke']",['javax.swing.KeyStroke.getKeyStroke']
8,map (.*) to (.*),['values'],['list'],['java.util.Collections.sort']
9,map (.*) to (.*),['deviceorientation'],"['mozorientation', 'values']",['java.lang.Math.round']
10,map (.*) to (.*),"['entity', 'type']","['graphql', 'type']",['java.util.Base64.getEncoder']
11,map (.*) to (.*),"['from', 'int']",['class'],"['java.lang.Class.forName', 'java.lang.Integer.valueOf']"
12,map (.*) to (.*),"['expand', 'object']",['stream'],['java.util.Optional.empty']
13,map (.*) to (.*),"['s', 's']","['list', 's']",['java.util.Arrays.asList']
14,map (.*) to (.*),"['an', 'integer']","['a', 'percentage']",['java.lang.Double.valueOf']
15,map (.*) to (.*),"['json', 'objects']","['java', 'classes']",['java.util.regex.Pattern.compile']
16,map (.*) to (.*),['values'],['adapter'],['java.util.Collections.emptyMap']
17,map (.*) to (.*),"['treeset', 'value']","['a', 'treemap']",['java.util.stream.Collectors.toMap']
18,map (.*) to (.*),['words'],"['single', 'characters']","['java.lang.String.hashCode', 'java.lang.Math.floorMod']"
19,map (.*) to (.*),['according'],['filter'],['java.util.Arrays.stream']
0,call (.*) from (.*),"['c', 'function']",['java'],"['java.lang.System.loadLibrary', 'java.lang.Runtime.loadLibrary']"
1,call (.*) from (.*),"['a', 'constructor']","['main', 'method']",['javax.swing.JOptionPane.showMessageDialog']
2,call (.*) from (.*),['graphviz'],['java'],"['java.io.File.createTempFile', 'java.lang.Runtime.getRuntime', 'java.lang.System.getProperty']"
3,call (.*) from (.*),"['scala', 'objects']",['java'],['java.lang.Thread.sleep']
4,call (.*) from (.*),"['another', 'class']","['java', 'program']",['java.lang.Runtime.getRuntime']
5,call (.*) from (.*),"['asynchronous', 'servlet']",['ajax'],['java.lang.Thread.sleep']
6,call (.*) from (.*),"['c', 'functionality']",['java'],['java.lang.Runtime.exec']
7,call (.*) from (.*),"['javascript', 'alert']","['java', 'class']",['javax.swing.JOptionPane.showMessageDialog']
8,call (.*) from (.*),"['c', 'function']",['java'],['java.lang.System.load']
9,call (.*) from (.*),"['a', 'method']",['server'],['java.lang.Integer.parseInt']
10,call (.*) from (.*),['it'],['pyspark'],['java.lang.Thread.currentThread']
11,call (.*) from (.*),"['the', 'logger']","['another', 'class']",['java.util.logging.Logger.getLogger']
12,call (.*) from (.*),"['rest', 'api']",['eclipse'],['java.lang.System.setProperty']
13,call (.*) from (.*),"['python', 'file']",['java'],['java.lang.Runtime.getRuntime']
14,call (.*) from (.*),"['js', 'methods']",['java'],['java.nio.charset.Charset.forName']
15,call (.*) from (.*),"['synchronized', 'method']",['reflection'],['java.lang.Thread.sleep']
16,call (.*) from (.*),['japplet'],['jframe'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
17,call (.*) from (.*),"['adapter', 'notifydatasetchanged']","['another', 'thread']",['java.lang.Thread.sleep']
18,call (.*) from (.*),['information'],"['an', 'array']",['javax.swing.SwingUtilities.invokeLater']
19,call (.*) from (.*),"['a', 'method']","['helper', 'class']",['java.util.Calendar.getInstance']
20,call (.*) from (.*),"['joptionpane', 'repaint']","['internal', 'panel']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
21,call (.*) from (.*),['dopost'],['doget'],['java.util.logging.LogManager.getLogger']
22,call (.*) from (.*),"['a', 'jframe']","['another', 'class']",['java.lang.System.exit']
23,call (.*) from (.*),['return'],['runnable'],['java.lang.Thread.currentThread']
24,call (.*) from (.*),['function'],['enumeration'],['java.lang.Class.forName']
25,call (.*) from (.*),['method'],"['string', 'text']","['javax.swing.JOptionPane.showOptionDialog', 'javax.swing.JOptionPane.showMessageDialog']"
26,call (.*) from (.*),"['prepared', 'statements']","['vertx', 'reactivate']",['java.util.stream.Collector.of']
0,connect (.*) to (.*),['jdbc'],"['tns', 'oracle']","['java.lang.System.setProperty', 'java.sql.DriverManager.getConnection']"
1,connect (.*) to (.*),['java'],['mysql'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
2,connect (.*) to (.*),['mysql'],"['java', 'program']",['java.lang.Class.forName']
3,connect (.*) to (.*),['client'],['server'],['java.lang.String.valueOf']
4,connect (.*) to (.*),['scenebuilder'],['fxmlloader'],['java.lang.System.exit']
5,connect (.*) to (.*),"['desktop', 'app']","['online', 'database']",['java.sql.DriverManager.getConnection']
6,connect (.*) to (.*),['java'],"['sql', 'server']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
7,connect (.*) to (.*),"['java', 'netbeans']",['mariadb'],['java.lang.Class.forName']
0,write (.*) to (.*),['string'],"['output', 'stream']",['java.lang.String.getBytes']
1,write (.*) to (.*),"['an', 'inputstream']","['an', 'httpservletresponse']","['java.nio.channels.Channels.newChannel', 'java.nio.ByteBuffer.allocateDirect']"
2,write (.*) to (.*),['file'],['desktop'],['java.lang.System.getProperty']
3,write (.*) to (.*),['directly'],"['a', 'jtextarea']",['javax.swing.JTextArea.append']
4,write (.*) to (.*),['data'],"['socket', 'channel']","['java.nio.charset.Charset.forName', 'java.nio.channels.ServerSocketChannel.open']"
5,write (.*) to (.*),['ivparameterspec'],"['a', 'file']","['javax.crypto.Cipher.getInstance', 'javax.crypto.KeyGenerator.getInstance']"
6,write (.*) to (.*),"['message', 'endofstream']",['firewall'],['java.lang.System.exit']
7,write (.*) to (.*),"['an', 'array']",['csv'],['java.lang.String.valueOf']
8,write (.*) to (.*),"['unescaped', 'xml']",['xmlstreamwriter'],['javax.xml.stream.XMLOutputFactory.newFactory']
9,write (.*) to (.*),['element'],['outputnode'],['java.lang.Integer.parseInt']
10,write (.*) to (.*),"['raw', 'binary']","['file', 'java']","['java.io.DataOutputStream.writeByte', 'java.io.DataInputStream.readUnsignedByte']"
11,write (.*) to (.*),['out'],"['another', 'file']","['java.nio.file.Paths.get', 'java.nio.file.Files.write']"
12,write (.*) to (.*),['bytes'],"['server', 'socket']",['java.nio.ByteBuffer.allocate']
13,write (.*) to (.*),['byte'],['file'],"['java.nio.file.Files.move', 'java.io.FileDescriptor.sync']"
14,write (.*) to (.*),"['an', 'sscce']","['reproduce', 'it']","['java.nio.file.Files.newOutputStream', 'java.nio.file.FileSystems.newFileSystem']"
15,write (.*) to (.*),['all'],['file'],['java.lang.Integer.valueOf']
16,write (.*) to (.*),"['a', 'lucenefilter']","['normalize', 'text']",['java.text.Normalizer.normalize']
17,write (.*) to (.*),['data'],"['txt', 'file']",['java.lang.System.getProperty']
18,write (.*) to (.*),"['an', 'array']","['a', 'file']","['java.lang.Character.toString', 'java.lang.Integer.parseInt']"
0,create (.*) in (.*),"['a', 'notification']",['swing'],['java.lang.Class.forName']
1,create (.*) in (.*),"['json', 'object']",['servlet'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
2,create (.*) in (.*),"['a', 'cube']",['swing'],['javax.swing.SwingUtilities.invokeLater']
3,create (.*) in (.*),['guid'],"['java', 'ee']",['java.util.UUID.randomUUID']
4,create (.*) in (.*),"['log', 'files']","['spring', 'boot']",['java.util.logging.Logger.getLogger']
5,create (.*) in (.*),['objects'],['genericobjectpool'],['javax.crypto.Cipher.getInstance']
6,create (.*) in (.*),"['a', 'deadlock']",['servlet'],['java.lang.Thread.sleep']
7,create (.*) in (.*),['spacing'],"['between', 'jbuttons']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
8,create (.*) in (.*),['object'],"['same', 'state']",['java.lang.System.nanoTime']
9,create (.*) in (.*),"['multiple', 'pages']",['gwt'],['java.util.logging.Logger.getLogger']
10,create (.*) in (.*),"['a', 'shortcut']",['jframe'],['java.awt.EventQueue.invokeLater']
11,create (.*) in (.*),"['byte', 'array']","['png', 'format']",['javax.imageio.ImageIO.write']
12,create (.*) in (.*),"['lazy', 'messages']","['log', 'j']","['java.lang.Object.toString', 'java.util.logging.LogManager.getLogger']"
13,create (.*) in (.*),['singleton'],"['concurrent', 'environment']",['java.util.concurrent.atomic.AtomicReference.get']
14,create (.*) in (.*),"['foreign', 'keys']","['oracle', 'preconditions']",['java.lang.String.format']
15,create (.*) in (.*),['context'],['netty'],['java.lang.Integer.parseInt']
16,create (.*) in (.*),['watermark'],['pdf'],['java.util.logging.Logger.getLogger']
17,create (.*) in (.*),"['an', 'ad']",['recyclerview'],['java.lang.Math.round']
18,create (.*) in (.*),"['timestamp', 'string']","['f', 'format']",['java.lang.Math.pow']
19,create (.*) in (.*),"['relative', 'symlink']","['java', 'nio']","['java.nio.file.Paths.get', 'java.nio.file.Files.createSymbolicLink']"
20,create (.*) in (.*),"['nested', 'document']","['solr', 'indexing']",['java.lang.System.setProperty']
21,create (.*) in (.*),"['memory', 'leak']",['tomcat'],['java.sql.DriverManager.deregisterDriver']
22,create (.*) in (.*),"['my', 'tables']","['the', 'database']",['java.sql.DriverManager.getConnection']
23,create (.*) in (.*),"['core', 'blog']",['solr'],['java.lang.Thread.run']
24,create (.*) in (.*),"['nested', 'list']",['list'],['java.util.Arrays.asList']
25,create (.*) in (.*),"['a', 'simplebeaninfo']","['the', 'year']","['java.lang.System.exit', 'java.beans.Introspector.getBeanInfo']"
26,create (.*) in (.*),"['a', 'rectangle']","['a', 'rectangle']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
27,create (.*) in (.*),"['event', 'calendar']",['android'],['java.lang.Long.parseLong']
28,create (.*) in (.*),"['new', 'element']",['xml'],"['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
29,create (.*) in (.*),"['a', 'directory']","['existing', 'path']","['java.nio.file.Paths.get', 'java.nio.file.Files.createDirectories']"
30,create (.*) in (.*),"['a', 'filepath']",['android'],['java.io.File.createTempFile']
31,create (.*) in (.*),"['two', 'tasks']",['gradle'],['java.lang.System.getenv']
32,create (.*) in (.*),"['cache', 'map']","['this', 'situation']",['javax.xml.bind.Marshaller.marshal']
33,create (.*) in (.*),"['associative', 'array']",['java'],['java.util.stream.IntStream.range']
0,disable (.*) in (.*),"['scheduled', 'jobs']",['spring'],['java.util.logging.Logger.getLogger']
1,disable (.*) in (.*),['items'],['jlist'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.UIManager.put', 'javax.swing.SwingUtilities.updateComponentTreeUI']"
2,disable (.*) in (.*),['checkbox'],['cell'],['java.util.Calendar.getInstance']
3,disable (.*) in (.*),['event'],['swing'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
4,disable (.*) in (.*),"['drag', 'selection']",['jtable'],"['java.awt.EventQueue.invokeLater', 'java.util.Optional.ofNullable']"
5,disable (.*) in (.*),"['promise', 'manager']","['selenium', 'webdriver']",['java.lang.Math.round']
6,disable (.*) in (.*),"['close', 'button']",['processing'],['javax.swing.JFrame.setDefaultCloseOperation']
7,disable (.*) in (.*),"['beep', 'sound']",['jformattedtextfield'],['javax.swing.UIManager.getLookAndFeel']
8,disable (.*) in (.*),"['console', 'mess']",['cmusphinx'],"['java.lang.System.setProperty', 'java.lang.System.getProperty', 'java.util.logging.Logger.getLogger']"
9,disable (.*) in (.*),['validation'],"['rome', 'rss']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
10,disable (.*) in (.*),"['notification', 'sound']",['android'],['java.lang.System.currentTimeMillis']
11,disable (.*) in (.*),"['past', 'date']",['datepickerdialog'],['java.util.Calendar.getInstance']
12,disable (.*) in (.*),"['window', 'd']","['swing', 'application']","['java.lang.Thread.sleep', 'javax.swing.SwingUtilities.invokeLater']"
13,disable (.*) in (.*),['fragment'],['fragmentpager'],['java.util.Locale.getDefault']
0,find (.*) in (.*),['whitespace'],"['a', 'string']",['java.util.regex.Pattern.compile']
1,find (.*) in (.*),['rowcount'],"['java', 'jdbc']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
2,find (.*) in (.*),"['all', 'palindromes']",['string'],['java.util.Collections.emptySet']
3,find (.*) in (.*),"['unique', 'values']","['the', 'list']",['java.lang.System.nanoTime']
4,find (.*) in (.*),['emails'],"['a', 'string']",['java.util.regex.Pattern.compile']
5,find (.*) in (.*),"['next', 'character']","['a', 'string']","['java.util.regex.Pattern.matches', 'java.lang.Integer.parseInt']"
6,find (.*) in (.*),"['a', 'value']","['html', 'java']",['java.util.regex.Pattern.compile']
7,find (.*) in (.*),"['all', 'packages']","['my', 'project']",['java.lang.Package.getPackages']
8,find (.*) in (.*),['characters'],"['any', 'string']",['java.util.regex.Pattern.compile']
9,find (.*) in (.*),['file'],['path'],"['java.nio.file.Paths.get', 'java.lang.System.getenv']"
10,find (.*) in (.*),"['java', 'class']","['java', 'file']",['java.util.regex.Pattern.compile']
11,find (.*) in (.*),"['column', 'type']",['jtable'],['java.lang.Boolean.valueOf']
12,find (.*) in (.*),"['smallest', 'value']","['linked', 'list']",['java.lang.Math.min']
13,find (.*) in (.*),['datasource'],"['junit', 'tests']",['java.util.logging.Logger.getLogger']
14,find (.*) in (.*),"['key', 'value']",['string'],['java.util.regex.Pattern.compile']
15,find (.*) in (.*),"['local', 'variable']","['android', 'java']",['javax.net.ssl.SSLContext.getInstance']
16,find (.*) in (.*),"['different', 'characters']","['two', 'strings']",['java.util.regex.Pattern.compile']
17,find (.*) in (.*),"['highest', 'value']",['enum'],['java.util.Collections.sort']
18,find (.*) in (.*),"['replace', 'pattern']","['sql', 'comments']",['java.util.regex.Pattern.compile']
19,find (.*) in (.*),['word'],"['a', 'string']",['java.util.regex.Pattern.compile']
20,find (.*) in (.*),['element'],"['arraylist', 'java']","['java.time.LocalDate.parse', 'java.util.Collections.sort', 'java.time.format.DateTimeFormatter.ofPattern']"
21,find (.*) in (.*),"['closest', 'object']","['java', 'collection']",['java.lang.Math.abs']
22,find (.*) in (.*),['duplicate'],"['two', 'arrays']",['java.lang.System.currentTimeMillis']
23,find (.*) in (.*),['time'],"['a', 'string']",['java.util.regex.Pattern.compile']
24,find (.*) in (.*),['countries'],['text'],['java.util.regex.Pattern.compile']
25,find (.*) in (.*),"['and', 'replace']","['string', 'arraylist']",['java.util.regex.Pattern.compile']
26,find (.*) in (.*),['errors'],['ram'],['java.lang.Math.pow']
27,find (.*) in (.*),['string'],"['multidimensional', 'arraylist']",['java.util.Arrays.asList']
28,find (.*) in (.*),['median'],['stream'],['java.util.Collections.sort']
29,find (.*) in (.*),['int'],['string'],['java.lang.Integer.parseInt']
30,find (.*) in (.*),"['d', 'points']","['a', 'box']",['java.lang.System.currentTimeMillis']
31,find (.*) in (.*),"['closest', 'number']","['some', 'collection']",['java.util.Arrays.binarySearch']
32,find (.*) in (.*),"['ascii', 'arrows']",['text'],['java.util.regex.Pattern.compile']
33,find (.*) in (.*),"['the', 'heapsize']",['jre'],['java.lang.Runtime.getRuntime']
34,find (.*) in (.*),"['repeated', 'words']","['a', 'sentence']","['java.util.Arrays.stream', 'java.util.regex.Pattern.compile']"
35,find (.*) in (.*),"['protocol', 'resource']","['url', 'constructor']","['java.nio.file.FileSystems.getDefault', 'java.nio.file.Files.newBufferedReader']"
36,find (.*) in (.*),"['an', 'object']",['arraylist'],"['java.lang.String.equalsIgnoreCase', 'java.lang.String.toLowerCase']"
37,find (.*) in (.*),"['applications', 'running']","['a', 'computer']",['java.lang.Runtime.exec']
38,find (.*) in (.*),"['smallest', 'mode']","['the', 'array']",['java.util.stream.IntStream.of']
39,find (.*) in (.*),"['the', 'resource']","['a', 'jar']","['java.lang.Class.forName', 'java.lang.Thread.currentThread']"
40,find (.*) in (.*),['value'],"['csv', 'string']",['java.util.Arrays.sort']
41,find (.*) in (.*),"['removed', 'text']",['jtextpane'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
42,find (.*) in (.*),"['maximum', 'y']","['javafx', 'xyseries']",['java.util.Comparator.comparing']
43,find (.*) in (.*),['occurrence'],"['list', 'arraylist']",['java.util.Collections.frequency']
44,find (.*) in (.*),['method'],"['a', 'loop']",['java.util.regex.Pattern.compile']
45,find (.*) in (.*),['date'],['string'],['java.util.regex.Pattern.compile']
46,find (.*) in (.*),['points'],['segments'],"['java.util.Arrays.binarySearch', 'java.lang.Math.min']"
47,find (.*) in (.*),['duplicate'],['arraylist'],"['java.util.ArrayList.contains', 'java.util.ArrayList.add']"
48,find (.*) in (.*),"['out', 'mistake']",['algorithm'],['java.lang.Character.getNumericValue']
49,find (.*) in (.*),['symbol'],['program'],['javax.swing.JOptionPane.showMessageDialog']
50,find (.*) in (.*),"['duplicate', 'values']",['input'],"['java.lang.Integer.parseInt', 'java.lang.String.format']"
51,find (.*) in (.*),"['the', 'string']","['all', 'order']",['java.util.regex.Pattern.compile']
52,find (.*) in (.*),"['a', 'pattern']","['a', 'file']",['java.util.regex.Pattern.compile']
53,find (.*) in (.*),"['connection', 'object']","['catch', 'block']",['java.sql.DriverManager.getConnection']
54,find (.*) in (.*),"['date', 'anywhere']",['timestamp'],['java.util.regex.Pattern.compile']
55,find (.*) in (.*),"['the', 'chain']","['the', 'graph']","['java.util.Arrays.fill', 'java.util.Arrays.copyOf', 'java.lang.System.arraycopy']"
56,find (.*) in (.*),"['out', 'ok']","['joptionpane', 'inputdialog']","['javax.swing.JOptionPane.showInputDialog', 'java.lang.Integer.parseInt']"
57,find (.*) in (.*),['pattern'],['string'],['java.util.regex.Pattern.compile']
58,find (.*) in (.*),"['two', 'median']","['a', 'substring']","['java.lang.Double.parseDouble', 'java.util.Arrays.sort']"
59,find (.*) in (.*),"['xml', 'tag']","['multiline', 'string']",['java.util.regex.Pattern.compile']
60,find (.*) in (.*),['foo'],"['a', 'text']",['java.util.regex.Pattern.compile']
61,find (.*) in (.*),"['maximum', 'item']","['the', 'list']",['java.lang.Double.parseDouble']
62,find (.*) in (.*),"['a', 'result']","['java', 'android']",['java.lang.Integer.parseInt']
63,find (.*) in (.*),"['interfaces', 'defined']","['the', 'class']",['java.lang.Class.getClasses']
64,find (.*) in (.*),"['duplicate', 'character']","['a', 'string']",['java.lang.Character.toString']
65,find (.*) in (.*),"['the', 'error']","['my', 'code']","['java.lang.Math.max', 'java.lang.Math.min']"
66,find (.*) in (.*),"['an', 'element']",['jlist'],['javax.swing.UIManager.put']
0,generate (.*) from (.*),"['jaxb', 'classes']",['xsd'],['javax.xml.bind.JAXBContext.newInstance']
1,generate (.*) from (.*),"['x', 'certificate']",['byte'],['java.security.cert.CertificateFactory.getInstance']
2,generate (.*) from (.*),['key'],['string'],"['javax.crypto.SecretKeyFactory.getInstance', 'javax.crypto.Cipher.getInstance']"
3,generate (.*) from (.*),"['nillable', 'true']",['java'],['javax.xml.bind.JAXBContext.newInstance']
4,generate (.*) from (.*),"['xml', 'file']","['java', 'code']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
5,generate (.*) from (.*),['publickey'],"['string', 'java']",['java.security.KeyFactory.getInstance']
6,generate (.*) from (.*),['ecpublickey'],['ecprivatekey'],"['java.security.KeyFactory.getInstance', 'java.security.KeyPairGenerator.getInstance']"
7,generate (.*) from (.*),"['one', 'stream']","['multiple', 'suppliers']","['java.util.stream.Stream.of', 'java.util.stream.Stream.generate']"
8,generate (.*) from (.*),"['xml', 'file']","['elements', 'map']","['java.util.Calendar.getInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
9,generate (.*) from (.*),['exceptions'],['repaintmanager'],"['javax.swing.RepaintManager.setCurrentManager', 'java.awt.image.ImageObserver.imageUpdate', 'java.lang.Thread.currentThread']"
10,generate (.*) from (.*),"['random', 'int']",['timestamp'],"['java.lang.System.nanoTime', 'java.lang.System.currentTimeMillis']"
11,generate (.*) from (.*),"['byte', 'array']","['stringbuffer', 'tostring']",['java.lang.String.getBytes']
12,generate (.*) from (.*),"['new', 'byte']","['existing', 'byte']",['java.nio.ByteBuffer.wrap']
13,generate (.*) from (.*),['report'],['dynamicreports'],"['java.io.OutputStream.flush', 'java.io.OutputStream.close']"
14,generate (.*) from (.*),"['json', 'schema']",['pojo'],['java.lang.Thread.currentThread']
15,generate (.*) from (.*),"['random', 'double']","['random', 'long']",['java.lang.Math.scalb']
16,generate (.*) from (.*),"['thread', 'dump']","['java', 'code']",['java.lang.management.ManagementFactory.getThreadMXBean']
17,generate (.*) from (.*),"['new', 'variables']","['user', 'interaction']",['java.util.Arrays.toString']
0,read (.*) with (.*),['line'],['scanner'],['java.util.logging.Logger.getLogger']
1,read (.*) with (.*),"['returns', 'null']","['no', 'errors']",['javax.imageio.ImageIO.read']
2,read (.*) with (.*),"['xml', 'file']",['jaxb'],['javax.xml.bind.JAXBContext.newInstance']
3,read (.*) with (.*),"['specific', 'rows']","['apache', 'poi']",['java.lang.Math.max']
4,read (.*) with (.*),"['url', 'content']","['utf', 'chars']",['java.net.URLEncoder.encode']
5,read (.*) with (.*),"['in', 'java']",['bufferedreader'],['java.lang.Integer.parseInt']
6,read (.*) with (.*),['jks'],['bouncycastle'],['java.security.KeyStore.getInstance']
7,read (.*) with (.*),['it'],"['a', 'filereader']","['java.io.FileInputStream.skip', 'java.io.FileInputStream.getChannel']"
8,read (.*) with (.*),"['from', 'file']",['bufferedreader'],['java.lang.Integer.parseInt']
9,read (.*) with (.*),"['from', 'socket']",['bytebuffer'],['java.nio.ByteBuffer.wrap']
10,read (.*) with (.*),"['some', 'attributes']",['sax'],['javax.xml.parsers.SAXParserFactory.newInstance']
11,read (.*) with (.*),"['an', 'integer']",['datainputstream'],"['java.io.DataInput.readInt', 'java.io.DataInputStream.readInt']"
12,read (.*) with (.*),"['an', 'xml']","['multiple', 'elements']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
13,read (.*) with (.*),"['pixel', 'colours']",['opengl'],['java.nio.ByteBuffer.allocateDirect']
14,read (.*) with (.*),"['specific', 'data']","['buffered', 'filereader']","['java.lang.Double.parseDouble', 'java.lang.Integer.parseInt']"
15,read (.*) with (.*),['file'],"['multiple', 'delimiters']",['java.lang.Integer.parseInt']
16,read (.*) with (.*),"['in', 'java']",['getresource'],"['java.nio.file.Paths.get', 'java.nio.file.Files.copy', 'java.nio.file.Files.readAllBytes', 'java.nio.file.Files.createTempFile']"
17,read (.*) with (.*),['file'],['scanner'],['java.lang.System.exit']
18,read (.*) with (.*),"['from', 'filechannel']","['java', 'nio']","['java.nio.ByteBuffer.allocate', 'java.nio.channels.FileChannel.open']"
19,read (.*) with (.*),"['side', 'processor']",['dgraph'],['java.util.concurrent.CompletableFuture.completedFuture']
20,read (.*) with (.*),"['maven', 'settings']",['java'],['java.lang.Runtime.getRuntime']
21,read (.*) with (.*),"['digit', 'start']","['by', 'streamtokenizer']",['java.lang.String.format']
0,check (.*) in (.*),"['continuous', 'digits']","['a', 'string']",['java.util.regex.Pattern.compile']
1,check (.*) in (.*),"['file', 'extension']","['java', 'android']",['java.lang.Math.max']
2,check (.*) in (.*),['box'],"['selenium', 'webdriver']",['java.lang.Thread.sleep']
3,check (.*) in (.*),"['null', 'values']",['java'],['java.util.Optional.of']
4,check (.*) in (.*),"['table', 'existence']",['sqlite'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection', 'java.util.logging.Logger.getLogger']"
5,check (.*) in (.*),['internet'],"['background', 'android']",['java.lang.Thread.sleep']
6,check (.*) in (.*),"['for', 'value']","['d', 'array']",['java.lang.String.charAt']
7,check (.*) in (.*),"['with', 'optional']",['java'],['java.util.Optional.map']
8,check (.*) in (.*),"['single', 'digit']","['int', 'java']",['java.lang.Integer.toString']
9,check (.*) in (.*),['pattern'],"['an', 'array']",['java.lang.String.format']
10,check (.*) in (.*),"['leap', 'year']",['scala'],['java.time.LocalDate.of']
11,check (.*) in (.*),['boxes'],"['public', 'page']",['java.lang.System.exit']
12,check (.*) in (.*),"['one', 'string']","['other', 'string']",['java.util.regex.Pattern.compile']
13,check (.*) in (.*),"['user', 'roles']","['a', 'filter']",['java.util.concurrent.CompletableFuture.completedFuture']
14,check (.*) in (.*),"['for', 'string']","['do', 'while']",['java.lang.Integer.parseInt']
15,check (.*) in (.*),"['for', 'integers']",['arraylist'],['java.util.Arrays.asList']
0,format (.*) to (.*),['localdate'],['string'],"['java.time.format.DateTimeFormatter.ofPattern', 'java.time.LocalDate.now']"
1,format (.*) to (.*),['instant'],['string'],"['java.time.Instant.now', 'java.time.format.DateTimeFormatter.ofLocalizedDateTime']"
2,format (.*) to (.*),"['a', 'zoneddatetime']","['a', 'string']",['java.time.ZonedDateTime.now']
3,format (.*) to (.*),"['byte', 'array']","['floating', 'point']",['java.nio.ByteBuffer.wrap']
4,format (.*) to (.*),['stopwatch'],['display'],['java.lang.String.format']
5,format (.*) to (.*),['string'],['seconds'],"['java.util.TimeZone.getTimeZone', 'java.time.LocalTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
6,format (.*) to (.*),"['date', 'converts']",[],['java.time.LocalDate.parse']
7,format (.*) to (.*),['string'],"['java', 'zoneddatetime']","['java.time.ZonedDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
8,format (.*) to (.*),"['annotation', 'datetimeformat']","['custom', 'dateformatter']","['java.time.LocalDate.parse', 'java.util.Collections.singleton', 'java.lang.String.join']"
9,format (.*) to (.*),['doubles'],['string'],['java.lang.String.format']
10,format (.*) to (.*),['string'],['integer'],['java.lang.Long.parseLong']
11,format (.*) to (.*),['this'],['string'],['java.lang.String.format']
12,format (.*) to (.*),['added'],['actionlistener'],['java.util.concurrent.Executors.newSingleThreadScheduledExecutor']
13,format (.*) to (.*),"['string', 'array']","['sql', 'query']","['java.util.Arrays.stream', 'java.lang.String.join']"
0,get (.*) to (.*),"['jdatechooser', 'date']",['jlabel'],['java.text.DateFormat.getDateInstance']
1,get (.*) to (.*),"['log', 'j']","['use', 'stdout']",['java.util.logging.Logger.getLogger']
2,get (.*) to (.*),['value'],['integer'],"['java.lang.Integer.parseInt', 'java.lang.Integer.valueOf']"
3,get (.*) to (.*),['xmlgregoriancalendar'],['date'],['javax.xml.datatype.DatatypeFactory.newInstance']
4,get (.*) to (.*),['imageicon'],"['display', 'swing']",['javax.swing.SwingUtilities.invokeLater']
5,get (.*) to (.*),['singleton'],"['do', 'anything']",['java.util.ServiceLoader.load']
6,get (.*) to (.*),"['an', 'image']",['display'],['javax.imageio.ImageIO.read']
7,get (.*) to (.*),"['multiple', 'jbuttons']",['work'],['javax.swing.JOptionPane.showMessageDialog']
8,get (.*) to (.*),['joptionpane'],"['calculate', 'area']","['javax.swing.JOptionPane.showInputDialog', 'java.lang.Integer.parseInt']"
9,get (.*) to (.*),['path'],"['resource', 'file']","['java.nio.file.Files.copy', 'java.lang.Thread.currentThread', 'java.nio.file.Files.createTempFile']"
10,get (.*) to (.*),"['estimator', 'example']",['work'],"['java.lang.System.setErr', 'java.util.Arrays.asList']"
11,get (.*) to (.*),['jframe'],"['refresh', 'image']",['java.awt.Toolkit.getDefaultToolkit']
12,get (.*) to (.*),['requests'],"['server', 'javascript']",['java.lang.Math.max']
13,get (.*) to (.*),['jetty'],"['ignore', 'it']",['java.lang.Class.forName']
14,get (.*) to (.*),"['tan', 'function']","['show', 'undefined']","['java.lang.Double.parseDouble', 'java.lang.Math.round']"
15,get (.*) to (.*),"['markers', 'coordinates']",['map'],"['java.lang.Math.pow', 'java.lang.Math.floor']"
16,get (.*) to (.*),['them'],['stay'],['javax.swing.SwingUtilities.invokeLater']
17,get (.*) to (.*),['sprite'],"['rotate', 'correctly']",['java.lang.Math.toDegrees']
18,get (.*) to (.*),"['the', 'connection']",['work'],['javax.imageio.ImageIO.read']
19,get (.*) to (.*),['caret'],"['set', 'later']",['javax.swing.SwingUtilities.invokeLater']
20,get (.*) to (.*),['image'],"['show', 'up']","['javax.imageio.ImageIO.read', 'javax.swing.SwingUtilities.invokeLater']"
21,get (.*) to (.*),['regex'],['work'],['java.util.regex.Pattern.compile']
22,get (.*) to (.*),['characters'],"['a', 'string']",['java.lang.Long.parseLong']
23,get (.*) to (.*),['groups'],['work'],['java.util.regex.Matcher.find']
24,get (.*) to (.*),['jframe'],['work'],"['java.lang.Double.parseDouble', 'java.lang.Integer.parseInt']"
25,get (.*) to (.*),"['java', 'regex']","['match', 'correctly']",['java.util.regex.Pattern.compile']
26,get (.*) to (.*),['access'],['timepickerdialog'],['java.lang.Integer.toString']
27,get (.*) to (.*),"['the', 'calculations']",['work'],['java.lang.Double.valueOf']
28,get (.*) to (.*),['it'],['top'],['java.lang.Math.abs']
29,get (.*) to (.*),"['my', 'regex']","['work', 'correctly']",['java.util.regex.Pattern.compile']
30,get (.*) to (.*),['it'],['work'],['java.lang.Math.min']
31,get (.*) to (.*),"['this', 'jbutton']",['work'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
32,get (.*) to (.*),['loop'],['stop'],"['java.lang.Runtime.getRuntime', 'java.lang.Math.round']"
33,get (.*) to (.*),['printwriter'],['work'],"['java.lang.Integer.toString', 'java.lang.String.valueOf']"
34,get (.*) to (.*),"['if', 'statement']","['confirm', 'string']",['java.lang.Character.toLowerCase']
35,get (.*) to (.*),"['thread', 'interrupt']",['work'],"['java.lang.Thread.sleep', 'javax.swing.SwingUtilities.invokeLater', 'java.lang.Thread.currentThread', 'java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager', 'javax.swing.KeyStroke.getKeyStroke']"
36,get (.*) to (.*),"['java', 'swing']","['paint', 'properly']","['java.lang.Thread.sleep', 'javax.swing.SwingUtilities.invokeLater', 'java.lang.Math.max', 'java.lang.Thread.currentThread', 'java.lang.Math.min', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.LocalDateTime.now', 'java.lang.String.format']"
37,get (.*) to (.*),['replace'],['work'],['java.lang.String.format']
38,get (.*) to (.*),"['the', 'code']","['work', 'properly']","['java.time.LocalDate.parse', 'java.time.LocalDate.of', 'java.util.EnumSet.of', 'java.util.Objects.requireNonNull']"
39,get (.*) to (.*),['error'],"['be', 'displayed']",['java.lang.System.exit']
40,get (.*) to (.*),"['the', 'content']","['be', 'added']","['java.lang.Thread.sleep', 'java.lang.Long.valueOf']"
41,get (.*) to (.*),['it'],['execute'],"['java.lang.Double.parseDouble', 'java.lang.Integer.parseInt']"
0,format (.*) with (.*),['dates'],"['localdatetime', 'java']","['java.time.LocalDateTime.parse', 'java.time.LocalDateTime.of', 'java.time.format.DateTimeFormatter.ofPattern']"
1,format (.*) with (.*),['double'],['dot'],"['java.util.Locale.setDefault', 'java.lang.String.format']"
2,format (.*) with (.*),['numbers'],['localization'],['java.lang.String.format']
3,format (.*) with (.*),"['string', 'number']","['tenth', 'exponent']",['java.lang.String.format']
4,format (.*) with (.*),['issue'],['yyyy'],"['java.time.Duration.between', 'java.time.LocalDateTime.of']"
5,format (.*) with (.*),['cell'],"['apache', 'poi']",['java.util.Optional.ofNullable']
6,format (.*) with (.*),['validation'],['regex'],['java.lang.String.matches']
7,format (.*) with (.*),"['without', 'year']","['joda', 'time']","['java.text.DateFormat.getTimeInstance', 'java.text.DateFormat.getDateInstance', 'java.text.DateFormat.getDateTimeInstance']"
8,format (.*) with (.*),['bigdecimal'],['fractions'],['java.text.NumberFormat.getNumberInstance']
9,format (.*) with (.*),"['while', 'working']",['datasets'],['java.util.Arrays.asList']
10,format (.*) with (.*),"['to', 'localdatetime']","['optional', 'offset']","['java.time.LocalDateTime.from', 'java.time.ZonedDateTime.from']"
11,format (.*) with (.*),"['turkish', 'lira']",['symbol'],['java.text.NumberFormat.getCurrencyInstance']
12,format (.*) with (.*),"['for', 'number']","['floating', 'point']",['java.lang.String.format']
13,format (.*) with (.*),"['a', 'string']","['multiple', 'dates']",['java.text.MessageFormat.format']
14,format (.*) with (.*),"['specifier', 'collides']","['soql', 'wildcard']",['java.lang.String.format']
15,format (.*) with (.*),['issue'],['datetimeformatter'],"['java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
16,format (.*) with (.*),"['string', 'error']","['maven', 'build']",['java.lang.String.format']
17,format (.*) with (.*),['numbers'],['commas'],['java.text.NumberFormat.getInstance']
18,format (.*) with (.*),"['overall', 'width']","['multiple', 'params']",['java.lang.String.format']
19,format (.*) with (.*),['numbers'],"['some', 'pattern']",['java.lang.Double.valueOf']
20,format (.*) with (.*),['problem'],"['exit', 'button']","['javax.swing.JOptionPane.showOptionDialog', 'java.lang.System.exit', 'java.lang.String.format']"
0,create (.*) using (.*),"['new', 'object']",['reflection'],['java.lang.Class.newInstance']
1,create (.*) using (.*),"['xml', 'document']",['nodelist'],"['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
2,create (.*) using (.*),"['xml', 'nodes']","['java', 'dom']",['javax.xml.transform.TransformerFactory.newInstance']
3,create (.*) using (.*),"['byte', 'array']","['string', 'value']",['java.lang.Object.toString']
4,create (.*) using (.*),['another'],['streams'],['java.util.stream.IntStream.range']
5,create (.*) using (.*),['object'],['constructor'],['java.lang.Object.clone']
6,create (.*) using (.*),"['proxy', 'without']","['spring', 'aop']",['java.lang.reflect.Proxy.newProxyInstance']
7,create (.*) using (.*),"['protobuf', 'instances']","['java', 'reflection']",['java.lang.Class.forName']
8,create (.*) using (.*),"['soap', 'request']",['saaj'],['javax.xml.soap.MessageFactory.newInstance']
9,create (.*) using (.*),"['soap', 'request']","['saaj', 'api']",['javax.xml.soap.MessageFactory.newInstance']
10,create (.*) using (.*),"['table', 'database']",['sql'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
11,create (.*) using (.*),"['mysql', 'database']",['matlab'],['java.sql.DriverManager.getConnection']
12,create (.*) using (.*),['object'],"['java', 'reflection']",['java.lang.Boolean.valueOf']
13,create (.*) using (.*),['hashmap'],['string'],['java.util.Arrays.asList']
14,create (.*) using (.*),['substring'],['loop'],['java.lang.Math.min']
15,create (.*) using (.*),"['set', 'bar']",['streams'],"['java.util.stream.Collectors.toSet', 'java.lang.Integer.parseInt']"
16,create (.*) using (.*),['jcomponents'],['database'],"['javax.swing.SwingUtilities.invokeLater', 'java.sql.DriverManager.getConnection']"
17,create (.*) using (.*),"['a', 'timepickerdialog']","['the', 'fragmentdialog']",['java.util.Calendar.getInstance']
18,create (.*) using (.*),"['words', 'stream']",['scanner'],"['java.util.regex.Pattern.compile', 'java.nio.file.Files.lines']"
19,create (.*) using (.*),"['static', 'array']","['class', 'forname']","['java.lang.Class.forName', 'java.lang.reflect.Array.newInstance', 'java.lang.reflect.Array.set']"
20,create (.*) using (.*),"['valid', 'xml']","['xsd', 'schema']",['javax.xml.bind.JAXBContext.newInstance']
21,create (.*) using (.*),"['new', 'object']","['the', 'database']",['java.util.Arrays.asList']
22,create (.*) using (.*),"['moveable', 'jpanel']",['borderlayout'],"['javax.swing.BorderFactory.createEmptyBorder', 'java.awt.EventQueue.invokeLater', 'java.lang.Math.max', 'java.lang.Math.min']"
0,access (.*) in (.*),['resources'],"['jar', 'file']",['java.awt.Toolkit.getDefaultToolkit']
1,access (.*) in (.*),"['non', 'static']",['collectors'],['java.util.stream.Collectors.mapping']
2,access (.*) in (.*),"['gradle', 'parameter']","['java', 'code']",['java.lang.System.getProperty']
3,access (.*) in (.*),"['html', 'files']","['a', 'jar']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
4,access (.*) in (.*),"['enum', 'values']","['spring', 'mvc']",['java.util.Arrays.asList']
5,access (.*) in (.*),"['resource', 'files']","['netbeans', 'java']",['java.nio.file.Paths.get']
6,access (.*) in (.*),['database'],"['a', 'jtable']",['java.sql.DriverManager.getConnection']
7,access (.*) in (.*),['variables'],"['another', 'class']",['java.util.Collections.shuffle']
8,access (.*) in (.*),"['java', 'classes']","['a', 'subfolder']",['java.lang.ClassLoader.getSystemClassLoader']
9,access (.*) in (.*),['database'],"['java', 'program']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
10,access (.*) in (.*),"['it', 'fine']",['browser'],['java.net.URLEncoder.encode']
11,access (.*) in (.*),"['of', 'servlet']","['my', 'application']",['java.util.concurrent.Executors.newFixedThreadPool']
12,access (.*) in (.*),['classes'],"['java', 'webstart']",['java.lang.System.setSecurityManager']
13,access (.*) in (.*),['them'],['program'],"['java.util.Properties.store', 'java.util.Properties.load']"
14,access (.*) in (.*),['files'],"['the', 'bundle']","['java.lang.System.getProperty', 'java.lang.System.getenv']"
15,access (.*) in (.*),['resources'],"['jar', 'file']","['java.io.File.createTempFile', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
16,access (.*) in (.*),"['the', 'values']",['circle'],['java.lang.Math.hypot']
17,access (.*) in (.*),"['other', 'variables']","['this', 'scope']",['java.util.Arrays.setAll']
18,access (.*) in (.*),['file'],"['resources', 'folder']",['javax.imageio.ImageIO.read']
19,access (.*) in (.*),"['the', 'files']","['a', 'folder']",['java.io.File.listFiles']
20,access (.*) in (.*),"['specific', 'value']","['a', 'hashmap']","['java.util.Collections.max', 'java.util.HashMap.entrySet']"
21,access (.*) in (.*),"['each', 'row']","['triangular', 'numbers']",['java.util.Collections.max']
22,access (.*) in (.*),"['previous', 'value']",['stream'],['java.util.stream.DoubleStream.iterate']
23,access (.*) in (.*),"['a', 'webapp']","['spring', 'boot']",['java.util.logging.LogManager.getLogger']
24,access (.*) in (.*),"['class', 'defined']",['method'],"['java.lang.Class.forName', 'java.lang.String.format']"
25,access (.*) in (.*),['methods'],"['thread', 'run']",['javax.swing.SwingUtilities.invokeLater']
0,update (.*) in (.*),"['node', 'value']","['xml', 'java']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance', 'java.util.Calendar.getInstance', 'javax.xml.transform.TransformerFactory.newInstance', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.LocalDate.parse']"
1,update (.*) in (.*),['values'],"['loop', 'threaded']","['java.lang.Thread.sleep', 'javax.swing.SwingUtilities.invokeLater']"
2,update (.*) in (.*),"['a', 'label']","['jsf', 'primefaces']",['java.lang.Integer.parseInt']
3,update (.*) in (.*),['done'],['jtable'],['java.sql.DriverManager.getConnection']
4,update (.*) in (.*),"['text', 'file']","['java', 'gui']",['java.awt.EventQueue.invokeLater']
5,update (.*) in (.*),"['swing', 'components']","['real', 'time']",['java.lang.Thread.sleep']
6,update (.*) in (.*),['component'],['jframe'],['java.awt.EventQueue.invokeLater']
7,update (.*) in (.*),['jlabel'],"['real', 'time']",['javax.swing.SwingUtilities.invokeLater']
8,update (.*) in (.*),"['a', 'textarea']",['edt'],['javax.swing.SwingUtilities.invokeLater']
9,update (.*) in (.*),"['a', 'chromedriver']","['selenium', 'library']",['java.lang.System.setProperty']
10,update (.*) in (.*),"['an', 'image']","['a', 'jlabel']",['javax.swing.SwingUtilities.invokeLater']
11,update (.*) in (.*),"['swt', 'gui']","['asyncexec', 'call']",['java.lang.Thread.sleep']
12,update (.*) in (.*),['data'],"['firebase', 'database']",['java.lang.Integer.parseInt']
13,update (.*) in (.*),['table'],['panel'],"['java.lang.Integer.toString', 'java.lang.Double.toString']"
14,update (.*) in (.*),['time'],['joptionpane'],"['java.util.Calendar.getInstance', 'javax.swing.JOptionPane.showMessageDialog']"
15,update (.*) in (.*),"['a', 'plot']",['jfreechart'],"['java.awt.EventQueue.invokeLater', 'java.lang.Integer.valueOf']"
16,update (.*) in (.*),"['fetch', 'request']",['reactjs'],['java.lang.Math.floor']
17,update (.*) in (.*),['linechart'],['javafx'],['java.lang.Thread.sleep']
18,update (.*) in (.*),['text'],"['the', 'loop']",['java.lang.Thread.sleep']
19,update (.*) in (.*),['query'],['android'],"['java.lang.Long.valueOf', 'java.lang.String.valueOf']"
20,update (.*) in (.*),"['the', 'gui']","['real', 'time']",['javax.swing.SwingWorker.publish']
21,update (.*) in (.*),['eventlist'],['jtable'],['javax.swing.SwingUtilities.invokeLater']
22,update (.*) in (.*),"['one', 'variable']","['recursive', 'function']",['java.lang.Math.min']
23,update (.*) in (.*),['jtextfields'],"['a', 'gridlayout']",['java.awt.EventQueue.invokeLater']
24,update (.*) in (.*),['value'],"['java', 'arraylist']",['java.lang.Integer.parseInt']
25,update (.*) in (.*),"['text', 'area']",['swing'],['javax.swing.SwingUtilities.invokeLater']
26,update (.*) in (.*),['item'],"['firebase', 'android']",['java.lang.System.currentTimeMillis']
27,update (.*) in (.*),['values'],['map'],['java.util.Collections.sort']
28,update (.*) in (.*),['authentication'],['auditoraware'],['java.util.Optional.ofNullable']
29,update (.*) in (.*),"['multiple', 'variables']","['a', 'loop']",['java.lang.Math.random']
30,update (.*) in (.*),['time'],['jlabel'],['javax.swing.SwingUtilities.invokeLater']
31,update (.*) in (.*),"['javafx', 'window']",['background'],['java.nio.file.Files.walkFileTree']
32,update (.*) in (.*),['data'],['table'],['java.lang.Integer.parseInt']
0,output (.*) in (.*),['result'],['jsch'],['java.lang.Thread.sleep']
1,output (.*) in (.*),"['log', 'files']","['separate', 'locations']",['java.util.logging.Logger.getLogger']
2,output (.*) in (.*),['date'],['itemwriter'],['java.lang.String.format']
3,output (.*) in (.*),['stored'],"['a', 'file']",['java.lang.System.setOut']
4,output (.*) in (.*),['file'],['ffmpeg'],"['java.nio.file.Paths.get', 'java.nio.file.Files.readAllBytes', 'java.nio.file.Files.deleteIfExists']"
5,output (.*) in (.*),['issues'],"['java', 'android']",['java.lang.String.format']
6,output (.*) in (.*),['variable'],['jlabel'],['java.lang.Integer.parseInt']
7,output (.*) in (.*),"['a', 'matrix']",['jtextarea'],['java.lang.Integer.parseInt']
8,output (.*) in (.*),['come'],"['different', 'columns']","['java.awt.EventQueue.invokeLater', 'javax.swing.JOptionPane.showMessageDialog', 'javax.swing.UIManager.setLookAndFeel']"
9,output (.*) in (.*),"['stream', 'blocking']","['full', 'duplex']","['java.lang.Thread.sleep', 'java.nio.channels.Selector.select', 'java.nio.channels.SocketChannel.open', 'java.nio.channels.ServerSocketChannel.open']"
10,output (.*) in (.*),"['of', 'crc']",['android'],['java.lang.Character.digit']
11,output (.*) in (.*),"['matrix', 'correctly']","['spark', 'java']",['java.lang.String.format']
12,output (.*) in (.*),"['entire', 'loop']",['jframe'],['javax.swing.JOptionPane.showMessageDialog']
13,output (.*) in (.*),"['to', 'a']","['memory', 'structure']",['java.lang.System.setOut']
14,output (.*) in (.*),['ordering'],['java'],['java.util.Collections.sort']
15,output (.*) in (.*),"['from', 'subprocess']","['wrong', 'order']",['java.lang.Runtime.exec']
16,output (.*) in (.*),"['per', 'line']","['an', 'array']",['java.lang.System.setOut']
17,output (.*) in (.*),"['to', 'console']",['eclipse'],['java.lang.Runtime.getRuntime']
18,output (.*) in (.*),"['an', 'arraylist']","['a', 'window']",['javax.swing.JOptionPane.showMessageDialog']
19,output (.*) in (.*),"['to', 'table']","['java', 'swing']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
20,output (.*) in (.*),"['copied', 'twice']","['nim', 'game']",['java.lang.Integer.parseInt']
21,output (.*) in (.*),"['of', 'method']","['text', 'file']",['java.lang.System.getProperty']
22,output (.*) in (.*),"['as', 'expected']",['swing'],['java.lang.Thread.sleep']
23,output (.*) in (.*),"['is', 'wrong']",['exponents'],['java.lang.Math.pow']
24,output (.*) in (.*),"['character', 'months']",['french'],"['java.util.Locale.setDefault', 'java.time.LocalDateTime.of', 'java.time.format.DateTimeFormatter.ofPattern']"
0,run (.*) on (.*),['function'],"['jbutton', 'press']",['java.util.concurrent.Executors.newSingleThreadExecutor']
1,run (.*) on (.*),['joptionpane'],['edt'],"['javax.swing.SwingUtilities.isEventDispatchThread', 'javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
2,run (.*) on (.*),"['swing', 'jar']",['linux'],['java.lang.System.getProperties']
3,run (.*) on (.*),"['time', 'properties']",['springapplicationbuilder'],['java.lang.System.setProperty']
4,run (.*) on (.*),"['x', 'tasks']","['y', 'threads']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.lang.System.nanoTime']"
5,run (.*) on (.*),"['an', 'action']","['partitioned', 'rdd']",['java.lang.Runtime.getRuntime']
6,run (.*) on (.*),"['google', 'script']","['multiple', 'sheets']",['java.util.logging.Logger.log']
7,run (.*) on (.*),"['class', 'continuously']",['deployment'],['java.util.concurrent.Executors.newSingleThreadExecutor']
8,run (.*) on (.*),"['jprogress', 'bar']","['jframe', 'load']","['java.lang.Thread.sleep', 'java.util.logging.Logger.getLogger']"
9,run (.*) on (.*),"['multiple', 'functions']","['same', 'input']",['java.util.concurrent.CompletableFuture.supplyAsync']
10,run (.*) on (.*),"['with', 'jvm']","['windows', 'platform']",['javax.swing.JOptionPane.showMessageDialog']
11,run (.*) on (.*),['before'],['mac'],['java.util.prefs.Preferences.userRoot']
12,run (.*) on (.*),"['equally', 'fast']","['all', 'machines']","['java.lang.Thread.sleep', 'java.util.Timer.scheduleAtFixedRate']"
13,run (.*) on (.*),['query'],"['long', 'number']",['java.lang.Long.parseLong']
0,split (.*) with (.*),['string'],[],['java.lang.String.split']
1,split (.*) with (.*),"['to', 'split']","['multiple', 'conditions']",['java.util.regex.Pattern.compile']
2,split (.*) with (.*),['string'],"['double', 'quotes']",['java.util.regex.Pattern.compile']
3,split (.*) with (.*),['string'],"['alternative', 'comma']",['java.util.regex.Pattern.compile']
4,split (.*) with (.*),"['target', 'path']",[],"['java.nio.file.FileSystems.getDefault', 'java.util.regex.Pattern.quote']"
5,split (.*) with (.*),['string'],"['blank', 'delimiter']",['java.util.regex.Pattern.compile']
6,split (.*) with (.*),"['a', 'text']",['regex'],['java.util.regex.Pattern.compile']
7,split (.*) with (.*),"['complex', 'string']",['delimiters'],['java.util.regex.Pattern.compile']
8,split (.*) with (.*),"['using', 'regex']","['escape', 'character']",['java.util.regex.Pattern.compile']
9,split (.*) with (.*),['index'],"['for', 'loop']",['java.lang.Integer.parseInt']
10,split (.*) with (.*),"['a', 'string']",['restrictions'],['java.util.regex.Pattern.compile']
11,split (.*) with (.*),"['special', 'char']",['regex'],['java.util.regex.Pattern.compile']
0,make (.*) with (.*),"['pipes', 'work']","['runtime', 'exec']",['java.lang.Runtime.getRuntime']
1,make (.*) with (.*),"['tls', 'work']",['java'],"['javax.net.SocketFactory.getDefault', 'javax.net.ssl.SSLSocketFactory.getDefault']"
2,make (.*) with (.*),"['cartesian', 'product']","['java', 'streams']",['java.util.stream.Stream.empty']
3,make (.*) with (.*),['jdialog'],['checkboxes'],['javax.swing.JOptionPane.showConfirmDialog']
4,make (.*) with (.*),"['this', 'layout']","['java', 'swing']",['javax.swing.SwingUtilities.invokeLater']
5,make (.*) with (.*),"['draggable', 'components']",['imageicon'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
6,make (.*) with (.*),"['an', 'array']","['unique', 'numbers']",['java.util.Collections.shuffle']
7,make (.*) with (.*),"['random', 'percentage']","['dynamic', 'array']",['java.lang.Math.random']
8,make (.*) with (.*),"['cell', 'editable']",['jbutton'],"['java.awt.EventQueue.invokeLater', 'java.lang.Integer.valueOf']"
9,make (.*) with (.*),"['db', 'queries']","['this', 'pool']",['java.util.concurrent.Executors.newFixedThreadPool']
10,make (.*) with (.*),"['transparent', 'jframe']","['visible', 'borders']",['javax.swing.JFrame.setDefaultLookAndFeelDecorated']
11,make (.*) with (.*),"['aggregation', 'java']","['specific', 'condition']","['java.util.Objects.equals', 'java.util.stream.Collectors.summingInt', 'java.util.Objects.hash']"
12,make (.*) with (.*),"['schemacrawler', 'work']","['informix', 'database']",['java.lang.Class.forName']
13,make (.*) with (.*),"['multiply', 'request']",['rxjava'],"['java.util.Arrays.asList', 'java.util.stream.Stream.of']"
14,make (.*) with (.*),['summation'],['java'],['java.lang.Integer.parseInt']
15,make (.*) with (.*),"['multi', 'thread']",['swingworker'],['java.awt.EventQueue.invokeLater']
0,execute (.*) with (.*),"['bash', 'command']","['sudo', 'privileges']",['java.lang.Runtime.getRuntime']
1,execute (.*) with (.*),['command'],['parameters'],['java.lang.Runtime.getRuntime']
2,execute (.*) with (.*),"['native', 'sql']",['hibernate'],['java.lang.String.format']
3,execute (.*) with (.*),"['a', 'process']","['a', 'timeout']",['java.lang.Process.destroy']
4,execute (.*) with (.*),['project'],"['jogl', 'library']",['java.lang.System.loadLibrary']
5,execute (.*) with (.*),"['cmd', 'script']","['double', 'quotes']",['java.lang.Runtime.getRuntime']
6,execute (.*) with (.*),"['pl', 'sql']",['java'],['java.sql.DriverManager.getConnection']
7,execute (.*) with (.*),"['dos', 'command']",['options'],['java.lang.Runtime.getRuntime']
8,execute (.*) with (.*),['permission'],['java'],"['java.lang.Runtime.exec', 'java.nio.file.Files.isExecutable']"
9,execute (.*) with (.*),"['cmd', 'commands']",['java'],['java.nio.file.Paths.get']
0,send (.*) to (.*),['actionevent'],['jbutton'],['java.lang.System.currentTimeMillis']
1,send (.*) to (.*),"['a', 'message']","['a', 'client']",['javax.net.SocketFactory.getDefault']
2,send (.*) to (.*),['data'],['computer'],['java.lang.Integer.parseInt']
3,send (.*) to (.*),"['javascript', 'variables']","['spring', 'controller']",['java.lang.String.valueOf']
4,send (.*) to (.*),"['a', 'jpanel']","['the', 'printer']","['java.awt.print.PrinterJob.getPrinterJob', 'javax.swing.RepaintManager.currentManager']"
5,send (.*) to (.*),['mail'],"['gmail', 'account']","['java.net.InetAddress.getLocalHost', 'java.net.InetAddress.getByName']"
6,send (.*) to (.*),['it'],"['the', 'server']","['java.nio.ByteBuffer.allocate', 'java.lang.Thread.sleep']"
7,send (.*) to (.*),"['special', 'characters']","['web', 'services']",['java.net.URLEncoder.encode']
8,send (.*) to (.*),"['multiple', 'arguments']","['reducer', 'mapreduce']",['java.lang.Double.parseDouble']
9,send (.*) to (.*),"['multiple', 'values']",['constructor'],"['java.time.LocalDate.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
10,send (.*) to (.*),['interrupt'],['itself'],['java.lang.Thread.sleep']
11,send (.*) to (.*),"['midi', 'message']",['device'],['javax.sound.midi.MidiSystem.getReceiver']
12,send (.*) to (.*),['string'],['obdii'],['java.lang.Integer.toHexString']
13,send (.*) to (.*),"['login', 'information']","['mysql', 'database']",['java.net.URLEncoder.encode']
14,send (.*) to (.*),['command'],"['http', 'server']",['java.lang.String.format']
15,send (.*) to (.*),['file'],['server'],['java.lang.Math.min']
16,send (.*) to (.*),"['value', 'variable']",['junit'],['java.lang.System.getProperty']
17,send (.*) to (.*),['json'],['server'],['java.lang.String.valueOf']
18,send (.*) to (.*),['signals'],"['child', 'process']",['java.lang.Runtime.getRuntime']
19,send (.*) to (.*),['notification'],"['all', 'classes']",['java.util.Collections.synchronizedMap']
20,send (.*) to (.*),"['an', 'array']","['an', 'arraylist']",['java.lang.Object.toString']
21,send (.*) to (.*),['parameters'],"['their', 'methods']","['java.lang.Class.forName', 'java.lang.reflect.Method.invoke']"
22,send (.*) to (.*),['data'],"['another', 'fragment']",['java.lang.String.format']
23,send (.*) to (.*),['texts'],['server'],['java.lang.Integer.parseInt']
0,store (.*) in (.*),"['a', 'key']",['keystore'],['java.security.KeyStore.getInstance']
1,store (.*) in (.*),"['binary', 'sequence']","['byte', 'array']",['java.lang.Integer.toString']
2,store (.*) in (.*),"['a', 'picture']",['mysql'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
3,store (.*) in (.*),['time'],"['a', 'variable']",['java.util.Calendar.getInstance']
4,store (.*) in (.*),"['a', 'privatekey']",['code'],['javax.crypto.Mac.getInstance']
5,store (.*) in (.*),['them'],"['an', 'array']","['java.util.List.add', 'java.util.Scanner.hasNextInt']"
6,store (.*) in (.*),['indexes'],"['an', 'array']",['java.util.ArrayList.add']
7,store (.*) in (.*),['it'],"['an', 'arraylist']",['java.util.Arrays.asList']
8,store (.*) in (.*),"['its', 'logs']","['mac', 'os']",['java.lang.System.getProperty']
9,store (.*) in (.*),"['password', 'set']",['code'],['java.lang.System.setProperty']
10,store (.*) in (.*),['data'],"['a', 'jbutton']",['java.lang.Integer.parseInt']
11,store (.*) in (.*),"['random', 'integers']",['array'],"['java.lang.System.exit', 'java.lang.Integer.parseInt']"
12,store (.*) in (.*),['int'],"['integer', 'array']",['java.lang.Integer.valueOf']
13,store (.*) in (.*),"['epoch', 'time']",['microseconds'],['java.time.Instant.now']
14,store (.*) in (.*),['update'],"['sqlite', 'database']",['java.sql.Connection.commit']
15,store (.*) in (.*),['passwords'],"['java', 'gui']",['java.lang.String.valueOf']
16,store (.*) in (.*),['it'],['jtable'],['java.lang.Runtime.getRuntime']
17,store (.*) in (.*),['images'],['eclipse'],['javax.imageio.ImageIO.read']
18,store (.*) in (.*),['it'],"['int', 'array']",['java.lang.Integer.parseInt']
19,store (.*) in (.*),['object'],"['the', 'localstorage']",['java.util.function.Function.apply']
20,store (.*) in (.*),"['joptionpane', 'value']",['array'],"['java.awt.EventQueue.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
21,store (.*) in (.*),['it'],"['string', 'android']",['java.util.Calendar.getInstance']
22,store (.*) in (.*),['it'],"['txt', 'file']",['java.lang.Thread.sleep']
23,store (.*) in (.*),"['its', 'value']","['a', 'biginteger']",['java.math.BigInteger.valueOf']
24,store (.*) in (.*),['error'],['variable'],['java.lang.System.exit']
25,store (.*) in (.*),"['unique', 'values']","['its', 'structure']",['java.util.Map.size']
26,store (.*) in (.*),"['comparators', 'objects']",['array'],['java.util.Arrays.asList']
27,store (.*) in (.*),['them'],"['an', 'array']",['java.lang.Double.parseDouble']
28,store (.*) in (.*),"['received', 'data']","['an', 'array']",['java.lang.Integer.parseInt']
29,store (.*) in (.*),"['string', 'array']","['txt', 'file']",['java.nio.file.Files.write']
30,store (.*) in (.*),['integers'],['array'],['java.lang.Integer.parseInt']
31,store (.*) in (.*),['date'],"['xml', 'tags']","['javax.xml.bind.JAXBContext.newInstance', 'java.time.LocalDateTime.of']"
32,store (.*) in (.*),"['an', 'arraylist']","['a', 'file']",['java.io.File.createTempFile']
33,store (.*) in (.*),['it'],"['string', 'builder']","['javax.swing.JOptionPane.showInputDialog', 'javax.swing.JOptionPane.showMessageDialog']"
34,store (.*) in (.*),"['the', 'index']","['integer', 'array']",['java.util.Arrays.asList']
35,store (.*) in (.*),['it'],"['array', 'list']",['java.nio.file.Paths.get']
36,store (.*) in (.*),['values'],"['one', 'line']",['java.nio.file.Files.newBufferedWriter']
37,store (.*) in (.*),['it'],"['list', 'string']",['java.lang.String.toLowerCase']
38,store (.*) in (.*),['info'],"['mysql', 'server']",['javax.swing.JOptionPane.showMessageDialog']
39,store (.*) in (.*),"['as', 'varchar']",['mysql'],"['java.sql.DriverManager.getConnection', 'java.lang.Integer.parseInt']"
40,store (.*) in (.*),['tools'],"['java', 'project']",['java.util.Arrays.stream']
41,store (.*) in (.*),"['xml', 'values']",['arraylist'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
0,access (.*) to (.*),['only'],"['certain', 'classes']","['java.nio.file.Files.delete', 'java.nio.file.Files.createTempFile', 'javax.security.auth.Policy.setPolicy', 'java.lang.System.setSecurityManager', 'java.lang.System.setProperty', 'java.nio.file.Files.readAllBytes', 'java.nio.file.Files.write']"
1,access (.*) to (.*),['warning'],['startupwmclassname'],['java.awt.Toolkit.getDefaultToolkit']
0,sort (.*) on (.*),"['keep', 'order']","['equal', 'elements']",['java.util.Collections.sort']
1,sort (.*) on (.*),"['array', 'based']",['array'],['java.util.Arrays.sort']
2,sort (.*) on (.*),"['a', 'hashmap']",['value'],['java.util.Collections.sort']
3,sort (.*) on (.*),"['multidimensional', 'array']",['keyword'],['java.util.Arrays.sort']
4,sort (.*) on (.*),['based'],"['specific', 'order']","['java.util.Arrays.asList', 'java.util.Comparator.comparing']"
5,sort (.*) on (.*),"['array', 'based']","['three', 'column']",['java.util.Arrays.sort']
6,sort (.*) on (.*),"['jsonarray', 'based']","['multiple', 'values']",['java.util.Collections.sort']
7,sort (.*) on (.*),"['list', 'based']","['index', 'value']",['java.util.Collections.sort']
8,sort (.*) on (.*),['based'],['keywords'],['java.util.Arrays.asList']
9,sort (.*) on (.*),"['treemap', 'based']",['values'],['java.util.Collections.sort']
10,sort (.*) on (.*),"['by', 'uploaddate']",['gridfs'],['java.util.Collections.sort']
11,sort (.*) on (.*),"['list', 'based']","['separate', 'list']",['java.util.Collections.sort']
12,sort (.*) on (.*),"['json', 'based']","['multiple', 'values']",['java.util.Collections.sort']
13,sort (.*) on (.*),"['list', 'based']","['specific', 'order']",['java.util.Collections.sort']
14,sort (.*) on (.*),"['algorithm', 'problems']","['java', 'comparable']","['java.util.Arrays.asList', 'java.lang.Double.compare', 'java.util.Arrays.sort']"
15,sort (.*) on (.*),"['descendingly', 'based']","['multiple', 'parameters']",['java.util.Collections.sort']
16,sort (.*) on (.*),['based'],['value'],['java.util.stream.Collectors.groupingBy']
17,sort (.*) on (.*),['map'],['value'],['java.util.Collections.sort']
18,sort (.*) on (.*),"['list', 'depending']","['other', 'list']",['java.util.Comparator.comparingInt']
19,sort (.*) on (.*),"['one', 'always']",['top'],['java.lang.Integer.compare']
20,sort (.*) on (.*),['ect'],"['a', 'stack']",['java.util.Collections.max']
21,sort (.*) on (.*),"['elements', 'based']","['time', 'windows']",['java.util.Collections.sort']
0,parse (.*) in (.*),"['a', 'number']","['exponential', 'notation']",['java.lang.Double.valueOf']
1,parse (.*) in (.*),"['date', 'time']",['json'],['java.util.Arrays.asList']
2,parse (.*) in (.*),"['negative', 'long']",['hex'],"['java.lang.Long.parseLong', 'java.lang.Long.parseUnsignedLong']"
3,parse (.*) in (.*),['svg'],"['java', 'android']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
4,parse (.*) in (.*),['html'],"['xml', 'node']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
5,parse (.*) in (.*),['t'],['java'],"['java.time.OffsetDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
6,parse (.*) in (.*),['date'],"['iso', 'format']",['java.util.Calendar.getInstance']
7,parse (.*) in (.*),"['js', 'arrays']",['ruby'],['org.xml.sax.Parser.parse']
8,parse (.*) in (.*),"['html', 'string']","['java', 'servlet']",['java.util.regex.Pattern.compile']
9,parse (.*) in (.*),"['json', 'array']","['android', 'application']",['java.lang.System.setProperty']
10,parse (.*) in (.*),"['an', 'element']","['two', 'ways']",['javax.xml.bind.JAXBContext.newInstance']
11,parse (.*) in (.*),"['a', 'double']","['exponential', 'format']",['java.text.NumberFormat.getInstance']
12,parse (.*) in (.*),"['this', 'xml']","['java', 'sax']",['javax.xml.parsers.SAXParserFactory.newInstance']
13,parse (.*) in (.*),"['optional', 'microseconds']",['localtime'],"['java.time.LocalTime.from', 'java.time.LocalTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
14,parse (.*) in (.*),['regex'],"['cookie', 'response']",['java.util.regex.Pattern.compile']
15,parse (.*) in (.*),['sign'],['dialer'],['java.net.URLEncoder.encode']
16,parse (.*) in (.*),"['html', 'source']",['jsoup'],['java.util.regex.Pattern.compile']
17,parse (.*) in (.*),['date'],"['particular', 'form']",['java.util.logging.Logger.getLogger']
0,change (.*) to (.*),['listener'],['jtextfield'],['javax.swing.JOptionPane.showMessageDialog']
1,change (.*) to (.*),['priorityqueue'],"['max', 'priorityqueue']",['java.util.Collections.reverseOrder']
2,change (.*) to (.*),"['from', 'arraylist']",['vector'],['java.util.Collections.synchronizedList']
3,change (.*) to (.*),['cursor'],"['wait', 'cursor']","['java.lang.Thread.sleep', 'javax.swing.SwingUtilities.invokeLater', 'javax.swing.BorderFactory.createEmptyBorder', 'javax.swing.JOptionPane.showMessageDialog', 'javax.swing.UIManager.setLookAndFeel']"
4,change (.*) to (.*),"['current', 'database']",['another'],['java.sql.Connection.setCatalog']
5,change (.*) to (.*),"['plain', 'socket']",['sslsocket'],"['javax.net.ServerSocketFactory.getDefault', 'javax.net.ssl.SSLSocketFactory.createSocket']"
6,change (.*) to (.*),['stringtokenizer'],['string'],['java.lang.Integer.parseInt']
7,change (.*) to (.*),"['starting', 'letter']","['upper', 'case']",['java.lang.String.valueOf']
8,change (.*) to (.*),"['one', 'angle']",['another'],['java.lang.Math.atan2']
9,change (.*) to (.*),"['zoom', 'behavior']","['semantic', 'zoom']",['java.lang.Math.round']
10,change (.*) to (.*),['binary'],['decimal'],['java.lang.Math.pow']
11,change (.*) to (.*),['date'],"['the', 'future']",['java.security.Security.setProperty']
12,change (.*) to (.*),['double'],[],['java.lang.String.format']
13,change (.*) to (.*),"['server', 'time']",['est'],"['java.time.ZoneId.of', 'java.time.ZonedDateTime.now']"
14,change (.*) to (.*),['x'],['x'],['java.lang.String.format']
15,change (.*) to (.*),"['when', 'added']",['arraylist'],['java.time.LocalDateTime.now']
16,change (.*) to (.*),"['in', 'java']",['decimals'],['java.lang.Math.round']
0,parse (.*) from (.*),"['int', 'value']","['a', 'char']",['java.lang.Character.getNumericValue']
1,parse (.*) from (.*),['json'],"['httpurlconnection', 'object']",['java.util.logging.Logger.getLogger']
2,parse (.*) from (.*),['double'],['regex'],"['java.lang.Double.parseDouble', 'java.util.regex.Pattern.compile']"
3,parse (.*) from (.*),['xml'],"['httppost', 'response']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
4,parse (.*) from (.*),"['array', 'elements']",['string'],['java.util.regex.Pattern.compile']
5,parse (.*) from (.*),"['a', 'string']","['arguments', 'java']",['java.lang.String.valueOf']
6,parse (.*) from (.*),['integers'],"['a', 'string']",['java.lang.Integer.parseInt']
7,parse (.*) from (.*),"['out', 'timestamp']","['this', 'string']",['java.util.regex.Pattern.compile']
8,parse (.*) from (.*),['data'],['file'],['java.nio.ByteBuffer.wrap']
9,parse (.*) from (.*),"['multiple', 'doubles']","['a', 'string']","['java.lang.Double.parseDouble', 'java.util.regex.Pattern.compile']"
10,parse (.*) from (.*),"['xml', 'file']",['url'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
11,parse (.*) from (.*),['xml'],"['assets', 'file']",['javax.xml.xpath.XPathFactory.newInstance']
12,parse (.*) from (.*),['output'],['ffmpeg'],['java.util.regex.Pattern.compile']
13,parse (.*) from (.*),"['some', 'elements']","['a', 'xml']",['javax.xml.bind.JAXBContext.newInstance']
14,parse (.*) from (.*),['double'],['jformattedtextfield'],['java.lang.Double.parseDouble']
15,parse (.*) from (.*),['year'],"['epoch', 'seconds']",['java.time.format.DateTimeFormatter.ofLocalizedDateTime']
16,parse (.*) from (.*),['enums'],['strings'],['java.lang.Enum.valueOf']
17,parse (.*) from (.*),"['two', 'numbers']","['a', 'line']",['java.util.regex.Pattern.compile']
18,parse (.*) from (.*),['string'],"['selected', 'char']",['java.lang.Integer.parseInt']
19,parse (.*) from (.*),['html'],['online'],['java.nio.channels.FileChannel.transferFrom']
20,parse (.*) from (.*),"['numerical', 'values']","['a', 'string']","['java.lang.Integer.parseInt', 'java.lang.Float.parseFloat']"
21,parse (.*) from (.*),['strings'],['xml'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
22,parse (.*) from (.*),"['string', 'value']",['url'],['java.util.regex.Pattern.compile']
23,parse (.*) from (.*),['brackets'],"['a', 'string']",['java.util.regex.Pattern.compile']
24,parse (.*) from (.*),['offsetdatetime'],"['csv', 'file']","['java.time.LocalDateTime.parse', 'java.time.ZonedDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
0,output (.*) to (.*),['stream'],['textarea'],"['java.awt.EventQueue.invokeLater', 'java.lang.Character.toString', 'java.lang.System.setOut', 'javax.swing.UIManager.setLookAndFeel']"
1,output (.*) to (.*),"['of', 'processbuilder']","['another', 'processbuilder']",['java.lang.Runtime.getRuntime']
2,output (.*) to (.*),"['from', 'console']",['jtextarea'],"['java.lang.Class.forName', 'javax.swing.SwingUtilities.invokeLater', 'java.sql.DriverManager.getConnection']"
3,output (.*) to (.*),['stream'],['default'],['java.lang.System.setOut']
4,output (.*) to (.*),['contents'],['file'],['java.lang.System.lineSeparator']
5,output (.*) to (.*),"['from', 'largest']",['smallest'],"['java.lang.Long.compare', 'java.util.Arrays.sort']"
6,output (.*) to (.*),"['object', 'element']","['an', 'array']",['java.util.Arrays.asList']
7,output (.*) to (.*),"['stream', 'back']","['system', 'out']",['java.lang.System.setOut']
8,output (.*) to (.*),"['java', 'function']",['documentdb'],['java.util.UUID.randomUUID']
9,output (.*) to (.*),['stream'],"['a', 'file']",['java.lang.Runtime.getRuntime']
10,output (.*) to (.*),"['of', 'double']","['decimal', 'places']",['javax.swing.JOptionPane.showMessageDialog']
11,output (.*) to (.*),"['and', 'preg']","['unicode', 'strings']",['java.text.Normalizer.normalize']
12,output (.*) to (.*),['data'],"['txt', 'file']","['java.nio.file.Paths.get', 'java.nio.file.Files.write']"
13,output (.*) to (.*),"['from', 'highest']","['lowest', 'frequency']",['java.util.Arrays.sort']
14,output (.*) to (.*),"['from', 'console']","['javafx', 'textarea']",['java.lang.System.setOut']
15,output (.*) to (.*),['aba'],[],"['java.util.regex.Pattern.compile', 'java.lang.Integer.valueOf']"
0,sort (.*) with (.*),['list'],"['comparator', 'class']",['java.util.Collections.sort']
1,sort (.*) with (.*),['hashmap'],"['duplicate', 'values']",['java.util.Collections.sort']
2,sort (.*) with (.*),['arraylist'],['times'],['java.util.Collections.sort']
3,sort (.*) with (.*),"['linked', 'list']",['comparator'],"['java.util.Arrays.asList', 'java.util.Collections.sort']"
4,sort (.*) with (.*),"['csv', 'file']","['some', 'columns']",['java.lang.Integer.compare']
5,sort (.*) with (.*),['arraylist'],"['related', 'array']",['java.util.Arrays.asList']
6,sort (.*) with (.*),"['a', 'arraylist']","['ascii', 'descend']",['java.util.Collections.sort']
7,sort (.*) with (.*),"['a', 'list']",['streams'],"['java.util.Arrays.asList', 'java.lang.Integer.compare']"
8,sort (.*) with (.*),"['an', 'arraylist']","['multiple', 'conditions']",['java.util.Collections.sort']
9,sort (.*) with (.*),['numbers'],"['leading', 'zeros']","['java.lang.Integer.compare', 'java.util.Collections.sort', 'java.lang.Integer.parseInt', 'java.lang.Math.min']"
10,sort (.*) with (.*),['trouble'],"['array', 'size']",['java.lang.System.exit']
11,sort (.*) with (.*),"['an', 'array']","['two', 'arguments']","['java.lang.Float.compare', 'java.util.Comparator.comparingDouble']"
12,sort (.*) with (.*),"['twitter', 'tweets']",['java'],['java.util.Collections.sort']
13,sort (.*) with (.*),['array'],['digits'],"['java.lang.Integer.decode', 'java.util.Arrays.sort', 'java.lang.Integer.compare']"
14,sort (.*) with (.*),"['an', 'arraylist']","['multiple', 'objects']","['java.lang.Integer.compare', 'java.util.Collections.sort']"
15,sort (.*) with (.*),['tables'],"['two', 'elements']",['java.lang.String.valueOf']
16,sort (.*) with (.*),"['a', 'comparator']","['dynamic', 'parameters']","['java.util.Collections.sort', 'java.util.Comparator.comparing']"
17,sort (.*) with (.*),"['the', 'objects']","['comparator', 'logic']",['java.util.Arrays.asList']
18,sort (.*) with (.*),"['list', 'object']","['another', 'objects']","['java.util.Arrays.asList', 'java.lang.Integer.compare']"
0,sort (.*) using (.*),['arraylist'],['comparator'],['java.util.Collections.sort']
1,sort (.*) using (.*),['arraylists'],['booleans'],['java.lang.Boolean.compare']
2,sort (.*) using (.*),"['a', 'collection']","['a', 'collatorkey']",['java.text.Collator.getInstance']
3,sort (.*) using (.*),['arraylist'],['comparable'],['java.util.Collections.sort']
4,sort (.*) using (.*),"['an', 'arraylist']",['comparator'],['java.util.Collections.sort']
5,sort (.*) using (.*),['array'],['comparable'],['java.util.Arrays.sort']
6,sort (.*) using (.*),"['an', 'array']","['external', 'parameters']",['java.util.Arrays.sort']
7,sort (.*) using (.*),['after'],['normalizr'],['java.util.Date.parse']
8,sort (.*) using (.*),['files'],['datetimestamp'],['java.util.Arrays.sort']
9,sort (.*) using (.*),['list'],"['different', 'keys']",['java.util.Collections.sort']
10,sort (.*) using (.*),"['list', 'integer']","['lambda', 'expression']",['java.lang.Integer.compare']
11,sort (.*) using (.*),"['a', 'phrase']",['compareto'],['java.util.Arrays.sort']
12,sort (.*) using (.*),"['and', 'group']",['stream'],"['java.util.Comparator.comparingInt', 'java.util.stream.Collectors.groupingBy', 'java.util.stream.Collectors.maxBy', 'java.util.stream.Stream.of']"
13,sort (.*) using (.*),"['string', 'array']",['java'],"['java.util.Collections.sort', 'java.util.Arrays.sort']"
14,sort (.*) using (.*),"['mutablelist', 'file']",['collator'],['java.text.Collator.getInstance']
0,compare (.*) with (.*),"['date', 'object']","['a', 'timestamp']","['java.time.ZonedDateTime.ofInstant', 'java.time.ZoneId.of', 'java.time.Instant.now', 'java.sql.Timestamp.valueOf']"
1,compare (.*) with (.*),"['current', 'time']","['time', 'range']",['java.util.Calendar.getInstance']
2,compare (.*) with (.*),"['time', 'string']","['current', 'time']","['java.time.ZoneId.of', 'java.time.LocalTime.now', 'java.time.LocalTime.parse']"
3,compare (.*) with (.*),"['java', 'date']","['sql', 'getdate']",['java.lang.Math.round']
4,compare (.*) with (.*),"['two', 'objects']",['hashsets'],"['java.lang.Object.equals', 'java.util.AbstractSet.equals']"
5,compare (.*) with (.*),"['element', 'value']","['current', 'date']",['java.lang.Math.abs']
6,compare (.*) with (.*),"['user', 'input']",['integer'],['java.lang.Integer.parseInt']
7,compare (.*) with (.*),"['code', 'verifier']","['code', 'challenge']",['java.util.Base64.getUrlEncoder']
8,compare (.*) with (.*),"['command', 'issue']",['version'],['java.lang.Double.parseDouble']
9,compare (.*) with (.*),['jdatechooser'],['localnow'],"['java.time.LocalDate.now', 'java.util.Locale.getDefault', 'javax.swing.JOptionPane.showMessageDialog', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.ZoneId.systemDefault']"
10,compare (.*) with (.*),['integer'],['int'],['java.util.Map.getOrDefault']
11,compare (.*) with (.*),['it'],"['current', 'date']","['java.time.Period.between', 'java.time.LocalDate.now']"
12,compare (.*) with (.*),"['hr', 'strings']",['java'],"['java.time.LocalTime.now', 'java.time.LocalTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
13,compare (.*) with (.*),"['xml', 'data']","['file', 'extensions']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
0,set (.*) of (.*),"['all', 'values']","['an', 'array']",['java.util.Arrays.fill']
1,set (.*) of (.*),['size'],['jbutton'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
2,set (.*) of (.*),"['max', 'size']","['a', 'collection']",['java.util.Arrays.asList']
3,set (.*) of (.*),['position'],['jbutton'],['javax.imageio.ImageIO.read']
4,set (.*) of (.*),"['row', 'size']",['jtable'],['java.awt.EventQueue.invokeLater']
5,set (.*) of (.*),['size'],"['jcombobox', 'popupmenu']",['javax.swing.SwingUtilities.windowForComponent']
6,set (.*) of (.*),['end'],"['line', 'row']",['java.lang.System.getProperty']
7,set (.*) of (.*),"['the', 'location']","['a', 'joptionpane']",['javax.swing.SwingUtilities.invokeLater']
8,set (.*) of (.*),['equivalent'],['weakhashmap'],['java.util.Collections.newSetFromMap']
9,set (.*) of (.*),"['maximum', 'size']",['jframe'],"['java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment', 'java.lang.Math.min']"
10,set (.*) of (.*),['name'],"['a', 'thread']",['java.lang.Thread.sleep']
11,set (.*) of (.*),"['first', 'element']","['a', 'list']","['java.util.Arrays.asList', 'java.util.Collections.swap', 'java.util.Collections.rotate']"
12,set (.*) of (.*),['width'],['column'],['javax.swing.JTable.tableChanged']
13,set (.*) of (.*),['size'],"['decorated', 'jframe']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
14,set (.*) of (.*),['size'],"['a', 'vector']",['java.util.Arrays.asList']
15,set (.*) of (.*),['accuracy'],"['random', 'numbers']","['java.util.Random.nextInt', 'java.lang.String.format']"
16,set (.*) of (.*),"['css', 'style']",['jeditorpane'],"['javax.swing.text.StyleConstants.setBold', 'javax.swing.text.StyleConstants.setFontSize', 'javax.swing.text.StyleConstants.setFontFamily']"
17,set (.*) of (.*),['text'],"['a', 'shape']",['java.lang.System.exit']
18,set (.*) of (.*),['hour'],['day'],"['java.time.ZoneId.of', 'java.util.Date.toString', 'java.time.Instant.ofEpochMilli']"
19,set (.*) of (.*),"['the', 'insets']","['a', 'jviewport']",['javax.swing.SwingUtilities.invokeLater']
20,set (.*) of (.*),"['the', 'size']","['this', 'gui']",['javax.swing.SwingUtilities.invokeLater']
21,set (.*) of (.*),['transparency'],['icon'],['javax.swing.JOptionPane.showMessageDialog']
22,set (.*) of (.*),['period'],['time'],"['java.util.Arrays.asList', 'java.util.concurrent.Executors.newCachedThreadPool']"
23,set (.*) of (.*),['period'],['time'],"['java.lang.System.nanoTime', 'java.lang.System.currentTimeMillis']"
0,cast (.*) to (.*),"['an', 'object']","['an', 'int']",['java.lang.Integer.valueOf']
1,cast (.*) to (.*),['integer'],['string'],"['java.lang.Integer.toString', 'java.lang.String.valueOf']"
2,cast (.*) to (.*),['object'],['array'],"['java.lang.reflect.Array.get', 'java.lang.reflect.Array.getLength']"
3,cast (.*) to (.*),"['a', 'long']","['an', 'int']",['java.lang.Long.intValue']
4,cast (.*) to (.*),['object'],['comparable'],['java.lang.reflect.Array.newInstance']
5,cast (.*) to (.*),"['from', 'inputstream']",['audioinputstream'],"['javax.sound.sampled.AudioSystem.getAudioInputStream', 'javax.sound.sampled.AudioSystem.getClip', 'java.lang.Class.getResourceAsStream', 'java.lang.ClassLoader.getResource']"
6,cast (.*) to (.*),['arraylist'],['copyonwritearraylist'],['java.util.Iterator.remove']
7,cast (.*) to (.*),['object'],['comparable'],['java.lang.reflect.Array.newInstance']
8,cast (.*) to (.*),"['from', 'object']",['list'],['java.util.Objects.requireNonNull']
9,cast (.*) to (.*),"['string', 'arraylist']","['double', 'arraylist']",['java.lang.Double.parseDouble']
10,cast (.*) to (.*),['object'],"['specific', 'array']",['java.lang.reflect.Array.get']
11,cast (.*) to (.*),"['from', 'object']",['t'],['java.util.Arrays.copyOf']
12,cast (.*) to (.*),['string'],"['material', 'java']","['java.lang.Integer.parseInt', 'java.lang.Byte.parseByte']"
13,cast (.*) to (.*),['object'],['stringbuilder'],['java.util.ArrayList.toArray']
14,cast (.*) to (.*),['object'],['myclass'],['java.nio.file.Paths.get']
15,cast (.*) to (.*),"['an', 'object']","['an', 'array']",['java.lang.reflect.Array.get']
16,cast (.*) to (.*),['object'],['double'],['java.util.Arrays.copyOf']
17,cast (.*) to (.*),"['without', 'assignment']","['another', 'object']",['java.lang.Class.forName']
18,cast (.*) to (.*),"['from', 'double']",['long'],['java.lang.Math.pow']
19,cast (.*) to (.*),['int'],['ints'],['java.lang.Integer.valueOf']
20,cast (.*) to (.*),"['a', 'variable']",['degrees'],"['java.lang.Math.toDegrees', 'java.lang.Math.tan']"
21,cast (.*) to (.*),"['certain', 'elements']",['int'],['java.lang.Integer.parseInt']
22,cast (.*) to (.*),"['a', 'float']","['an', 'integer']","['java.lang.Float.floatToRawIntBits', 'java.lang.Float.floatToIntBits']"
23,cast (.*) to (.*),"['it', 'back']","['fragment', 'type']",['java.lang.Class.forName']
24,cast (.*) to (.*),['int'],['byte'],['org.omg.CORBA.portable.OutputStream.write']
0,generate (.*) in (.*),"['random', 'number']","['d', 'array']","['java.lang.Math.floor', 'java.lang.Math.random']"
1,generate (.*) in (.*),"['jssecacerts', 'file']",['java'],['java.lang.System.setProperty']
2,generate (.*) in (.*),"['key', 'pair']","['asymmetric', 'encryption']",['java.security.KeyPairGenerator.getInstance']
3,generate (.*) in (.*),['character'],"['a', 'string']",['java.lang.Character.toString']
4,generate (.*) in (.*),['nuuid'],['mongodb'],['java.lang.Math.floor']
5,generate (.*) in (.*),"['random', 'polygons']","['desired', 'locations']","['java.lang.Math.sin', 'java.lang.Math.cos']"
6,generate (.*) in (.*),"['specific', 'color']",['javascript'],['java.lang.Math.floor']
7,generate (.*) in (.*),['uuid'],['mapreduce'],"['java.util.UUID.toString', 'java.util.UUID.randomUUID']"
8,generate (.*) in (.*),"['xls', 'report']","['spring', 'mvc']",['java.net.URLConnection.guessContentTypeFromName']
9,generate (.*) in (.*),['combinations'],['java'],"['java.util.Arrays.asList', 'java.util.stream.Stream.of']"
10,generate (.*) in (.*),['number'],"['ascending', 'form']","['java.util.Collections.max', 'java.util.Collections.min', 'java.util.Arrays.asList', 'java.util.stream.IntStream.range']"
11,generate (.*) in (.*),"['custom', 'stream']",['pipeline'],"['java.util.stream.IntStream.range', 'java.util.stream.StreamSupport.stream']"
12,generate (.*) in (.*),['operation'],['sequence'],['java.util.Arrays.asList']
13,generate (.*) in (.*),"['time', 'value']","['config', 'key']","['java.lang.System.currentTimeMillis', 'java.time.Instant.now']"
14,generate (.*) in (.*),['gui'],"['second', 'class']",['java.awt.EventQueue.invokeLater']
0,execute (.*) from (.*),"['shell', 'command']",['android'],['java.lang.Runtime.getRuntime']
1,execute (.*) from (.*),"['python', 'script']",['java'],['java.lang.Runtime.getRuntime']
2,execute (.*) from (.*),"['autoit', 'code']",['eclipse'],['java.lang.System.setProperty']
3,execute (.*) from (.*),"['sh', 'file']",['java'],['java.lang.Runtime.getRuntime']
4,execute (.*) from (.*),"['external', 'program']",['java'],"['java.lang.Runtime.exec', 'java.lang.Runtime.getRuntime']"
5,execute (.*) from (.*),"['java', 'code']","['batch', 'script']","['java.lang.Integer.parseInt', 'java.lang.System.exit']"
6,execute (.*) from (.*),['code'],"['a', 'string']","['java.awt.event.KeyEvent.getExtendedKeyCodeForChar', 'java.io.File.createTempFile', 'java.lang.Thread.sleep', 'java.awt.Desktop.getDesktop']"
7,execute (.*) from (.*),['php'],"['java', 'program']",['java.lang.Runtime.exec']
8,execute (.*) from (.*),"['r', 'script']","['java', 'program']",['java.io.File.createTempFile']
9,execute (.*) from (.*),['commands'],['it'],['java.lang.Runtime.getRuntime']
10,execute (.*) from (.*),"['julia', 'scripts']",['java'],['java.lang.Runtime.getRuntime']
11,execute (.*) from (.*),"['ocaml', 'code']","['scala', 'java']",['java.lang.Runtime.exec']
0,set (.*) with (.*),"['an', 'accelerators']",['keys'],"['javax.swing.JOptionPane.showMessageDialog', 'javax.swing.KeyStroke.getKeyStroke']"
1,set (.*) with (.*),"['a', 'calendar']",['timezone'],['java.util.TimeZone.getAvailableIDs']
2,set (.*) with (.*),['browsermob'],['webdriver'],['java.lang.System.setProperty']
3,set (.*) with (.*),"['array', 'element']",['reflection'],['java.lang.reflect.Array.getInt']
4,set (.*) with (.*),['margin'],"['dp', 'programmatically']",['java.lang.Math.round']
5,set (.*) with (.*),"['target', 'activity']",['variable'],['java.lang.Class.forName']
6,set (.*) with (.*),['adapter'],['getactivity'],['java.lang.String.valueOf']
7,set (.*) with (.*),['validation'],"['regular', 'expression']",['java.util.regex.Pattern.compile']
8,set (.*) with (.*),['time'],"['only', 'minutes']","['java.time.LocalTime.of', 'java.time.format.DateTimeFormatter.ofPattern']"
9,set (.*) with (.*),"['an', 'accelerator']","['only', 'key']",['javax.swing.KeyStroke.getKeyStroke']
10,set (.*) with (.*),"['text', 'work']",['int'],['java.lang.String.valueOf']
11,set (.*) with (.*),"['of', 'properties']","['certain', 'values']",['java.util.Arrays.asList']
12,set (.*) with (.*),"['of', 'classes']","['parameterized', 'constructors']",['java.lang.Class.forName']
13,set (.*) with (.*),"['custom', 'claims']",['firebaseuser'],['java.lang.Boolean.parseBoolean']
0,read (.*) in (.*),"['properties', 'file']","['web', 'application']",['java.lang.Thread.currentThread']
1,read (.*) in (.*),['json'],"['generic', 'list']",['java.lang.Class.forName']
2,read (.*) in (.*),"['from', 'system']",[],['java.lang.Integer.parseInt']
3,read (.*) in (.*),"['binary', 'files']",['android'],"['java.util.Arrays.asList', 'java.util.logging.Logger.getLogger']"
4,read (.*) in (.*),"['xml', 'file']","['web', 'service']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
5,read (.*) in (.*),"['files', 'recursively']",['java'],"['java.nio.file.FileSystems.getDefault', 'java.nio.file.Paths.get', 'java.nio.file.Files.walkFileTree', 'java.lang.System.exit']"
6,read (.*) in (.*),['strings'],"['j', 'me']","['java.io.DataOutputStream.writeUTF', 'java.io.DataInputStream.readUTF']"
7,read (.*) in (.*),"['only', 'property']",['method'],['java.util.concurrent.ThreadLocalRandom.current']
8,read (.*) in (.*),"['xml', 'file']","['the', 'java']","['java.lang.Integer.parseInt', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
9,read (.*) in (.*),['file'],"['java', 'spark']",['java.lang.System.setProperty']
10,read (.*) in (.*),"['properties', 'file']",['jsp'],['java.lang.Class.getResourceAsStream']
11,read (.*) in (.*),"['whole', 'file']","['a', 'folder']",['java.io.File.listFiles']
12,read (.*) in (.*),['returns'],"['blocking', 'mode']",['java.nio.channels.SocketChannel.read']
13,read (.*) in (.*),['image'],['jar'],['javax.imageio.ImageIO.read']
14,read (.*) in (.*),"['write', 'files']","['project', 'folder']",['java.lang.System.getenv']
15,read (.*) in (.*),"['files', 'asynchronously']","['spring', 'boot']",['java.util.concurrent.Executors.newFixedThreadPool']
16,read (.*) in (.*),['files'],"['a', 'task']",['java.lang.Thread.sleep']
17,read (.*) in (.*),['passed'],"['short', 'value']",['java.io.DataInputStream.readShort']
18,read (.*) in (.*),"['the', 'int']",['text'],['java.lang.Integer.parseInt']
19,read (.*) in (.*),['numbers'],"['a', 'string']",['java.util.regex.Pattern.compile']
20,read (.*) in (.*),"['a', 'file']",['java'],['java.io.BufferedReader.readLine']
21,read (.*) in (.*),"['all', 'files']","['directory', 'iteratively']","['java.nio.file.Paths.get', 'java.nio.file.Files.newDirectoryStream']"
22,read (.*) in (.*),"['the', 'file']","['one', 'go']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.lang.Thread.sleep', 'java.lang.String.valueOf', 'java.util.Objects.requireNonNull']"
23,read (.*) in (.*),"['environment', 'variable']","['cloud', 'foundry']","['java.lang.System.getenv', 'java.util.logging.Logger.getLogger']"
24,read (.*) in (.*),"['two', 'standard']","['reverse', 'order']",['java.util.Scanner.nextInt']
25,read (.*) in (.*),"['specific', 'colum']",['jtable'],['java.lang.Double.parseDouble']
0,replace (.*) in (.*),"['words', 'lines']","['a', 'file']","['java.nio.file.Paths.get', 'java.nio.file.Files.write']"
1,replace (.*) in (.*),['groups'],"['java', 'regex']",['java.util.regex.Pattern.compile']
2,replace (.*) in (.*),"['specific', 'string']",['textfile'],"['java.lang.String.replaceAll', 'java.lang.String.indexOf']"
3,replace (.*) in (.*),['brackets'],['strings'],['java.util.regex.Pattern.quote']
4,replace (.*) in (.*),"['many', 'characters']","['a', 'string']",['java.lang.Character.toString']
5,replace (.*) in (.*),['value'],"['json', 'file']",['java.lang.Long.valueOf']
6,replace (.*) in (.*),"['a', 'content']","['a', 'file']",['java.lang.String.replace']
7,replace (.*) in (.*),"['unicode', 'characters']","['a', 'string']",['java.util.regex.Pattern.compile']
8,replace (.*) in (.*),['emails'],['string'],['java.util.regex.Pattern.compile']
9,replace (.*) in (.*),"['xml', 'tag']",['xmldocument'],['javax.xml.xpath.XPathFactory.newInstance']
10,replace (.*) in (.*),['strings'],"['a', 'text']",['java.util.regex.Pattern.compile']
11,replace (.*) in (.*),['pattern'],"['sql', 'comments']",['java.util.regex.Pattern.compile']
12,replace (.*) in (.*),['newline'],['stringbuilder'],"['java.util.regex.Matcher.replaceAll', 'java.util.regex.Pattern.compile']"
13,replace (.*) in (.*),['templates'],"['html', 'files']",['java.text.MessageFormat.format']
14,replace (.*) in (.*),"['all', 'key']",['string'],['java.util.regex.Pattern.compile']
15,replace (.*) in (.*),"['null', 'values']",['xml'],['java.lang.String.valueOf']
16,replace (.*) in (.*),"['hex', 'values']","['a', 'string']","['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
17,replace (.*) in (.*),"['a', 'letter']","['a', 'string']",['java.lang.String.valueOf']
18,replace (.*) in (.*),['mapmaker'],"['my', 'case']",['java.util.jar.Attributes.equals']
19,replace (.*) in (.*),['value'],"['extracted', 'lines']",['java.util.regex.Pattern.compile']
20,replace (.*) in (.*),['symbols'],['string'],"['java.lang.Math.pow', 'java.util.regex.Pattern.compile']"
21,replace (.*) in (.*),['comma'],['multiautocompletetextview'],['java.lang.String.replace']
22,replace (.*) in (.*),"['multiple', 'substring']","['a', 'string']",['java.util.regex.Pattern.compile']
23,replace (.*) in (.*),['entry'],"['string', 'array']","['java.lang.Integer.toString', 'java.lang.String.valueOf']"
24,replace (.*) in (.*),['text'],"['a', 'string']",['java.util.regex.Pattern.compile']
25,replace (.*) in (.*),"['a', 'variable']","['a', 'string']",['java.text.MessageFormat.format']
26,replace (.*) in (.*),['data'],['string'],['java.lang.String.replaceAll']
27,replace (.*) in (.*),"['values', 'interchangebly']","['a', 'string']","['java.text.MessageFormat.format', 'java.lang.StringBuilder.toString']"
28,replace (.*) in (.*),"['unicode', 'characters']","['a', 'string']",['java.text.Normalizer.normalize']
0,save (.*) to (.*),"['text', 'area']",['file'],['javax.swing.text.JTextComponent.write']
1,save (.*) to (.*),"['multiline', 'string']","['text', 'file']",['java.lang.System.getProperty']
2,save (.*) to (.*),['imageview'],"['sdcard', 'android']",['java.lang.System.currentTimeMillis']
3,save (.*) to (.*),['it'],"['some', 'keystore']","['java.security.Security.addProvider', 'java.security.KeyStore.getInstance', 'java.security.KeyPairGenerator.getInstance']"
4,save (.*) to (.*),['byte'],"['tiff', 'file']",['java.awt.Graphics.drawBytes']
5,save (.*) to (.*),"['console', 'output']",['file'],['java.lang.System.setOut']
6,save (.*) to (.*),['it'],"['android', 'database']",['java.lang.Math.random']
7,save (.*) to (.*),['data'],"['the', 'file']","['java.util.Arrays.asList', 'java.util.Collections.shuffle', 'java.awt.EventQueue.invokeLater']"
8,save (.*) to (.*),['it'],['disk'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
9,save (.*) to (.*),"['resources', 'folder']","['disk', 'folder']",['java.nio.file.Files.copy']
10,save (.*) to (.*),['each'],['database'],"['javax.swing.JOptionPane.showConfirmDialog', 'javax.swing.JOptionPane.showMessageDialog']"
11,save (.*) to (.*),"['mat', 'opencv']","['sharedpreferences', 'android']","['java.nio.ByteBuffer.allocate', 'java.nio.ByteBuffer.wrap']"
12,save (.*) to (.*),"['xml', 'data']",['csv'],"['javax.xml.parsers.DocumentBuilderFactory.newInstance', 'java.lang.String.format']"
13,save (.*) to (.*),"['output', 'stream']","['a', 'file']",['java.lang.Runtime.getRuntime']
14,save (.*) to (.*),['it'],['string'],['java.lang.Runtime.getRuntime']
15,save (.*) to (.*),"['bufferedimage', 'object']",['file'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
16,save (.*) to (.*),['it'],"['a', 'variable']",['java.lang.Runtime.getRuntime']
17,save (.*) to (.*),['it'],"['the', 'database']",['java.lang.Class.forName']
18,save (.*) to (.*),['it'],"['another', 'file']",['java.util.regex.Pattern.compile']
0,create (.*) on (.*),['menu'],"['button', 'click']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
1,create (.*) on (.*),"['shadow', 'effect']",['image'],"['java.lang.Math.round', 'javax.imageio.ImageIO.read', 'java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment', 'java.util.logging.Logger.getLogger', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
2,create (.*) on (.*),"['xml', 'based']",['xsd'],['javax.xml.bind.JAXBContext.newInstance']
3,create (.*) on (.*),"['activemq', 'connection']",['tls'],"['java.lang.System.setProperty', 'javax.net.ssl.SSLContext.getInstance', 'javax.net.ssl.KeyManagerFactory.getInstance', 'java.security.KeyStore.getInstance']"
4,create (.*) on (.*),"['xsd', 'based']","['root', 'element']",['javax.xml.transform.TransformerFactory.newInstance']
5,create (.*) on (.*),"['different', 'jlabels']","['button', 'click']",['javax.swing.SwingUtilities.invokeLater']
0,return (.*) in (.*),['logic'],['java'],['java.util.Optional.ofNullable']
1,return (.*) in (.*),['value'],['android'],['java.lang.Character.toString']
2,return (.*) in (.*),['result'],['java'],['java.util.stream.Stream.concat']
3,return (.*) in (.*),['array'],['method'],['java.util.Arrays.copyOf']
4,return (.*) in (.*),"['a', 'value']","['a', 'class']","['java.lang.Thread.sleep', 'java.util.concurrent.Executors.newCachedThreadPool']"
5,return (.*) in (.*),"['an', 'image']","['jersey', 'response']","['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
6,return (.*) in (.*),['names'],"['alphabetical', 'order']",['java.lang.String.compareTo']
7,return (.*) in (.*),['code'],"['multithreaded', 'program']","['java.lang.Thread.join', 'java.lang.System.exit']"
8,return (.*) in (.*),['code'],"['shutdown', 'hook']","['java.lang.Runtime.getRuntime', 'java.lang.System.exit']"
9,return (.*) in (.*),"['a', 'resultset']","['dao', 'layer']",['java.sql.Statement.execute']
10,return (.*) in (.*),['order'],['es'],['java.lang.Math.random']
11,return (.*) in (.*),"['all', 'int']","['new', 'array']",['java.lang.System.arraycopy']
12,return (.*) in (.*),"['statement', 'error']","['a', 'method']","['java.net.InetAddress.getLocalHost', 'java.net.NetworkInterface.getByInetAddress']"
13,return (.*) in (.*),['date'],['utc'],"['java.time.OffsetDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
14,return (.*) in (.*),['type'],['eclipse'],['java.util.Arrays.asList']
15,return (.*) in (.*),['value'],['jsp'],"['java.lang.Integer.toString', 'java.lang.Integer.parseInt']"
16,return (.*) in (.*),"['all', 'integers']",['string'],['java.util.regex.Pattern.compile']
17,return (.*) in (.*),"['dimensional', 'array']",['java'],['java.util.stream.IntStream.range']
18,return (.*) in (.*),"['a', 'file']","['restexpress', 'response']","['java.nio.file.Paths.get', 'java.nio.file.Files.readAllBytes']"
19,return (.*) in (.*),"['combined', 'response']","['minimum', 'time']",['java.util.concurrent.Executors.newFixedThreadPool']
20,return (.*) in (.*),"['wrong', 'value']",['android'],['java.nio.ByteBuffer.allocate']
21,return (.*) in (.*),"['its', 'position']","['the', 'array']",['java.util.Arrays.sort']
22,return (.*) in (.*),"['longest', 'word']","['a', 'string']",['java.util.Arrays.sort']
23,return (.*) in (.*),['deferredresult'],['parallel'],['java.util.concurrent.CompletableFuture.supplyAsync']
24,return (.*) in (.*),['duration'],"['format', 'iso']","['java.lang.Math.abs', 'java.lang.String.format', 'java.time.Duration.ofMinutes']"
25,return (.*) in (.*),['true'],"['second', 'case']",['java.util.Arrays.asList']
26,return (.*) in (.*),"['multiple', 'numbers']","['one', 'integer']",['java.lang.Integer.parseInt']
27,return (.*) in (.*),['leading'],"['tostring', 'method']",['java.lang.String.format']
28,return (.*) in (.*),"['error', 'format']",['responseentity'],['java.util.Base64.getDecoder']
29,return (.*) in (.*),"['the', 'value']",['tostring'],['java.lang.String.format']
0,display (.*) with (.*),['table'],"['d', 'array']",['java.lang.Integer.parseInt']
1,display (.*) with (.*),"['received', 'messages']","['smack', 'api']",['javax.swing.SwingUtilities.invokeAndWait']
2,display (.*) with (.*),['jtable'],['javafx'],['java.awt.EventQueue.invokeLater']
3,display (.*) with (.*),['problems'],['pdfbox'],['java.util.Arrays.asList']
4,display (.*) with (.*),['content'],"['fixed', 'length']",['java.util.regex.Pattern.compile']
5,display (.*) with (.*),"['in', 'bluej']",['gui'],"['java.lang.Thread.sleep', 'javax.swing.SwingUtilities.invokeLater', 'java.lang.System.exit', 'javax.swing.JOptionPane.showMessageDialog', 'java.awt.Toolkit.getDefaultToolkit']"
6,display (.*) with (.*),['text'],"['line', 'breaks']",['javax.swing.SwingUtilities.invokeLater']
7,display (.*) with (.*),['tab'],['spaces'],['java.util.regex.Pattern.compile']
8,display (.*) with (.*),['photo'],['description'],['java.awt.Toolkit.getDefaultToolkit']
9,display (.*) with (.*),"['xml', 'content']",['java'],['java.lang.System.getProperty']
10,display (.*) with (.*),"['multiple', 'messagedialog']",['joptionpane'],['javax.swing.JOptionPane.showMessageDialog']
11,display (.*) with (.*),"['accommodated', 'array']",['joptionpane'],['javax.swing.JOptionPane.showMessageDialog']
12,display (.*) with (.*),"['multiple', 'jpanels']","['multiple', 'layouts']",['javax.swing.SwingUtilities.invokeLater']
13,display (.*) with (.*),"['text', 'looping']","['different', 'date']",['java.util.regex.Pattern.compile']
14,display (.*) with (.*),['troubles'],['canvas'],"['java.lang.Thread.sleep', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
15,display (.*) with (.*),"['special', 'characters']","['pipe', 'dilemeter']",['java.util.regex.Pattern.compile']
0,open (.*) with (.*),"['windows', 'process']",['java'],['java.lang.Runtime.getRuntime']
1,open (.*) with (.*),"['connection', 'error']","['h', 'database']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
2,open (.*) with (.*),['joptionpane'],['jbutton'],"['javax.swing.JOptionPane.showInputDialog', 'javax.swing.JOptionPane.showMessageDialog']"
3,open (.*) with (.*),"['cursors', 'exceeded']","['hibernate', 'schemavalidator']",['java.sql.DatabaseMetaData.getTableTypes']
4,open (.*) with (.*),"['websocket', 'connection']","['authentication', 'cookie']",['javax.net.ssl.SSLContext.getInstance']
5,open (.*) with (.*),['url'],"['parameters', 'android']",['java.net.URLEncoder.encode']
6,open (.*) with (.*),"['pdf', 'files']","['different', 'paths']","['java.lang.Runtime.getRuntime', 'java.awt.Desktop.getDesktop']"
7,open (.*) with (.*),['file'],['wordpad'],['java.awt.Desktop.getDesktop']
8,open (.*) with (.*),['file'],"['relative', 'path']",['java.awt.Toolkit.getDefaultToolkit']
9,open (.*) with (.*),['datepicker'],"['suggested', 'date']",['java.util.Calendar.getInstance']
0,read (.*) using (.*),['xml'],['xpath'],"['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
1,read (.*) using (.*),"['xml', 'string']",['stax'],['javax.xml.stream.XMLInputFactory.newInstance']
2,read (.*) using (.*),"['a', 'file']",['jcifs'],['javax.swing.JOptionPane.showMessageDialog']
3,read (.*) using (.*),['file'],['getresourceasstream'],"['java.lang.Thread.currentThread', 'java.lang.ClassLoader.getResourceAsStream', 'java.lang.Class.getResourceAsStream']"
4,read (.*) using (.*),"['from', 'db']","['java', 'netbeans']",['java.sql.DriverManager.getConnection']
5,read (.*) using (.*),['operation'],"['bufferedreader', 'java']",['java.io.BufferedReader.readLine']
6,read (.*) using (.*),"['xml', 'response']",['java'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
7,read (.*) using (.*),"['youtube', 'comments']",['selenium'],['java.lang.Thread.sleep']
8,read (.*) using (.*),"['xml', 'file']",['jaxb'],"['javax.xml.bind.JAXBContext.newInstance', 'java.lang.System.exit']"
9,read (.*) using (.*),"['a', 'file']",['url'],['java.net.URL.toURI']
10,read (.*) using (.*),"['a', 'barcode']","['apache', 'camel']",['javax.imageio.ImageIO.read']
11,read (.*) using (.*),"['multiple', 'files']","['thread', 'pool']",['java.util.concurrent.Executors.newFixedThreadPool']
12,read (.*) using (.*),"['indefinately', 'doubles']","['this', 'loop']",['java.lang.Double.parseDouble']
13,read (.*) using (.*),"['csv', 'input']","['named', 'groups']",['java.util.regex.Pattern.compile']
14,read (.*) using (.*),"['file', 'attributes']",['randomaccessfile'],['java.lang.Class.forName']
0,generate (.*) with (.*),"['random', 'numbers']","['no', 'repeat']",['java.util.Collections.shuffle']
1,generate (.*) with (.*),"['logging', 'annotation']","['wsdl', 'java']",['java.util.regex.Pattern.compile']
2,generate (.*) with (.*),['date'],['range'],['java.util.Calendar.getInstance']
3,generate (.*) with (.*),"['sine', 'tone']","['sweep', 'android']",['java.lang.Math.sin']
4,generate (.*) with (.*),"['random', 'strings']","['specified', 'characters']",['java.util.Arrays.fill']
5,generate (.*) with (.*),['string'],"['zero', 's']",['java.util.Arrays.fill']
6,generate (.*) with (.*),['array'],"['random', 'numbers']",['java.util.Collections.shuffle']
0,create (.*) of (.*),"['an', 'arraylist']","['unique', 'values']",['java.util.Set.toArray']
1,create (.*) of (.*),['array'],"['regex', 'matches']","['java.util.regex.Pattern.compile', 'java.util.regex.Matcher.toMatchResult']"
2,create (.*) of (.*),"['an', 'arraylist']",['classes'],['java.lang.Class.forName']
3,create (.*) of (.*),"['a', 'stream']","['regex', 'matches']",['java.util.regex.Pattern.compile']
4,create (.*) of (.*),"['an', 'object']","['an', 'interface']",['java.util.Collections.shuffle']
5,create (.*) of (.*),"['a', 'table']",['jtables'],"['java.lang.Integer.toString', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
6,create (.*) of (.*),"['a', 'list']","['method', 'references']",['java.util.Arrays.asList']
7,create (.*) of (.*),['instances'],"['all', 'subclasses']",['java.lang.Class.forName']
8,create (.*) of (.*),"['random', 'values']","['generic', 'type']",['java.util.stream.Stream.generate']
9,create (.*) of (.*),"['the', 'object']","['console', 'class']",['java.lang.System.console']
10,create (.*) of (.*),"['a', 'class']","['primitive', 'array']","['java.lang.Class.forName', 'java.lang.Class.getName']"
11,create (.*) of (.*),"['the', 'hash']","['a', 'webpage']",['java.security.MessageDigest.getInstance']
12,create (.*) of (.*),['instance'],['itself'],['java.lang.Class.forName']
13,create (.*) of (.*),['enumeration'],['objects'],['java.util.Collections.enumeration']
14,create (.*) of (.*),"['a', 'list']",['fractions'],"['java.lang.Math.abs', 'java.util.Collections.sort']"
15,create (.*) of (.*),['folder'],"['method', 'call']","['java.io.File.mkdir', 'java.lang.Comparable.compareTo']"
16,create (.*) of (.*),"['random', 'bytes']","['fixed', 'length']","['java.lang.Long.toBinaryString', 'java.lang.Integer.toBinaryString']"
17,create (.*) of (.*),"['a', 'stream']",['functions'],['java.util.stream.Stream.of']
18,create (.*) of (.*),"['multiple', 'sets']","['random', 'numbers']",['java.util.Collections.shuffle']
19,create (.*) of (.*),['instance'],"['abstract', 'class']",['java.util.Collections.unmodifiableCollection']
20,create (.*) of (.*),"['a', 'screenshot']","['a', 'jframe']","['java.io.File.createTempFile', 'javax.imageio.ImageIO.write']"
21,create (.*) of (.*),['regex'],['string'],['java.util.Arrays.stream']
22,create (.*) of (.*),"['a', 'string']","['an', 'array']",['java.lang.String.valueOf']
23,create (.*) of (.*),"['digital', 'hash']","['string', 'java']",['javax.crypto.Mac.getInstance']
24,create (.*) of (.*),"['n', 'nodes']","['different', 'references']",['java.util.Arrays.asList']
25,create (.*) of (.*),['array'],"['predefined', 'colors']",['java.util.Arrays.stream']
26,create (.*) of (.*),"['x', 'number']",['dates'],"['java.time.format.DateTimeFormatter.ofPattern', 'java.time.YearMonth.parse']"
0,parse (.*) using (.*),"['nmea', 'data']","['pattern', 'matcher']",['java.util.regex.Pattern.compile']
1,parse (.*) using (.*),['line'],"['regular', 'expressions']",['java.util.regex.Pattern.compile']
2,parse (.*) using (.*),"['a', 'line']",['java'],['java.lang.String.split']
3,parse (.*) using (.*),"['xml', 'file']",['sax'],['javax.xml.parsers.SAXParserFactory.newInstance']
4,parse (.*) using (.*),"['xml', 'response']",['sax'],"['java.util.logging.Logger.getLogger', 'org.xml.sax.helpers.XMLReaderFactory.createXMLReader']"
5,parse (.*) using (.*),['xml'],['jaxb'],['java.lang.Long.valueOf']
6,parse (.*) using (.*),['xml'],"['dom', 'java']",['javax.xml.xpath.XPathFactory.newInstance']
7,parse (.*) using (.*),['xml'],['jaxb'],['javax.xml.bind.JAXBContext.newInstance']
8,parse (.*) using (.*),['string'],['regex'],['java.util.regex.Pattern.compile']
9,parse (.*) using (.*),['date'],['localdatetime'],['java.time.LocalDateTime.of']
10,parse (.*) using (.*),['file'],['jdbc'],['java.nio.file.Files.readAllLines']
0,generate (.*) using (.*),"['soap', 'request']",['camel'],"['java.lang.Thread.sleep', 'javax.xml.soap.MessageFactory.newInstance']"
1,generate (.*) using (.*),"['xsd', 'file']","['java', 'code']",['javax.xml.bind.JAXBContext.newInstance']
2,generate (.*) using (.*),"['unique', 'string']",['jsp'],['java.util.UUID.randomUUID']
3,generate (.*) using (.*),['primes'],"['k', 'rule']",['java.util.concurrent.Executors.newSingleThreadExecutor']
4,generate (.*) using (.*),"['secret', 'key']","['securerandom', 'getinstancestrong']","['java.security.SecureRandom.getInstanceStrong', 'javax.crypto.KeyGenerator.getInstance']"
5,generate (.*) using (.*),"['html', 'table']","['rendersnake', 'library']",['java.nio.file.Files.write']
6,generate (.*) using (.*),"['random', 'numbers']",['securerandom'],['java.lang.Math.random']
7,generate (.*) using (.*),"['parameter', 'placeholder']","['spring', 'spel']",['java.text.MessageFormat.format']
8,generate (.*) using (.*),['object'],['futures'],"['java.util.concurrent.CompletableFuture.runAsync', 'java.util.concurrent.CompletableFuture.supplyAsync', 'java.util.concurrent.CompletableFuture.get']"
9,generate (.*) using (.*),"['a', 'map']",['streams'],['java.util.stream.Stream.of']
0,load (.*) in (.*),['times'],['selenium'],['java.lang.Thread.sleep']
1,load (.*) in (.*),"['native', 'libraries']","['aws', 'lambda']","['java.lang.System.setProperty', 'java.lang.System.loadLibrary']"
2,load (.*) in (.*),['so'],"['jni', 'project']",['java.lang.System.loadLibrary']
3,load (.*) in (.*),[],['grid'],['java.lang.Integer.toString']
4,load (.*) in (.*),['generics'],['listmodel'],['java.util.Arrays.asList']
5,load (.*) in (.*),"['text', 'file']","['string', 'array']",['java.nio.file.Files.readAllLines']
6,load (.*) in (.*),['image'],['jsp'],['java.nio.file.Files.copy']
0,log (.*) with (.*),['j'],"['multiple', 'classes']",['java.util.logging.Logger.getLogger']
1,log (.*) with (.*),['j'],"['junit', 'tests']",['java.util.logging.Logger.getLogger']
2,log (.*) with (.*),"['j', 'problem']",['timezone'],['java.util.TimeZone.getDefault']
3,log (.*) with (.*),['j'],['testng'],"['java.lang.System.setProperty', 'java.util.logging.Logger.getLogger']"
4,log (.*) with (.*),['j'],"['json', 'config']",['java.util.logging.LogManager.getLogger']
5,log (.*) with (.*),['digester'],"['apache', 'commons']",['java.util.logging.Logger.getLogger']
6,log (.*) with (.*),"['j', 'logging']","['abstract', 'classes']",['java.util.logging.LogManager.getLogger']
7,log (.*) with (.*),['j'],"['swig', 'jni']","['java.lang.System.loadLibrary', 'java.util.logging.LogManager.getLogger']"
8,log (.*) with (.*),"['j', 'files']","['different', 'info']",['java.util.logging.Logger.getLogger']
9,log (.*) with (.*),['level'],"['string', 'value']",['java.util.logging.Level.parse']
10,log (.*) with (.*),['file'],"['string', 'character']","['java.util.Arrays.asList', 'java.util.regex.Pattern.compile']"
0,log (.*) in (.*),['base'],"['a', 'formula']","['java.lang.Math.log10', 'java.lang.Math.log']"
1,log (.*) in (.*),['j'],['android'],['java.util.logging.Logger.getLogger']
2,log (.*) in (.*),['function'],"['android', 'studio']",['java.lang.Math.sin']
3,log (.*) in (.*),"['file', 'warning']",['selenium'],['java.lang.System.setProperty']
4,log (.*) in (.*),['files'],"['spring', 'boot']",['java.util.logging.Logger.getLogger']
5,log (.*) in (.*),"['json', 'responses']","['dropwizard', 'jersey']",['java.util.logging.Logger.getLogger']
6,log (.*) in (.*),"['filtered', 'values']","['java', 'streams']","['java.util.Arrays.asList', 'java.util.Objects.requireNonNull']"
7,log (.*) in (.*),['j'],['tomcat'],['java.util.logging.LogManager.getLogger']
8,log (.*) in (.*),['exceptions'],['requests'],['java.util.Collections.singletonMap']
9,log (.*) in (.*),['j'],"['jboss', 'webservice']","['java.util.logging.Logger.getLogger', 'java.util.Calendar.getInstance']"
10,log (.*) in (.*),['j'],"['a', 'jtextpane']",['javax.swing.SwingUtilities.invokeLater']
11,log (.*) in (.*),"['j', 'exception']",['category'],['java.util.logging.Logger.getLogger']
12,log (.*) in (.*),['j'],"['static', 'method']",['java.util.logging.LogManager.getLogger']
13,log (.*) in (.*),"['to', 'file']","['ofbiz', 'framework']",['java.util.logging.Logger.getLogger']
14,log (.*) in (.*),['broadcast'],['android'],['java.lang.Runtime.getRuntime']
15,log (.*) in (.*),"['event', 'calls']",['tapestry'],['java.util.logging.Logger.getLogger']
0,format (.*) for (.*),['compatible'],['net'],['java.security.KeyPairGenerator.getInstance']
1,format (.*) for (.*),"['a', 'currency']","['a', 'locale']","['java.text.NumberFormat.getCurrencyInstance', 'java.text.NumberFormat.setCurrency']"
2,format (.*) for (.*),"['in', 'android']","['given', 'locale']",['java.util.Locale.getAvailableLocales']
3,format (.*) for (.*),['exception'],"['input', 'string']",['java.text.DecimalFormatSymbols.getInstance']
4,format (.*) for (.*),[''],"['invalid', 'format']","['java.time.LocalDateTime.parse', 'java.util.Calendar.setLenient']"
5,format (.*) for (.*),['exception'],"['input', 'string']",['java.lang.Integer.valueOf']
6,format (.*) for (.*),['looking'],"['xxxxxx', 'xx']",['java.text.NumberFormat.getCurrencyInstance']
7,format (.*) for (.*),['it'],"['usd', 'currency']",['java.lang.Integer.parseInt']
0,set (.*) on (.*),['seed'],"['math', 'random']",['java.lang.Math.random']
1,set (.*) on (.*),"['content', 'type']","['soap', 'request']",['javax.xml.soap.MessageFactory.newInstance']
2,set (.*) on (.*),"['i', 'd']",['runnable'],['java.lang.Thread.currentThread']
3,set (.*) on (.*),"['accessed', 'date']",['file'],"['java.nio.file.Files.getFileAttributeView', 'java.nio.file.attribute.FileTime.fromMillis', 'java.nio.file.Files.setAttribute']"
4,set (.*) on (.*),['it'],"['android', 'spinner']",['java.util.Arrays.asList']
5,set (.*) on (.*),"['imageicon', 'fix']",['jlabel'],"['java.awt.EventQueue.invokeLater', 'java.util.Collections.shuffle']"
6,set (.*) on (.*),"['an', 'anchor']","['a', 'jlabel']","['javax.imageio.ImageIO.read', 'javax.swing.SwingUtilities.invokeLater', 'java.lang.System.exit']"
7,set (.*) on (.*),"['accelerator', 'shortcuts']",['checkboxmenuitems'],['javax.swing.SwingUtilities.invokeLater']
8,set (.*) on (.*),"['transparent', 'background']",['jlist'],['javax.swing.SwingUtilities.invokeLater']
9,set (.*) on (.*),"['to', 'true']","['dataprovider', 'testng']",['java.lang.System.setProperty']
10,set (.*) on (.*),"['basic', 'auth']","['server', 'side']",['java.util.Collections.singletonMap']
11,set (.*) on (.*),"['not', 'working']",['android'],"['java.time.temporal.WeekFields.of', 'java.time.LocalDate.now']"
12,set (.*) on (.*),['time'],"['gregorian', 'calendar']",['java.util.Calendar.getInstance']
13,set (.*) on (.*),['timeout'],"['user', 'input']",['java.util.concurrent.Executors.newSingleThreadExecutor']
14,set (.*) on (.*),"['specific', 'row']",['top'],['java.util.Arrays.sort']
15,set (.*) on (.*),['timezone'],"['windows', 'machine']","['java.util.TimeZone.setDefault', 'java.util.Calendar.getInstance', 'java.util.Date.from', 'java.time.LocalDateTime.of', 'java.lang.System.setProperty', 'java.time.ZoneId.systemDefault']"
16,set (.*) on (.*),"['number', 'based']",['position'],"['java.lang.Math.max', 'java.lang.Math.min']"
0,group (.*) by (.*),['years'],['decades'],['java.lang.Math.floor']
1,group (.*) by (.*),['information'],['row'],['javax.xml.bind.JAXBContext.newInstance']
0,insert (.*) into (.*),['datetime'],['cassandra'],['java.sql.Timestamp.valueOf']
1,insert (.*) into (.*),['date'],['hsqldb'],['java.sql.Date.valueOf']
2,insert (.*) into (.*),"['a', 'picture']","['a', 'jtextpane']","['javax.imageio.ImageIO.read', 'javax.swing.JOptionPane.showMessageDialog']"
3,insert (.*) into (.*),"['null', 'value']","['mysql', 'database']","['java.lang.Integer.parseInt', 'javax.swing.JOptionPane.showMessageDialog']"
4,insert (.*) into (.*),['datetime'],"['ms', 'access']",['java.sql.DriverManager.getConnection']
5,insert (.*) into (.*),['commas'],"['large', 'numbers']",['java.text.NumberFormat.getInstance']
6,insert (.*) into (.*),"['a', 'date']","['oracle', 'database']",['javax.swing.JOptionPane.showInputDialog']
7,insert (.*) into (.*),['it'],['database'],['javax.xml.xpath.XPathFactory.newInstance']
8,insert (.*) into (.*),"['images', 'randomly']","['a', 'table']",['java.lang.Math.floor']
9,insert (.*) into (.*),"['html', 'code']",['sql'],['java.sql.DriverManager.getConnection']
10,insert (.*) into (.*),"['russian', 'language']",['mysql'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
11,insert (.*) into (.*),"['cmr', 'values']",['database'],['java.lang.Integer.valueOf']
12,insert (.*) into (.*),['commas'],"['a', 'number']","['java.util.Locale.setDefault', 'java.lang.String.format']"
13,insert (.*) into (.*),['jlist'],['gridlayout'],['java.awt.EventQueue.invokeLater']
14,insert (.*) into (.*),"['the', 'data']","['oracle', 'tables']",['java.nio.file.Paths.get']
15,insert (.*) into (.*),"['multiple', 'jscrollpanes']","['a', 'jlayeredpane']",['javax.swing.SwingUtilities.invokeLater']
0,copy (.*) to (.*),['bufferedimage'],['clipboard'],"['java.awt.Toolkit.getDefaultToolkit', 'java.lang.System.exit']"
1,copy (.*) to (.*),"['resource', 'file']",['folder'],['java.lang.Class.getResourceAsStream']
2,copy (.*) to (.*),"['selected', 'file']","['project', 'directory']",['java.nio.file.Files.copy']
3,copy (.*) to (.*),['inputstream'],['asynchronousfilechannel'],"['java.nio.channels.Channels.newChannel', 'java.nio.channels.AsynchronousFileChannel.open', 'java.nio.file.FileSystems.getDefault', 'java.nio.ByteBuffer.allocate']"
4,copy (.*) to (.*),['file'],"['existing', 'folder']",['java.nio.file.Files.copy']
5,copy (.*) to (.*),"['a', 'chararraybuffer']","['another', 'chararraybuffer']",['java.lang.System.arraycopy']
6,copy (.*) to (.*),"['native', 'memory']",['directbytebuffer'],['java.nio.ByteBuffer.allocateDirect']
7,copy (.*) to (.*),"['int', 'array']",['array'],['java.util.Arrays.copyOf']
8,copy (.*) to (.*),"['a', 'map']","['another', 'map']",['java.lang.Integer.parseInt']
9,copy (.*) to (.*),"['the', 'elements']","['another', 'array']",['java.util.Arrays.asList']
10,copy (.*) to (.*),['values'],"['object', 'array']",['java.lang.Double.parseDouble']
11,copy (.*) to (.*),['files'],"['other', 'directory']","['java.nio.file.Paths.get', 'java.nio.file.Files.copy']"
0,access (.*) with (.*),"['recyclerview', 'viewholder']",['espresso'],"['java.lang.Integer.toString', 'java.lang.Integer.valueOf', 'java.lang.String.format']"
1,access (.*) with (.*),"['bean', 'methods']",['lambdametafactory'],"['java.lang.invoke.MethodHandles.lookup', 'java.lang.invoke.LambdaMetafactory.metafactory', 'java.lang.invoke.MethodType.methodType']"
2,access (.*) with (.*),['database'],"['runnable', 'jar']","['java.nio.file.Files.copy', 'java.lang.System.getenv']"
3,access (.*) with (.*),['stacktraces'],"['good', 'performance']",['java.lang.Thread.currentThread']
4,access (.*) with (.*),"['private', 'member']",['lambda'],"['java.lang.invoke.MethodHandles.publicLookup', 'java.lang.invoke.MethodHandles.lookup']"
0,get (.*) on (.*),"['date', 'based']","['day', 'count']",['java.util.Calendar.getInstance']
1,get (.*) on (.*),['lock'],['file'],"['java.nio.file.FileSystems.getDefault', 'java.lang.Thread.sleep', 'java.nio.file.Files.walkFileTree', 'java.nio.file.Paths.get', 'java.lang.System.currentTimeMillis']"
2,get (.*) on (.*),"['strange', 'behavior']",['linux'],['java.nio.file.Paths.get']
3,get (.*) on (.*),"['jscrollpane', 'working']",['jframe'],"['javax.swing.SwingUtilities.invokeLater', 'java.lang.String.format']"
4,get (.*) on (.*),"['distinct', 'values']","['object', 'hierarchy']","['java.util.Arrays.stream', 'java.util.Arrays.asList']"
5,get (.*) on (.*),"['are', 'called']","['different', 'levels']",['java.util.Optional.of']
6,get (.*) on (.*),['work'],['hashmap'],['java.lang.Object.equals']
7,get (.*) on (.*),"['selected', 'item']",['jcalendar'],['java.util.Calendar.getInstance']
8,get (.*) on (.*),['notified'],"['accelerometer', 'changes']",['java.lang.System.currentTimeMillis']
9,get (.*) on (.*),['banned'],['site'],"['javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier', 'java.lang.System.setProperty', 'javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory', 'javax.net.ssl.SSLContext.getInstance']"
10,get (.*) on (.*),"['field', 'variable']","['java', 'spring']",['java.util.Optional.ofNullable']
11,get (.*) on (.*),['data'],"['both', 'side']",['java.util.Arrays.stream']
12,get (.*) on (.*),"['the', 'results']","['job', 'done']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.util.stream.IntStream.rangeClosed']"
13,get (.*) on (.*),"['desired', 'result']","['java', 'program']",['java.math.BigDecimal.valueOf']
14,get (.*) on (.*),"['installed', 'only']","['specific', 'computer']",['java.net.NetworkInterface.getNetworkInterfaces']
0,draw (.*) on (.*),['oval'],"['a', 'jpanel']",['javax.swing.SwingUtilities.invokeLater']
1,draw (.*) on (.*),['pixels'],"['a', 'screen']","['java.awt.EventQueue.invokeLater', 'java.awt.Graphics.fillRect', 'java.awt.Graphics.fillOval']"
2,draw (.*) on (.*),['shape'],['jbutton'],['javax.swing.SwingUtilities.invokeLater']
3,draw (.*) on (.*),"['selection', 'box']","['swt', 'canvas']","['java.lang.Math.max', 'java.lang.Math.min']"
4,draw (.*) on (.*),['images'],"['transparent', 'window']","['javax.imageio.ImageIO.read', 'java.lang.Class.forName', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
5,draw (.*) on (.*),['accurately'],"['an', 'image']","['javax.imageio.ImageIO.read', 'javax.swing.SwingUtilities.invokeLater']"
6,draw (.*) on (.*),"['three', 'lines']","['dynamic', 'jfreechart']",['java.lang.Math.random']
7,draw (.*) on (.*),['lines'],"['existing', 'panel']",['javax.swing.SwingUtilities.invokeLater']
8,draw (.*) on (.*),['image'],['jpanel'],['javax.imageio.ImageIO.read']
9,draw (.*) on (.*),['crosshair'],"['stock', 'barchart']",['java.lang.Double.parseDouble']
10,draw (.*) on (.*),['arrow'],"['multi', 'line']",['java.lang.Math.atan2']
11,draw (.*) on (.*),['sprite'],['jpanel'],['javax.imageio.ImageIO.read']
12,draw (.*) on (.*),['rectangle'],"['pressing', 'jbutton']",['javax.swing.SwingUtilities.invokeLater']
13,draw (.*) on (.*),"['a', 'rectangle']","['a', 'jframe']",['javax.swing.SwingUtilities.invokeLater']
14,draw (.*) on (.*),"['an', 'image']","['a', 'jframe']",['javax.imageio.ImageIO.read']
15,draw (.*) on (.*),['route'],"['google', 'map']","['java.lang.Integer.parseInt', 'java.lang.Double.parseDouble', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
16,draw (.*) on (.*),"['d', 'graphics']",['frame'],['java.lang.Integer.toString']
17,draw (.*) on (.*),['shapes'],"['scrollable', 'jpanel']","['javax.swing.SwingUtilities.invokeLater', 'java.lang.System.exit', 'javax.imageio.ImageIO.read', 'java.lang.Math.abs', 'java.lang.Math.min']"
18,draw (.*) on (.*),"['background', 'region']",['paper'],"['java.awt.print.PrinterJob.getPrinterJob', 'java.awt.print.PrinterJob.pageDialog', 'java.awt.Graphics2D.fill']"
19,draw (.*) on (.*),"['it', 'based']",['that'],['java.lang.Thread.sleep']
0,save (.*) in (.*),"['special', 'characters']",['database'],['java.lang.System.setProperty']
1,save (.*) in (.*),"['java', 'collection']","['a', 'database']",['java.sql.DriverManager.getConnection']
2,save (.*) in (.*),"['text', 'horizontal']","['vertical', 'jprogressbar']","['java.awt.EventQueue.invokeLater', 'javax.swing.SwingUtilities.paintComponent']"
3,save (.*) in (.*),"['ratingbar', 'rating']",['sharedpreferences'],['java.lang.String.valueOf']
4,save (.*) in (.*),"['selected', 'image']",['javafx'],['javax.imageio.ImageIO.write']
5,save (.*) in (.*),"['a', 'checkbox']",['jframe'],['java.lang.Boolean.parseBoolean']
6,save (.*) in (.*),['toolkitimage'],"['derby', 'blob']","['java.awt.Toolkit.getDefaultToolkit', 'java.sql.DriverManager.getConnection', 'java.util.logging.Logger.getLogger', 'java.lang.Class.forName']"
7,save (.*) in (.*),['table'],"['clipboad', 'javafx']","['java.text.NumberFormat.getInstance', 'java.text.NumberFormat.getNumberInstance']"
8,save (.*) in (.*),['it'],['arraylist'],"['java.util.Collections.singletonList', 'java.util.Collections.emptyList']"
9,save (.*) in (.*),"['input', 'text']","['android', 'studio']",['java.util.Arrays.asList']
10,save (.*) in (.*),"['video', 'snapshot']","['particular', 'directory']","['java.lang.System.getProperty', 'java.lang.String.format']"
11,save (.*) in (.*),['image'],['jsp'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write']"
12,save (.*) in (.*),['string'],"['one', 'line']",['java.lang.String.split']
13,save (.*) in (.*),['array'],"['binary', 'format']",['java.io.ObjectInputStream.readObject']
14,save (.*) in (.*),"['upcoming', 'date']",['string'],['java.util.Calendar.getInstance']
15,save (.*) in (.*),['image'],"['mysql', 'database']",['java.sql.DriverManager.getConnection']
16,save (.*) in (.*),"['the', 'words']",['array'],"['java.util.Arrays.copyOf', 'java.util.Collections.addAll']"
17,save (.*) in (.*),['it'],"['a', 'byte']",['java.nio.file.Files.readAllBytes']
0,call (.*) in (.*),"['string', 'isempty']",['android'],"['java.lang.String.length', 'java.lang.String.equals']"
1,call (.*) in (.*),['completed'],['spring'],['java.util.concurrent.Future.get']
2,call (.*) in (.*),"['and', 'setter']","['stream', 'map']","['java.util.Arrays.stream', 'java.util.regex.Pattern.compile']"
3,call (.*) in (.*),['synchronous'],['kotlin'],['java.lang.Thread.sleep']
4,call (.*) in (.*),"['observer', 'onnext']",['rxjava'],['java.lang.String.valueOf']
5,call (.*) in (.*),"['javascript', 'popup']","['java', 'program']",['javax.swing.JOptionPane.showMessageDialog']
6,call (.*) in (.*),"['java', 'method']","['javafx', 'menu']",['java.lang.System.exit']
7,call (.*) in (.*),"['function', 'failing']",['jacob'],['javax.xml.ws.Dispatch.invoke']
8,call (.*) in (.*),"['using', 'webservicetemplate']","['springboot', 'client']",['javax.xml.transform.TransformerFactory.newInstance']
9,call (.*) in (.*),"['java', 'threads']","['web', 'application']",['java.util.concurrent.Executors.newScheduledThreadPool']
10,call (.*) in (.*),"['the', 'loop']",['jtextfield'],['javax.swing.SwingUtilities.invokeLater']
11,call (.*) in (.*),['shellscript'],"['java', 'program']",['java.lang.Runtime.getRuntime']
12,call (.*) in (.*),"['several', 'functions']",['parallel'],"['java.util.concurrent.CompletableFuture.runAsync', 'java.util.concurrent.CompletableFuture.allOf']"
13,call (.*) in (.*),['work'],"['my', 'example']",['java.util.concurrent.CompletableFuture.runAsync']
14,call (.*) in (.*),['pack'],"['jframe', 'invalidate']",['javax.swing.SwingUtilities.invokeLater']
15,call (.*) in (.*),"['a', 'jpanel']","['the', 'actionlistener']",['java.awt.EventQueue.invokeLater']
0,print (.*) in (.*),['xml'],['java'],['javax.xml.xpath.XPathFactory.newInstance']
1,print (.*) in (.*),"['an', 'array']",['joptionpane'],['javax.swing.JOptionPane.showMessageDialog']
2,print (.*) in (.*),"['all', 'elements']","['an', 'array']",['java.util.Arrays.toString']
3,print (.*) in (.*),['long'],['binary'],['java.lang.String.format']
4,print (.*) in (.*),['out'],['columns'],['java.text.NumberFormat.getCurrencyInstance']
5,print (.*) in (.*),['date'],"['original', 'timezone']","['java.time.ZonedDateTime.ofInstant', 'java.time.ZoneId.of', 'java.time.OffsetDateTime.parse']"
6,print (.*) in (.*),['statements'],"['eclipse', 'console']","['java.lang.System.setOut', 'java.lang.String.format']"
7,print (.*) in (.*),['byte'],"['unsign', 'format']",['java.lang.Byte.parseByte']
8,print (.*) in (.*),['matrix'],"['dialog', 'box']",['java.util.Arrays.deepToString']
9,print (.*) in (.*),"['saved', 'spreadsheet']","['java', 'swing']",['java.awt.Desktop.getDesktop']
10,print (.*) in (.*),"['the', 'result']","['eclipse', 'console']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
11,print (.*) in (.*),"['customized', 'prefix']","['log', 'j']",['java.util.logging.Logger.getLogger']
12,print (.*) in (.*),"['progress', 'dialog']",['swing'],['java.awt.print.Printable.print']
13,print (.*) in (.*),"['messages', 'fired']","['a', 'thread']",['javax.swing.SwingUtilities.invokeLater']
14,print (.*) in (.*),"['hadoop', 'properties']",['cli'],['java.lang.System.exit']
15,print (.*) in (.*),['numbers'],['jsp'],['java.lang.Math.sqrt']
16,print (.*) in (.*),"['java', 'date']","['specific', 'format']",['java.lang.Integer.parseInt']
17,print (.*) in (.*),['x'],"['for', 'loop']",['java.lang.System.currentTimeMillis']
18,print (.*) in (.*),['out'],['order'],['java.net.InetAddress.getByAddress']
19,print (.*) in (.*),"['the', 'occurrences']","['this', 'arraylist']",['java.util.Collections.frequency']
20,print (.*) in (.*),['it'],"['canonicalized', 'java']",['java.lang.Integer.parseInt']
21,print (.*) in (.*),"['a', 'datetime']",['milliseconds'],['java.lang.String.valueOf']
0,print (.*) with (.*),['strings'],"['line', 'breaks']","['java.awt.print.PrinterJob.getPrinterJob', 'javax.print.PrintServiceLookup.lookupPrintServices']"
1,print (.*) with (.*),['spaces'],"['string', 'format']",['java.lang.String.format']
2,print (.*) with (.*),['string'],"['null', 'character']",['java.lang.System.setOut']
3,print (.*) with (.*),"['diamond', 'shape']",['java'],['java.lang.Math.abs']
4,print (.*) with (.*),"['rtf', 'file']",['dialog'],['java.awt.Desktop.getDesktop']
5,print (.*) with (.*),"['names', 'along']","['sorted', 'dates']","['java.util.Collections.sort', 'java.util.regex.Pattern.compile']"
6,print (.*) with (.*),"['object', 'value']","['string', 'method']",['java.lang.Float.toString']
7,print (.*) with (.*),['array'],"['joption', 'pane']",['javax.swing.JOptionPane.showMessageDialog']
8,print (.*) with (.*),['doubles'],"['same', 'exponent']","['java.lang.Math.abs', 'java.lang.Math.min', 'java.lang.String.format']"
9,print (.*) with (.*),['string'],"['decimal', 'places']",['java.lang.String.format']
0,map (.*) with (.*),"['object', 'object']",['gson'],['java.lang.Long.valueOf']
1,map (.*) with (.*),"['of', 'arrays']","['duplicate', 'keys']",['java.util.stream.Stream.of']
2,map (.*) with (.*),"['map', 'collection']",['manytomany'],"['java.util.Collections.unmodifiableSet', 'java.util.Collections.unmodifiableMap']"
3,map (.*) with (.*),"['string', 'string']","['unmodifiable', 'keys']",['java.util.Collections.unmodifiableSet']
4,map (.*) with (.*),"['of', 'lists']","['java', 'stream']","['java.util.stream.Stream.concat', 'java.util.stream.Stream.empty']"
5,map (.*) with (.*),['key'],"['collectors', 'counting']",['java.util.Arrays.stream']
6,map (.*) with (.*),"['entry', 'object']",['gson'],"['java.lang.Long.valueOf', 'java.util.regex.Pattern.compile', 'java.lang.String.format']"
7,map (.*) with (.*),"['from', 'list']","['java', 'streams']","['java.util.function.Function.identity', 'java.util.stream.Collectors.toMap']"
8,map (.*) with (.*),"['of', 'string']",['count'],['java.util.stream.Collectors.counting']
9,map (.*) with (.*),['marker'],"['a', 'shadow']",['java.lang.Math.abs']
10,map (.*) with (.*),[],['stream'],['java.util.stream.Collector.of']
11,map (.*) with (.*),['entry'],['gson'],['java.util.stream.StreamSupport.stream']
12,map (.*) with (.*),['reduce'],"['java', 'streams']",['java.util.stream.Collectors.summingInt']
13,map (.*) with (.*),"['string', 'string']",['streams'],['java.util.stream.Collectors.groupingBy']
14,map (.*) with (.*),"['create', 'objects']",['counter'],['java.util.stream.IntStream.range']
15,map (.*) with (.*),"['by', 'value']",['stream'],['java.lang.Integer.compare']
16,map (.*) with (.*),"['for', 'errors']",['rxjava'],['java.net.InetAddress.getByName']
0,split (.*) by (.*),['string'],['char'],['java.lang.String.split']
1,split (.*) by (.*),['string'],['length'],['java.lang.Math.min']
2,split (.*) by (.*),['sentence'],"['words', 'count']",['java.lang.Math.ceil']
3,split (.*) by (.*),['string'],"['specific', 'keywords']",['java.util.stream.Stream.of']
4,split (.*) by (.*),['string'],"['space', 'separated']","['java.util.Collections.addAll', 'java.util.regex.Pattern.compile']"
5,split (.*) by (.*),"['the', 'string']",['number'],['java.util.regex.Pattern.compile']
6,split (.*) by (.*),"['a', 'string']",[],['java.util.regex.Pattern.compile']
7,split (.*) by (.*),['strings'],[],['java.util.Arrays.toString']
8,split (.*) by (.*),['string'],"['regular', 'expression']",['java.util.regex.Pattern.compile']
9,split (.*) by (.*),"['the', 'results']",['a'],['java.lang.String.join']
10,split (.*) by (.*),"['a', 'string']","['multiple', 'delimiters']",['java.lang.Integer.parseInt']
11,split (.*) by (.*),"['a', 'string']",['strings'],['java.util.regex.Pattern.compile']
0,count (.*) in (.*),"['duplicate', 'elements']",['arraylist'],['java.util.Collections.frequency']
1,count (.*) in (.*),"['unique', 'pairs']","['int', 'array']",['java.util.Arrays.sort']
2,count (.*) in (.*),"['bits', 'used']",['int'],"['java.lang.Long.numberOfLeadingZeros', 'java.lang.Integer.numberOfLeadingZeros']"
3,count (.*) in (.*),['vowels'],"['a', 'word']",['java.util.regex.Pattern.compile']
4,count (.*) in (.*),"['duplicate', 'values']","['arraylist', 'java']",['java.util.Collections.frequency']
5,count (.*) in (.*),"['prime', 'numbers']",['arraylist'],['java.util.Arrays.asList']
6,count (.*) in (.*),"['repeated', 'lines']",['file'],"['java.util.stream.Collectors.counting', 'java.nio.file.Files.lines']"
7,count (.*) in (.*),"['this', 'variables']","['my', 'db']",['java.lang.Integer.valueOf']
8,count (.*) in (.*),"['recurrent', 'words']","['two', 'files']","['java.util.Collections.sort', 'java.util.Map.merge']"
9,count (.*) in (.*),"['checked', 'checkboxes']",['recyclerview'],['java.lang.String.valueOf']
10,count (.*) in (.*),['digits'],['bigdecimal'],['java.lang.System.nanoTime']
11,count (.*) in (.*),"['xml', 'elements']",['cdata'],['javax.xml.bind.JAXBContext.newInstance']
12,count (.*) in (.*),['numbers'],"['an', 'array']",['java.util.Arrays.sort']
13,count (.*) in (.*),['difference'],['minutes'],"['java.time.Duration.between', 'java.time.LocalDateTime.parse', 'java.util.Objects.equals', 'java.util.Objects.hash', 'java.time.format.DateTimeFormatter.ofPattern']"
14,count (.*) in (.*),"['down', 'timer']","['android', 'studio']",['java.lang.Long.parseLong']
15,count (.*) in (.*),"['to', 'display']","['league', 'recyclerview']",['java.lang.String.valueOf']
16,count (.*) in (.*),"['days', 'elapsed']",['textview'],['java.lang.System.currentTimeMillis']
0,find (.*) from (.*),"['working', 'directory']",['ant'],['java.lang.System.getProperties']
1,find (.*) from (.*),"['closest', 'point']","['users', 'coordinates']",['java.util.Collections.min']
2,find (.*) from (.*),"['common', 'elements']",['sets'],['java.lang.System.currentTimeMillis']
3,find (.*) from (.*),"['search', 'pattern']","['text', 'file']",['java.util.regex.Pattern.compile']
4,find (.*) from (.*),"['largest', 'value']","['multiple', 'arraylist']",['java.util.Collections.max']
5,find (.*) from (.*),"['sum', 'combinations']","['two', 'arrays']",['java.util.Arrays.sort']
6,find (.*) from (.*),"['search', 'word']","['google', 'url']","['java.net.URLDecoder.decode', 'java.util.regex.Pattern.compile']"
7,find (.*) from (.*),"['new', 'coordinates']","['translation', 'rotation']","['java.lang.Math.sin', 'java.lang.Math.cos']"
8,find (.*) from (.*),['average'],['list'],"['java.lang.Thread.sleep', 'java.util.Arrays.asList']"
9,find (.*) from (.*),['jvm'],['java'],['java.lang.System.getProperty']
10,find (.*) from (.*),"['database', 'name']","['jdbc', 'url']",['java.util.regex.Pattern.compile']
11,find (.*) from (.*),['items'],['arraylist'],"['javax.swing.JOptionPane.showInputDialog', 'java.lang.Double.parseDouble']"
12,find (.*) from (.*),"['i', 'd']",['json'],['java.util.stream.Stream.of']
13,find (.*) from (.*),"['json', 'string']","['the', 'html']",['java.util.regex.Pattern.compile']
0,find (.*) of (.*),['factorial'],"['large', 'numbers']",['java.math.BigInteger.valueOf']
1,find (.*) of (.*),"['dominant', 'color']","['an', 'image']","['java.util.Collections.sort', 'javax.imageio.ImageIO.createImageInputStream', 'javax.imageio.ImageIO.getImageReaders', 'java.lang.Integer.toHexString', 'java.lang.System.exit']"
2,find (.*) of (.*),['week'],"['the', 'month']",['java.util.Calendar.getInstance']
3,find (.*) of (.*),"['the', 'declaration']",['element'],['javax.xml.bind.JAXBContext.newInstance']
4,find (.*) of (.*),"['the', 'max']",['numbers'],['java.lang.Math.max']
5,find (.*) of (.*),['length'],['line'],['java.lang.Math.hypot']
6,find (.*) of (.*),"['the', 'content']",['brackets'],['java.util.regex.Pattern.compile']
7,find (.*) of (.*),"['different', 'shades']","['a', 'color']","['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write', 'javax.swing.JOptionPane.showMessageDialog']"
8,find (.*) of (.*),"['the', 'permutation']","['a', 'sort']","['java.lang.Integer.compare', 'java.util.Collections.sort']"
9,find (.*) of (.*),['number'],['duplicates'],['java.util.Collections.frequency']
10,find (.*) of (.*),['first'],[],['java.util.regex.Pattern.compile']
11,find (.*) of (.*),['format'],"['clipboard', 'image']","['java.awt.Toolkit.getDefaultToolkit', 'javax.imageio.ImageIO.write']"
12,find (.*) of (.*),"['all', 'subwords']","['a', 'string']",['java.lang.String.format']
13,find (.*) of (.*),"['the', 'list']","['attributes', 'name']",['java.nio.file.Files.setAttribute']
14,find (.*) of (.*),"['all', 'permutations']","['byte', 'array']",['java.lang.Byte.parseByte']
15,find (.*) of (.*),['declaration'],['element'],"['javax.xml.validation.SchemaFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
16,find (.*) of (.*),"['all', 'usages']","['tostring', 'method']",['java.lang.Thread.currentThread']
17,find (.*) of (.*),"['the', 'median']",['values'],"['java.util.Arrays.asList', 'java.util.Collections.sort']"
18,find (.*) of (.*),"['certain', 'number']","['nearest', 'values']","['java.lang.Math.abs', 'java.lang.Integer.compare', 'java.util.Arrays.sort']"
19,find (.*) of (.*),"['values', 'out']",['it'],['java.util.regex.Pattern.compile']
20,find (.*) of (.*),"['all', 'referrers']","['an', 'object']","['java.lang.System.currentTimeMillis', 'java.util.Collections.sort', 'java.lang.String.valueOf', 'java.lang.Thread.currentThread']"
21,find (.*) of (.*),['localdate'],['method'],['java.time.LocalDate.of']
22,find (.*) of (.*),['average'],['columns'],['java.lang.Double.parseDouble']
23,find (.*) of (.*),"['the', 'type']","['local', 'variables']",['java.util.Collections.emptyMap']
24,find (.*) of (.*),['subset'],['enum'],['java.util.EnumSet.complementOf']
25,find (.*) of (.*),"['the', 'order']","['unsorted', 'array']","['java.util.stream.IntStream.range', 'java.util.Arrays.sort']"
26,find (.*) of (.*),"['the', 'index']",['in'],['java.util.regex.Pattern.compile']
27,find (.*) of (.*),"['the', 'name']","['an', 'object']",['javax.imageio.ImageIO.read']
28,find (.*) of (.*),"['smallest', 'powers']","['given', 'number']",['java.lang.String.valueOf']
29,find (.*) of (.*),"['the', 'value']","['a', 'key']","['java.util.regex.Pattern.quote', 'java.util.regex.Pattern.compile']"
30,find (.*) of (.*),['methods'],"['class', 'files']",['java.nio.file.Paths.get']
31,find (.*) of (.*),['value'],['constatnt'],['java.lang.Class.forName']
32,find (.*) of (.*),"['the', 'product']","['a', 'sublist']",['java.util.Arrays.asList']
33,find (.*) of (.*),"['the', 'digits']","['a', 'number']",['java.lang.Double.doubleToRawLongBits']
0,check (.*) for (.*),['enum'],"['multiple', 'values']",['java.util.Arrays.stream']
1,check (.*) for (.*),['string'],['integers'],['java.lang.Integer.parseInt']
2,check (.*) for (.*),"['empty', 'diagonals']",['bishop'],['java.lang.Math.abs']
3,check (.*) for (.*),"['in', 'z']",['java'],['java.lang.System.nanoTime']
4,check (.*) for (.*),['input'],['number'],['java.lang.Integer.parseInt']
5,check (.*) for (.*),"['an', 'array']",['characters'],['java.util.regex.Pattern.compile']
6,check (.*) for (.*),['string'],"['lettters', 'numberformatexception']",['java.lang.Integer.parseInt']
0,get (.*) for (.*),"['the', 'jar']",['opencv'],['java.lang.System.loadLibrary']
1,get (.*) for (.*),"['method', 'defined']",['class'],['java.util.Arrays.asList']
2,get (.*) for (.*),['iv'],['decryption'],['javax.crypto.Cipher.getInstance']
3,get (.*) for (.*),"['timezone', 'in']","['example', 'format']",['java.util.Calendar.getInstance']
4,get (.*) for (.*),"['local', 'inetaddress']",['vmid'],['java.net.InetAddress.getLocalHost']
5,get (.*) for (.*),"['future', 'date']",['time'],"['java.util.Calendar.getTime', 'java.util.Calendar.getInstance']"
6,get (.*) for (.*),"['a', 'replacement']","['thread', 'join']",['java.lang.Thread.sleep']
7,get (.*) for (.*),"['realative', 'path']",['database'],['java.sql.DriverManager.getConnection']
8,get (.*) for (.*),"['javadoc', 'version']","['a', 'class']",['java.lang.Class.getAnnotations']
9,get (.*) for (.*),"['average', 'volume']","['a', 'minute']",['java.lang.Math.abs']
10,get (.*) for (.*),['post'],"['encoded', 'string']",['java.net.URLEncoder.encode']
11,get (.*) for (.*),['logcat'],"['certain', 'tag']",['java.lang.Runtime.getRuntime']
12,get (.*) for (.*),['keystroke'],['and'],['javax.swing.KeyStroke.getKeyStroke']
13,get (.*) for (.*),"['realtime', 'result']",['jtable'],['java.lang.Thread.sleep']
14,get (.*) for (.*),"['matrix', 'values']","['further', 'use']",['java.nio.ByteBuffer.allocate']
15,get (.*) for (.*),['timeinmillis'],"['different', 'timezone']",['java.lang.System.currentTimeMillis']
16,get (.*) for (.*),['dates'],"['a', 'year']","['java.time.temporal.WeekFields.of', 'java.time.Year.of']"
17,get (.*) for (.*),"['leading', 'zeros']","['binary', 'numbers']","['java.lang.Integer.toBinaryString', 'java.lang.String.format']"
18,get (.*) for (.*),"['right', 'values']",['vars'],['java.lang.Byte.toUnsignedInt']
0,list (.*) with (.*),"['of', 'strings']",['localization'],"['java.text.Collator.getInstance', 'java.util.Collections.sort']"
1,list (.*) with (.*),['directory'],['wildcard'],"['java.nio.file.FileSystems.getDefault', 'java.nio.file.Files.newDirectoryStream']"
2,list (.*) with (.*),"['to', 'csv']","['super', 'csv']",['java.util.Arrays.asList']
3,list (.*) with (.*),['integer'],['reflection'],['java.util.Arrays.asList']
4,list (.*) with (.*),"['of', 'items']","['same', 'values']","['java.lang.Double.valueOf', 'java.lang.Integer.valueOf']"
5,list (.*) with (.*),"['of', 'inputstreams']",['java'],['java.io.File.listFiles']
6,list (.*) with (.*),"['of', 'treesets']","['java', 'streams']",['java.util.stream.Collector.of']
7,list (.*) with (.*),"['of', 'objects']",['jackson'],"['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
8,list (.*) with (.*),"['value', '']","['list', 'value']",['java.lang.String.format']
9,list (.*) with (.*),"['of', 'integers']","['comma', 'and']",['java.lang.Integer.parseInt']
10,list (.*) with (.*),['type'],"['lambda', 'java']",['java.util.Arrays.asList']
11,list (.*) with (.*),"['of', 'objects']","['a', 'set']",['java.util.function.Function.identity']
12,list (.*) with (.*),"['into', 'threads']",['completablefuture'],['java.util.stream.Stream.builder']
13,list (.*) with (.*),"['of', 'file']","['contextual', 'menu']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.UIManager.setLookAndFeel', 'java.util.Arrays.sort', 'javax.swing.JOptionPane.showMessageDialog']"
14,list (.*) with (.*),"['of', 'objects']","['parameter', 'array']",['java.util.Arrays.stream']
15,list (.*) with (.*),"['of', 'objects']","['java', 'lambda']",['java.util.Collections.sort']
16,list (.*) with (.*),['string'],"['one', 'another']",['java.util.Arrays.asList']
17,list (.*) with (.*),['files'],"['relative', 'path']",['java.nio.file.Paths.get']
18,list (.*) with (.*),"['of', 'completablefutures']",['compose'],['java.util.concurrent.CompletableFuture.supplyAsync']
19,list (.*) with (.*),"['of', 'arrays']",['duplicates'],"['java.util.Arrays.toString', 'java.util.Arrays.stream', 'java.util.Arrays.hashCode', 'java.util.stream.Stream.of']"
20,list (.*) with (.*),"['of', 'maps']","['different', 'datatypes']",['java.util.Map.put']
21,list (.*) with (.*),['object'],"['another', 'objects']","['java.util.Arrays.asList', 'java.lang.Integer.compare']"
22,list (.*) with (.*),"['of', 'object']","['max', 'values']",['java.util.stream.Collectors.toSet']
23,list (.*) with (.*),"['of', 'expressions']",['exceptions'],['java.util.regex.Pattern.compile']
24,list (.*) with (.*),['substraction'],['indices'],['java.util.Arrays.asList']
25,list (.*) with (.*),"['of', 'beans']","['different', 'data']","['java.util.concurrent.CompletableFuture.completedFuture', 'java.util.concurrent.CompletableFuture.allOf']"
0,list (.*) in (.*),"['the', 'files']","['current', 'directory']",['java.io.File.getCanonicalFile']
1,list (.*) in (.*),"['of', 'string']",['java'],"['java.util.Arrays.asList', 'java.util.stream.Stream.of']"
2,list (.*) in (.*),['string'],['jdbctemplate'],['java.util.regex.Pattern.compile']
3,list (.*) in (.*),"['of', 'objects']",['java'],"['java.util.Objects.equals', 'java.util.Objects.hash', 'java.util.Comparator.comparing', 'java.util.stream.Stream.concat']"
4,list (.*) in (.*),['string'],['jpa'],['java.util.Arrays.asList']
5,list (.*) in (.*),"['of', 'objects']",['java'],"['java.util.stream.IntStream.range', 'java.util.stream.IntStream.iterate']"
6,list (.*) in (.*),"['from', 'object']","['spring', 'resttemplate']",['java.util.Arrays.asList']
7,list (.*) in (.*),"['of', 'objects']","['parallel', 'processing']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.util.concurrent.Executors.newCachedThreadPool']"
8,list (.*) in (.*),"['of', 'objects']","['spring', 'controllers']","['java.nio.charset.Charset.forName', 'java.util.Objects.requireNonNull']"
9,list (.*) in (.*),['webelement'],['webdriver'],['java.util.Collections.sort']
10,list (.*) in (.*),['view'],"['alphabetical', 'order']",['java.util.Collections.sort']
11,list (.*) in (.*),"['of', 'lists']","['alphabetical', 'order']",['java.util.Collections.sort']
12,list (.*) in (.*),"['of', 'objects']",['android'],"['java.lang.Double.compare', 'java.util.Collections.sort']"
13,list (.*) in (.*),"['of', 'unaryoperators']",['java'],"['java.util.Arrays.asList', 'java.util.Objects.requireNonNull']"
14,list (.*) in (.*),"['with', 'stream']",['java'],['java.util.Arrays.asList']
15,list (.*) in (.*),"['of', 'lists']",['hibernate'],['java.util.Arrays.asList']
16,list (.*) in (.*),[],"['java', 'utils']",['java.util.Collections.list']
17,list (.*) in (.*),['object'],['java'],['java.util.Optional.ofNullable']
18,list (.*) in (.*),['resize'],"['following', 'code']",['javax.imageio.ImageIO.read']
19,list (.*) in (.*),['keys'],"['amazon', 's']",['java.lang.System.currentTimeMillis']
20,list (.*) in (.*),['data'],"['ascending', 'order']",['java.util.Collections.sort']
21,list (.*) in (.*),['string'],"['reverse', 'order']","['java.util.Collections.reverse', 'java.util.Arrays.asList']"
22,list (.*) in (.*),['cell'],"['javafx', 'css']",['java.util.stream.IntStream.rangeClosed']
23,list (.*) in (.*),"['class', 'method']","['driver', 'class']",['java.util.Collections.sort']
24,list (.*) in (.*),['webelement'],"['selenium', 'java']",['java.util.stream.Stream.of']
25,list (.*) in (.*),"['item', 'insertion']",['jtextpane'],['java.awt.EventQueue.invokeLater']
26,list (.*) in (.*),"['them', 'out']",['jcombobox'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
27,list (.*) in (.*),"['string', 'nested']",['hashmap'],['java.lang.Math.min']
28,list (.*) in (.*),['adapter'],"['descending', 'android']",['java.util.Collections.sort']
29,list (.*) in (.*),"['of', 'numbers']","['a', 'sentence']",['java.util.regex.Pattern.compile']
30,list (.*) in (.*),['varargs'],"['a', 'method']",['java.util.Arrays.stream']
31,list (.*) in (.*),['cookies'],['play'],['java.util.logging.Logger.info']
32,list (.*) in (.*),"['of', 'strings']","['request', 'payload']",['java.util.Arrays.asList']
33,list (.*) in (.*),"['group', 'by']",['java'],"['java.util.Objects.equals', 'java.util.Collections.sort', 'java.util.Objects.hash']"
34,list (.*) in (.*),['sort'],"['java', 'alphabetically']","['java.nio.file.FileSystems.getDefault', 'java.util.Collections.sort', 'java.nio.file.Files.newBufferedReader']"
35,list (.*) in (.*),['concatenation'],['java'],['java.util.stream.Stream.concat']
36,list (.*) in (.*),['attribute'],['java'],"['java.util.Arrays.asList', 'java.lang.String.format']"
37,list (.*) in (.*),"['of', 'exception']","['single', 'exception']",['java.util.stream.IntStream.of']
38,list (.*) in (.*),[''],"['the', 'list']",['java.lang.Math.min']
39,list (.*) in (.*),"['string', 'element']",['class'],['java.util.Collections.unmodifiableList']
40,list (.*) in (.*),['date'],"['codename', 'one']","['java.util.Comparator.comparingLong', 'java.util.Collections.sort', 'java.util.stream.Collectors.toList', 'java.lang.Long.compare']"
41,list (.*) in (.*),['appears'],"['all', 'occurrences']",['java.util.Collections.sort']
42,list (.*) in (.*),['massive'],"['selenium', 'java']",['java.lang.Thread.sleep']
43,list (.*) in (.*),['dayofweek'],"['localized', 'order']","['java.util.stream.IntStream.range', 'java.time.temporal.WeekFields.of']"
44,list (.*) in (.*),[''],"['the', 'list']",['java.util.Collections.synchronizedList']
45,list (.*) in (.*),[''],"['the', 'list']",['java.util.Arrays.deepEquals']
46,list (.*) in (.*),[''],['list'],"['java.util.Arrays.asList', 'java.lang.System.arraycopy', 'java.lang.Integer.valueOf']"
47,list (.*) in (.*),"['of', 'objects']",['streams'],['java.util.stream.Collectors.maxBy']
48,list (.*) in (.*),"['gui', 'component']","['java', 'swing']","['javax.imageio.ImageIO.read', 'javax.swing.JOptionPane.showMessageDialog']"
49,list (.*) in (.*),"['to', 'array']","['arrays', 'intersection']",['java.util.Arrays.asList']
50,list (.*) in (.*),"['of', 'sublists']","['this', 'case']",['java.util.Arrays.asList']
51,list (.*) in (.*),"['being', 'modified']","['another', 'class']",['java.util.Collections.unmodifiableList']
52,list (.*) in (.*),"['like', 'joins']",['sql'],['java.util.Arrays.asList']
53,list (.*) in (.*),[''],['list'],['java.util.Arrays.copyOf']
54,list (.*) in (.*),[''],"['that', 'list']",['java.util.List.set']
55,list (.*) in (.*),"['of', 'values']",['test'],['java.util.Arrays.asList']
0,split (.*) using (.*),['string'],['delimiter'],['java.lang.String.split']
1,split (.*) using (.*),['strings'],['java'],['java.util.regex.Pattern.compile']
2,split (.*) using (.*),['string'],"['regular', 'expression']","['java.lang.Double.parseDouble', 'java.util.regex.Pattern.compile']"
3,split (.*) using (.*),['integers'],"['stream', 'lambda']",['java.util.Arrays.stream']
4,split (.*) using (.*),"['parsing', 'issue']","['regular', 'expression']",['java.util.regex.Pattern.compile']
5,split (.*) using (.*),['string'],['regex'],['java.util.regex.Pattern.compile']
6,split (.*) using (.*),"['specific', 'line']","['regular', 'expression']",['java.util.regex.Pattern.compile']
7,split (.*) using (.*),['string'],['reges'],['java.lang.String.split']
8,split (.*) using (.*),['string'],"['regular', 'expression']",['java.util.regex.Pattern.compile']
0,list (.*) to (.*),['string'],"['a', 'string']","['java.util.Arrays.asList', 'java.lang.String.join']"
1,list (.*) to (.*),"['from', 'greatest']",['least'],"['java.util.Collections.reverse', 'java.util.Collections.sort']"
2,list (.*) to (.*),"['from', 'java']","['oracle', 'procedure']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
3,list (.*) to (.*),"['from', 'index']",['index'],"['java.util.Arrays.asList', 'java.util.Collections.sort']"
4,list (.*) to (.*),['integer'],"['array', 'float']",['java.util.List.toArray']
5,list (.*) to (.*),['values'],"['parameterized', 'simplestatement']",['java.util.UUID.randomUUID']
6,list (.*) to (.*),"['of', 'lists']",['map'],"['java.util.stream.Collectors.mapping', 'java.util.stream.Collectors.toSet']"
7,list (.*) to (.*),['string'],"['iterator', 'string']",['java.util.Arrays.asList']
8,list (.*) to (.*),['string'],['short'],['java.lang.Short.parseShort']
9,list (.*) to (.*),"['containing', 'binary']",['hex'],['java.lang.Integer.parseInt']
10,list (.*) to (.*),"['of', 'strings']",['xml'],['java.util.Arrays.asList']
11,list (.*) to (.*),"['item', '']","['list', 'item']","['java.awt.EventQueue.invokeLater', 'javax.swing.JOptionPane.showConfirmDialog']"
12,list (.*) to (.*),"['randomly', 'according']","['pareto', 'principle']",['java.lang.Math.log']
13,list (.*) to (.*),['how'],['improve'],['java.util.Collections.synchronizedList']
14,list (.*) to (.*),['t'],['t'],['java.util.Arrays.asList']
15,list (.*) to (.*),"['of', 'strings']","['a', 'string']",['java.util.Collections.singletonList']
16,list (.*) to (.*),"['of', 'ints']","['a', 'word']","['java.util.Arrays.asList', 'java.util.Arrays.hashCode']"
17,list (.*) to (.*),"['fail', 'compared']","['collections', 'emptylist']",['java.util.Collections.emptyList']
18,list (.*) to (.*),"['with', 'indices']","['an', 'object']",['javax.xml.bind.JAXBContext.newInstance']
19,list (.*) to (.*),"['and', 'migrate']","['dto', 'layer']",['java.util.stream.Stream.concat']
20,list (.*) to (.*),['according'],['split'],['java.util.Collections.sort']
21,list (.*) to (.*),['unable'],"['use', 'contains']",['java.rmi.server.UID.equals']
22,list (.*) to (.*),['how'],['avoid'],['java.util.stream.Collectors.toMap']
23,list (.*) to (.*),['double'],"['a', 'double']",['java.util.Arrays.asList']
24,list (.*) to (.*),['map'],['str'],['java.util.Arrays.toString']
25,list (.*) to (.*),"['of', 'pojo']",['clipboard'],"['java.awt.Toolkit.getDefaultToolkit', 'java.util.logging.Logger.getLogger', 'java.lang.String.format']"
26,list (.*) to (.*),"['in', 'reference']",['order'],['java.util.Arrays.asList']
27,list (.*) to (.*),['content'],"['new', 'lists']",['java.util.stream.Collectors.groupingBy']
28,list (.*) to (.*),['arraylist'],['string'],['java.util.Arrays.toString']
0,execute (.*) using (.*),"['sql', 'script']",['java'],['java.lang.Runtime.getRuntime']
1,execute (.*) using (.*),['makefile'],"['java', 'command']",['java.lang.Runtime.getRuntime']
2,execute (.*) using (.*),"['azure', 'runbook']","['rest', 'api']","['java.util.UUID.randomUUID', 'java.lang.String.format']"
3,execute (.*) using (.*),"['allure', 'command']",['java'],"['java.lang.Thread.sleep', 'java.lang.Runtime.getRuntime']"
4,execute (.*) using (.*),"['a', 'file']","['java', 'runtime']",['java.lang.Runtime.exec']
5,execute (.*) using (.*),['commands'],['java'],['java.lang.Runtime.exec']
6,execute (.*) using (.*),"['shellscript', 'successfully']","['getruntime', 'exec']",['java.lang.Runtime.getRuntime']
7,execute (.*) using (.*),"['terminal', 'command']",[],['java.lang.Runtime.exec']
0,sort (.*) of (.*),"['an', 'array']",['objects'],['java.util.Arrays.sort']
1,sort (.*) of (.*),"['an', 'arraylist']",['strings'],['java.util.Collections.sort']
2,sort (.*) of (.*),['arraylist'],['array'],['java.util.Collections.sort']
3,sort (.*) of (.*),['jsonarray'],['jsonobjects'],['java.util.Collections.sort']
4,sort (.*) of (.*),"['an', 'array']",['objects'],['java.util.Arrays.sort']
5,sort (.*) of (.*),"['a', 'vector']","['custom', 'objects']",['java.util.Collections.sort']
6,sort (.*) of (.*),"['a', 'list']","['bigdecimal', 'objects']",['java.util.Collections.sort']
7,sort (.*) of (.*),['list'],['lists'],"['java.lang.Integer.compare', 'java.util.Collections.sort']"
8,sort (.*) of (.*),"['an', 'arraylist']","['point', 'objects']","['javax.swing.JOptionPane.showInputDialog', 'java.util.Collections.sort', 'java.lang.Integer.parseInt', 'javax.swing.JOptionPane.showMessageDialog']"
9,sort (.*) of (.*),"['only', 'subsection']",['array'],['java.util.Arrays.sort']
10,sort (.*) of (.*),"['an', 'array']",['objects'],['java.util.Arrays.sort']
11,sort (.*) of (.*),"['a', 'list']",['lists'],['java.util.Collections.sort']
12,sort (.*) of (.*),['list'],['hashmaps'],['java.util.Collections.sort']
13,sort (.*) of (.*),"['a', 'vector']","['custom', 'objects']",['java.util.Collections.sort']
14,sort (.*) of (.*),"['an', 'arraylist']","['integer', 'arrays']",['java.util.Collections.sort']
15,sort (.*) of (.*),"['a', 'vector']",['vectors'],['java.util.Collections.sort']
16,sort (.*) of (.*),"['an', 'arraylist']",['objects'],"['java.lang.Integer.compare', 'java.util.Collections.sort']"
17,sort (.*) of (.*),"['a', 'list']","['generic', 'interface']",['java.util.Collections.sort']
18,sort (.*) of (.*),"['an', 'arraylist']",['objects'],"['java.lang.Long.compare', 'java.lang.Long.parseLong', 'java.util.Collections.sort']"
19,sort (.*) of (.*),"['an', 'arraylist']",['objects'],['java.util.Collections.sort']
20,sort (.*) of (.*),"['two', 'arrays']","['different', 'length']",['java.lang.Math.min']
21,sort (.*) of (.*),['elements'],"['a', 'listview']",['java.util.Collections.sort']
22,sort (.*) of (.*),"['alphabetically', 'arraylist']",['strings'],['java.util.Collections.sort']
23,sort (.*) of (.*),"['a', 'list']","['ip', 'address']","['java.util.Arrays.stream', 'java.lang.Integer.compare', 'java.util.Collections.sort']"
24,sort (.*) of (.*),"['the', 'list']",['objects'],"['java.util.Collections.sort', 'java.util.Arrays.sort']"
25,sort (.*) of (.*),"['a', 'collection']",['objects'],['java.util.Collections.sort']
26,sort (.*) of (.*),['keys'],"['hashmap', 'java']","['java.lang.System.currentTimeMillis', 'java.util.Collections.sort']"
27,sort (.*) of (.*),['order'],"['soap', 'result']",['java.util.List.iterator']
28,sort (.*) of (.*),"['hierarchical', 'keys']","['map', 'collection']","['java.lang.Integer.compare', 'java.lang.Integer.parseInt', 'java.lang.Math.min']"
29,sort (.*) of (.*),"['an', 'arraylist']","['complex', 'type']",['java.util.Collections.sort']
30,sort (.*) of (.*),['chunks'],"['an', 'array']","['java.lang.Thread.sleep', 'java.lang.Integer.parseInt']"
31,sort (.*) of (.*),"['two', 'arraylists']",['integers'],"['java.util.Arrays.asList', 'java.util.Collections.sort']"
32,sort (.*) of (.*),"['my', 'arraylist']",['string'],['java.util.Collections.sort']
33,sort (.*) of (.*),"['map', 'inside']",['list'],['java.util.Collections.sort']
34,sort (.*) of (.*),"['by', 'means']","['a', 'comparator']","['java.lang.Integer.compare', 'java.lang.System.arraycopy', 'java.util.Arrays.sort']"
35,sort (.*) of (.*),"['by', 'parts']","['same', 'string']","['java.lang.Long.compare', 'java.lang.Long.valueOf', 'java.lang.Integer.compare', 'java.util.regex.Pattern.compile']"
36,sort (.*) of (.*),['list'],"['array', 'type']",['java.util.Arrays.sort']
37,sort (.*) of (.*),"['array', 'based']","['specific', 'element']",['java.util.Arrays.sort']
38,sort (.*) of (.*),['list'],['list'],"['java.util.Arrays.asList', 'java.util.Collections.sort']"
39,sort (.*) of (.*),"['an', 'list']",['references'],"['java.lang.System.identityHashCode', 'java.lang.Integer.compare', 'java.util.Collections.sort']"
40,sort (.*) of (.*),['list'],['methods'],['java.util.Collections.sort']
41,sort (.*) of (.*),"['a', 'collection']","['custom', 'entities']",['java.lang.Integer.compare']
42,sort (.*) of (.*),['index'],"['a', 'arraylist']","['java.util.Collections.sort', 'java.lang.String.valueOf']"
43,sort (.*) of (.*),['arraylist'],['classes'],['java.util.Collections.sort']
44,sort (.*) of (.*),['array'],['objects'],"['java.lang.Integer.parseInt', 'java.util.Collections.sort', 'java.util.Arrays.sort']"
45,sort (.*) of (.*),"['an', 'arraylist']",['objects'],['java.util.Collections.sort']
46,sort (.*) of (.*),['arraylist'],['objects'],['java.util.Collections.sort']
47,sort (.*) of (.*),"['a', 'list']","['string', 's']",['java.util.Collections.sort']
48,sort (.*) of (.*),"['a', 'list']",['list'],['java.util.Arrays.asList']
49,sort (.*) of (.*),['arrays'],"['different', 'datatypes']",['java.util.Arrays.sort']
50,sort (.*) of (.*),"['the', 'list']",['objects'],"['java.util.Collections.sort', 'java.util.Arrays.sort']"
51,sort (.*) of (.*),"['on', 'list']","['object', 'java']","['java.util.Collections.sort', 'java.util.Comparator.comparing']"
52,sort (.*) of (.*),['list'],"['multiple', 'list']",['java.util.Arrays.asList']
0,copy (.*) of (.*),['section'],['array'],['java.lang.System.arraycopy']
1,copy (.*) of (.*),['value'],['array'],['java.util.Arrays.toString']
2,copy (.*) of (.*),['contents'],"['direct', 'bytebuffer']",['java.nio.ByteBuffer.allocateDirect']
3,copy (.*) of (.*),['element'],['array'],['java.lang.System.arraycopy']
4,copy (.*) of (.*),"['dimensional', 'array']",['objects'],['java.util.Arrays.copyOf']
5,copy (.*) of (.*),"['a', 'section']","['an', 'array']",['java.lang.System.arraycopy']
0,set (.*) from (.*),"['jstl', 'locale']","['java', 'code']",['java.util.Locale.forLanguageTag']
1,set (.*) from (.*),"['maven', 'property']",['plugin'],['java.util.Properties.setProperty']
2,set (.*) from (.*),"['or', 'subset']","['arraylist', 'objects']",['java.lang.Math.min']
3,set (.*) from (.*),['price'],['arraylist'],['java.lang.Double.parseDouble']
4,set (.*) from (.*),"['of', 'elements']","['an', 'array']",['java.util.Arrays.copyOf']
5,set (.*) from (.*),"['a', 'double']","['two', 'integers']",['java.lang.Double.parseDouble']
6,set (.*) from (.*),"['testng', 'timeout']",['testcase'],['java.lang.Thread.sleep']
7,set (.*) from (.*),['quality'],"['command', 'line']",['java.lang.Integer.parseInt']
8,set (.*) from (.*),"['timepicker', 'time']","['textview', 'text']",['java.util.Calendar.getInstance']
9,set (.*) from (.*),['file'],"['java', 'code']",['java.lang.System.getenv']
10,set (.*) from (.*),"['jre', 'variables']","['java', 'code']",['java.lang.System.getenv']
11,set (.*) from (.*),"['of', 'requestheaders']",['httpservletrequest'],['java.lang.Long.parseLong']
12,set (.*) from (.*),['created'],"['complex', 'list']",['java.util.stream.Collectors.maxBy']
13,set (.*) from (.*),['size'],"['a', 'hashmap']",['java.util.Collections.max']
0,implement (.*) for (.*),['toarray'],['collection'],['java.util.Arrays.copyOf']
1,implement (.*) for (.*),"['a', 'messagebodywriter']",['list'],"['java.nio.charset.Charset.forName', 'java.lang.System.exit']"
2,implement (.*) for (.*),['getmaxamplitude'],['audiorecord'],['java.util.Calendar.getInstance']
3,implement (.*) for (.*),['interfaces'],['threads'],['javax.swing.JOptionPane.showMessageDialog']
4,implement (.*) for (.*),"['custom', 'iterator']","['multidimensional', 'array']",['java.util.Arrays.stream']
5,implement (.*) for (.*),"['comma', 'separator']",['text'],['java.util.Arrays.asList']
0,fill (.*) with (.*),"['an', 'array']","['consecutive', 'numbers']","['java.util.stream.IntStream.range', 'java.util.stream.IntStream.rangeClosed']"
1,fill (.*) with (.*),['array'],['supplier'],"['java.util.Arrays.asList', 'java.util.Arrays.setAll', 'java.util.stream.IntStream.generate', 'java.util.stream.Stream.generate']"
2,fill (.*) with (.*),['parent'],"['little', 'margin']",['javax.swing.BorderFactory.createEmptyBorder']
3,fill (.*) with (.*),"['a', 'matrix']","['and', 'recursively']",['java.lang.System.exit']
4,fill (.*) with (.*),['it'],"['random', 'number']",['java.lang.Math.floor']
5,fill (.*) with (.*),['objects'],"['random', 'color']","['java.awt.Color.getHSBColor', 'javax.swing.SwingUtilities.invokeLater', 'java.awt.geom.AffineTransform.getTranslateInstance']"
6,fill (.*) with (.*),"['multiple', 'arrays']","['one', 'array']","['java.util.Collections.shuffle', 'java.lang.System.arraycopy']"
7,fill (.*) with (.*),['panel'],['gridbagconstraints'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
8,fill (.*) with (.*),"['d', 'array']","['specific', 'method']",['java.lang.Integer.parseInt']
9,fill (.*) with (.*),['histogram'],"['array', 'data']","['java.util.Arrays.stream', 'java.awt.EventQueue.invokeLater']"
10,fill (.*) with (.*),"['arbitrary', 'collection']",['integers'],"['java.util.stream.Collectors.toCollection', 'java.util.stream.IntStream.range']"
11,fill (.*) with (.*),['arrays'],"['same', 'value']",['java.util.Arrays.fill']
0,display (.*) on (.*),['it'],"['a', 'jlabel']",['javax.imageio.ImageIO.read']
1,display (.*) on (.*),"['double', 'value']","['edittext', 'android']",['java.lang.Double.parseDouble']
2,display (.*) on (.*),['it'],"['a', 'jtable']","['java.sql.DriverManager.getConnection', 'javax.swing.JOptionPane.showMessageDialog']"
3,display (.*) on (.*),['anything'],['jlabel'],['java.lang.System.arraycopy']
4,display (.*) on (.*),['messages'],"['standard', 'output']",['java.util.logging.Logger.getLogger']
5,display (.*) on (.*),"['changing', 'progress']","['command', 'line']",['java.lang.Thread.sleep']
6,display (.*) on (.*),"['text', 'input']",['page'],['org.w3c.dom.events.Event.preventDefault']
7,display (.*) on (.*),['jtextfield'],"['joptionpane', 'showmessagedialog']",['javax.swing.JOptionPane.showMessageDialog']
8,display (.*) on (.*),['them'],['circle'],"['java.lang.Math.cos', 'java.lang.Math.atan2']"
9,display (.*) on (.*),['jpanel'],"['another', 'jframe']",['javax.swing.SwingUtilities.invokeLater']
10,display (.*) on (.*),['jbutton'],"['the', 'splashscreen']","['javax.swing.SwingUtilities.invokeLater', 'java.util.logging.Logger.getLogger', 'java.lang.System.exit', 'javax.swing.UIManager.setLookAndFeel']"
11,display (.*) on (.*),['delayed'],['jframe'],['java.lang.Thread.sleep']
12,display (.*) on (.*),"['in', 'swing']",['osx'],"['javax.imageio.ImageIO.read', 'java.awt.EventQueue.invokeLater']"
13,display (.*) on (.*),"['postgresql', 'dates']","['java', 'jtable']",['javax.swing.JOptionPane.showMessageDialog']
14,display (.*) on (.*),['image'],['applet'],['javax.imageio.ImageIO.read']
15,display (.*) on (.*),"['average', 'based']","['code', 'listed']","['java.lang.Double.parseDouble', 'java.lang.Integer.parseInt', 'javax.swing.JOptionPane.showMessageDialog']"
16,display (.*) on (.*),"['changing', 'text']",['output'],['java.lang.Thread.sleep']
17,display (.*) on (.*),"['it', 'automoticlly']","['my', 'jtextpane']","['java.awt.EventQueue.invokeLater', 'java.lang.Character.toUpperCase']"
18,display (.*) on (.*),['gui'],['mac'],['javax.swing.SwingUtilities.invokeLater']
0,calculate (.*) in (.*),"['gesture', 'distance']",['android'],['java.lang.Math.sqrt']
1,calculate (.*) in (.*),"['month', 'ago']",['milliseconds'],['java.util.Calendar.getInstance']
2,calculate (.*) in (.*),['difference'],['days'],"['java.time.LocalDate.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
3,calculate (.*) in (.*),['pi'],"['threads', 'java']",['java.lang.Math.pow']
4,calculate (.*) in (.*),['logarithm'],"['java', 'me']",['java.lang.Double.doubleToLongBits']
5,calculate (.*) in (.*),['simrank'],"['jung', 'graph']","['java.lang.String.valueOf', 'java.lang.String.format']"
6,calculate (.*) in (.*),"['running', 'total']",['jtable'],"['java.text.NumberFormat.getCurrencyInstance', 'javax.swing.SwingUtilities.invokeLater', 'java.lang.Double.parseDouble']"
7,calculate (.*) in (.*),['median'],"['spark', 'java']",['java.util.Arrays.asList']
8,calculate (.*) in (.*),"['with', 'numbers']","['the', 'listview']","['java.lang.String.valueOf', 'java.lang.Integer.parseInt']"
9,calculate (.*) in (.*),['milliseconds'],"['blackberry', 'java']",['java.lang.System.currentTimeMillis']
0,update (.*) with (.*),"['sql', 'database']",['preparedstatement'],['java.util.logging.Logger.getLogger']
1,update (.*) with (.*),['jtable'],"['separate', 'thread']",['javax.swing.SwingUtilities.invokeLater']
2,update (.*) with (.*),"['the', 'jframe']","['thread', 'info']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
3,update (.*) with (.*),['database'],['jsp'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
4,update (.*) with (.*),['subscription'],"['callback', 'url']",['java.lang.System.getProperty']
5,update (.*) with (.*),['string'],['parameters'],"['java.util.Arrays.asList', 'java.text.MessageFormat.format']"
6,update (.*) with (.*),['labels'],"['the', 'coordinates']",['java.awt.MouseInfo.getPointerInfo']
0,call (.*) with (.*),['statistics'],['jmx'],['java.util.logging.LogManager.getLogger']
1,call (.*) with (.*),"['a', 'constructor']",['varargs'],"['java.util.Arrays.fill', 'java.lang.Class.forName', 'java.lang.invoke.MethodHandles.lookup', 'java.lang.Class.getConstructors']"
2,call (.*) with (.*),"['a', 'method']","['a', 'string']",['java.lang.reflect.Method.invoke']
3,call (.*) with (.*),['function'],"['different', 'combinations']","['java.lang.reflect.Array.set', 'java.lang.System.arraycopy']"
4,call (.*) with (.*),"['enum', 'methods']","['dynamic', 'values']",['java.util.Collections.unmodifiableMap']
5,call (.*) with (.*),"['in', 'java']","['basic', 'authentication']",['java.util.Base64.getEncoder']
6,call (.*) with (.*),['ambiguity'],"['ternary', 'operator']",['java.lang.String.valueOf']
7,call (.*) with (.*),"['to', 'linkedlist']","['generic', 'type']",['java.util.Arrays.asList']
8,call (.*) with (.*),"['a', 'method']","['multiple', 'threads']",['java.lang.Thread.sleep']
9,call (.*) with (.*),['actionperformed'],"['different', 'parameters']",['java.util.Collections.addAll']
0,add (.*) on (.*),"['remove', 'jbuttons']",['runtime'],['javax.swing.JOptionPane.showMessageDialog']
1,add (.*) on (.*),['label'],['drawing'],"['javax.swing.SwingUtilities.invokeLater', 'java.awt.geom.AffineTransform.getTranslateInstance']"
2,add (.*) on (.*),"['runtime', 'dependency']","['another', 'module']",['java.util.ServiceLoader.load']
3,add (.*) on (.*),"['joptionpane', 'messages']",['method'],['javax.swing.JOptionPane.showMessageDialog']
4,add (.*) on (.*),"['wrapper', 'based']","['field', 'values']","['java.util.stream.Stream.of', 'java.lang.String.join', 'java.util.Objects.requireNonNull']"
5,add (.*) on (.*),"['gui', 'based']",['mouse'],['javax.swing.SwingUtilities.invokeLater']
6,add (.*) on (.*),"['command', 'a']","['a', 'jtextfield']",['java.awt.EventQueue.invokeLater']
7,add (.*) on (.*),['characters'],['focus'],"['java.text.NumberFormat.getInstance', 'java.lang.System.exit']"
8,add (.*) on (.*),['jscrollpane'],"['the', 'jtextarea']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel', 'java.lang.System.exit', 'javax.swing.KeyStroke.getKeyStroke']"
9,add (.*) on (.*),"['lists', 'depending']","['specified', 'order']",['java.util.Arrays.asList']
0,split (.*) to (.*),['string'],['array'],['java.lang.String.split']
1,split (.*) to (.*),"['a', 'string']","['an', 'arraylist']",['java.util.Arrays.asList']
2,split (.*) to (.*),['string'],['double'],['java.util.regex.Pattern.compile']
3,split (.*) to (.*),['due'],"['wrong', 'recursion']",['java.lang.String.split']
4,split (.*) to (.*),"['bit', 'value']","['four', 'bit']","['java.lang.Long.parseUnsignedLong', 'java.lang.Long.parseLong']"
5,split (.*) to (.*),"['string', 'array']","['int', 'array']",['java.lang.Integer.parseInt']
6,split (.*) to (.*),['text'],['arrays'],['java.util.regex.Pattern.compile']
7,split (.*) to (.*),"['it', 'and']","['store', 'it']",['java.util.regex.Pattern.compile']
8,split (.*) to (.*),"['converting', 'strings']",['int'],['java.lang.Integer.parseInt']
0,log (.*) to (.*),['j'],"['use', 'stdout']",['java.util.logging.Logger.getLogger']
1,log (.*) to (.*),"['custom', 'loggers']",['file'],"['java.net.InetAddress.getLocalHost', 'java.lang.management.ManagementFactory.getPlatformMBeanServer', 'java.util.UUID.randomUUID']"
2,log (.*) to (.*),['j'],"['specific', 'file']",['java.lang.System.setProperty']
3,log (.*) to (.*),['type'],['use'],['java.lang.ClassLoader.getSystemResources']
4,log (.*) to (.*),"['files', 'adding']","['each', 'other']",['java.util.logging.Logger.getLogger']
5,log (.*) to (.*),"['vb', 'net']",['java'],['java.util.logging.Logger.getLogger']
0,implement (.*) using (.*),"['draggable', 'tab']","['java', 'swing']","['java.awt.AlphaComposite.getInstance', 'javax.swing.SwingUtilities.convertPointFromScreen', 'javax.swing.SwingUtilities.convertPoint']"
1,implement (.*) using (.*),"['rpc', 'mechanism']",['rabbitmq'],['java.lang.System.exit']
2,implement (.*) using (.*),['animation'],"['swing', 'timer']",['java.lang.System.currentTimeMillis']
3,implement (.*) using (.*),"['sound', 'captcha']","['jcaptcha', 'library']",['javax.sound.sampled.AudioSystem.write']
4,implement (.*) using (.*),['pulltorefreshlistview'],['jazzylistview'],"['java.lang.System.currentTimeMillis', 'java.lang.Math.max']"
5,implement (.*) using (.*),"['stack', 'iteration']","['java', 'stream']",['java.util.stream.Stream.iterate']
6,implement (.*) using (.*),"['an', 'interface']",['java'],['java.lang.String.valueOf']
7,implement (.*) using (.*),"['this', 'method']","['java', 'template']",['java.lang.Class.forName']
8,implement (.*) using (.*),"['reverseorder', 'method']","['comparator', 't']",['java.util.Collections.sort']
9,implement (.*) using (.*),['arguments'],"['system', 'property']",['java.lang.System.getProperty']
0,update (.*) from (.*),"['in', 'java']","['the', 'internet']","['javax.imageio.ImageIO.read', 'javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
1,update (.*) from (.*),"['jtable', 'row']","['another', 'thread']","['java.lang.Thread.sleep', 'javax.swing.SwingUtilities.invokeLater']"
2,update (.*) from (.*),['text'],['task'],['java.lang.Thread.sleep']
3,update (.*) from (.*),['jlist'],"['another', 'thread']",['javax.swing.SwingUtilities.invokeLater']
4,update (.*) from (.*),"['when', 'settext']","['another', 'method']",['java.lang.System.exit']
5,update (.*) from (.*),"['the', 'ui']","['other', 'thread']","['java.lang.Thread.sleep', 'javax.swing.SwingUtilities.invokeLater']"
6,update (.*) from (.*),['jlist'],['events'],['java.util.Collections.list']
7,update (.*) from (.*),['jtextfield'],"['another', 'jtextfield']","['java.lang.String.valueOf', 'java.lang.Integer.parseInt']"
8,update (.*) from (.*),['atomicinteger'],"['other', 'thread']","['java.lang.Thread.sleep', 'java.lang.Thread.join']"
9,update (.*) from (.*),"['table', 'row']",['task'],['java.lang.Thread.sleep']
10,update (.*) from (.*),['message'],"['incapsulated', 'variable']",['java.lang.Thread.sleep']
11,update (.*) from (.*),['database'],['textbox'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
12,update (.*) from (.*),['column'],['jtextfield'],['java.lang.Integer.parseInt']
0,validate (.*) in (.*),"['csv', 'header']","['open', 'csv']",['java.util.Arrays.asList']
1,validate (.*) in (.*),"['image', 'upload']",['playframework'],['javax.imageio.ImageIO.read']
2,validate (.*) in (.*),"['blank', 'fields']",['javafx'],['javax.swing.JOptionPane.showMessageDialog']
3,validate (.*) in (.*),"['textfield', 'input']",['gui'],"['java.lang.Integer.parseInt', 'javax.swing.JOptionPane.showMessageDialog']"
4,validate (.*) in (.*),"['path', 'chains']",['certificate'],"['java.security.cert.CertPathBuilder.getInstance', 'java.security.cert.CertStore.getInstance']"
5,validate (.*) in (.*),['range'],['android'],['java.util.Calendar.getInstance']
6,validate (.*) in (.*),"['user', 'input']",['android'],['java.util.regex.Pattern.compile']
7,validate (.*) in (.*),"['null', 'fields']","['prepared', 'statement']",['java.util.Objects.requireNonNull']
0,add (.*) into (.*),"['an', 'array']","['set', 'properly']",['java.util.Arrays.asList']
1,add (.*) into (.*),"['xml', 'comments']","['marshaled', 'file']","['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
2,add (.*) into (.*),['jcombobox'],"['the', 'jfilechooser']",['java.awt.EventQueue.invokeLater']
3,add (.*) into (.*),['value'],['it'],['java.util.AbstractMap.toString']
4,add (.*) into (.*),['components'],"['a', 'jpanel']",['javax.swing.SwingUtilities.invokeLater']
5,add (.*) into (.*),"['invisible', 'components']",['jpanel'],"['javax.swing.Box.createHorizontalStrut', 'javax.swing.Box.createVerticalStrut']"
6,add (.*) into (.*),"['string', 'array']","['calendar', 'array']",['java.util.Calendar.getInstance']
7,add (.*) into (.*),"['jsonarray', 'data']",['arraylist'],['java.lang.Double.parseDouble']
8,add (.*) into (.*),"['valid', 'input']",['arraylist'],"['java.util.regex.Pattern.compile', 'java.lang.System.exit']"
9,add (.*) into (.*),['chilkatsoft'],"['netbeans', 'java']","['java.lang.System.loadLibrary', 'java.lang.System.exit']"
10,add (.*) into (.*),['data'],['tableviewer'],['java.util.Arrays.asList']
11,add (.*) into (.*),"['arraylist', 'data']",['jtable'],['java.util.logging.Logger.getLogger']
12,add (.*) into (.*),['object'],['list'],['java.util.stream.IntStream.range']
0,search (.*) for (.*),['files'],"['a', 'keyword']",['java.util.regex.Pattern.compile']
1,search (.*) for (.*),['query'],"['multiple', 'entities']",['java.time.LocalDate.now']
2,search (.*) for (.*),['path'],['executables'],['java.lang.Runtime.getRuntime']
3,search (.*) for (.*),"['java', 'stdout']","['a', 'variable']",['java.lang.System.exit']
4,search (.*) for (.*),['file'],"['encoded', 'tags']",['java.util.Collections.indexOfSubList']
5,search (.*) for (.*),"['an', 'array']","['a', 'value']","['java.lang.Double.parseDouble', 'java.lang.Integer.parseInt', 'java.text.NumberFormat.getCurrencyInstance', 'java.lang.System.exit', 'java.lang.System.lineSeparator']"
6,search (.*) for (.*),['string'],"['certain', 'wordgroups']",['java.lang.String.split']
7,search (.*) for (.*),"['string', 'array']",['string'],['java.util.Arrays.asList']
0,test (.*) in (.*),['classpath'],['eclipse'],['java.lang.Thread.currentThread']
1,test (.*) in (.*),['exception'],"['completable', 'future']",['java.util.concurrent.CompletableFuture.supplyAsync']
2,test (.*) in (.*),['invocation'],['testng'],"['java.util.Arrays.asList', 'java.lang.Integer.parseInt']"
3,test (.*) in (.*),"['for', 'order']",['linkedhashset'],['java.util.Arrays.asList']
4,test (.*) in (.*),['selenium'],['fitnesse'],['java.lang.System.setProperty']
5,test (.*) in (.*),['data'],['junit'],['java.util.Arrays.asList']
6,test (.*) in (.*),['data'],['junit'],['java.lang.Double.parseDouble']
7,test (.*) in (.*),['class'],"['another', 'class']","['javax.swing.JOptionPane.showInputDialog', 'java.lang.Math.abs', 'java.lang.Math.sqrt', 'java.lang.Integer.parseInt']"
8,test (.*) in (.*),['lists'],['junit'],['java.util.Arrays.asList']
9,test (.*) in (.*),"['fine', 'granularity']","['multithreaded', 'program']",['java.lang.System.nanoTime']
10,test (.*) in (.*),"['bigger', 'services']",['spring'],"['java.util.Collections.singletonList', 'java.util.Optional.empty']"
11,test (.*) in (.*),['it'],"['junit', 'testing']","['java.lang.System.setErr', 'java.lang.System.setOut']"
12,test (.*) in (.*),['cases'],"['online', 'judge']",['java.lang.Math.pow']
13,test (.*) in (.*),['running'],['eclipse'],['java.lang.System.getProperty']
14,test (.*) in (.*),['case'],"['java', 'selenium']",['java.lang.System.currentTimeMillis']
15,test (.*) in (.*),"['my', 'method']","['another', 'class']",['java.lang.String.format']
16,test (.*) in (.*),['class'],['junit'],['java.util.regex.Pattern.matches']
17,test (.*) in (.*),"['for', 'number']","['jtext', 'fields']","['java.lang.Double.parseDouble', 'java.lang.Integer.parseInt']"
0,implement (.*) with (.*),['pagination'],"['graphql', 'java']",['java.lang.Integer.valueOf']
1,implement (.*) with (.*),"['lazy', 'loading']",['jqgrid'],['java.lang.Integer.valueOf']
2,implement (.*) with (.*),"['timer', 'task']","['callable', 'thread']",['java.util.concurrent.Executors.newCachedThreadPool']
3,implement (.*) with (.*),['listselectionlistener'],['jformdesigner'],['java.awt.EventQueue.invokeLater']
4,implement (.*) with (.*),"['a', 'runnable']",['timeout'],['java.util.concurrent.Executors.newSingleThreadExecutor']
5,implement (.*) with (.*),"['easing', 'functions']","['a', 'thread']","['java.awt.EventQueue.invokeLater', 'java.lang.Math.sqrt', 'java.lang.System.currentTimeMillis', 'javax.swing.UIManager.setLookAndFeel']"
6,implement (.*) with (.*),['treemap'],['comparator'],['java.util.Comparator.comparingInt']
7,implement (.*) with (.*),"['a', 'map']","['independent', 'keys']",['java.util.HashMap.get']
8,implement (.*) with (.*),['interface'],"['multiple', 'ejbs']",['java.lang.Math.random']
9,implement (.*) with (.*),"['generic', 'types']",['currying'],['java.util.stream.Stream.of']
10,implement (.*) with (.*),"['wait', 'notify']",['threadexecutor'],['java.util.concurrent.Executors.newFixedThreadPool']
0,calculate (.*) with (.*),"['weighted', 'average']","['java', 'streams']",['java.util.stream.Collector.of']
1,calculate (.*) with (.*),['fibonacci'],['threads'],['java.math.BigInteger.valueOf']
2,calculate (.*) with (.*),"['elapsed', 'time']","['system', 'currenttimemillis']",['java.lang.System.currentTimeMillis']
3,calculate (.*) with (.*),"['overlap', 'duration']",['interval'],"['java.time.LocalDateTime.parse', 'java.time.Duration.between', 'java.time.ZoneId.of', 'java.time.LocalTime.of']"
4,calculate (.*) with (.*),"['monthly', 'repayments']","['bigdecimal', 'calculations']","['java.math.BigDecimal.valueOf', 'java.lang.Math.pow']"
5,calculate (.*) with (.*),['throughput'],['jconsole'],"['java.lang.Thread.sleep', 'java.lang.System.gc']"
6,calculate (.*) with (.*),"['entire', 'week']","['skipped', 'days']",['java.util.Arrays.asList']
7,calculate (.*) with (.*),"['compound', 'interest']",['java'],['java.text.NumberFormat.getCurrencyInstance']
8,calculate (.*) with (.*),"['hours', 'difference']","['another', 'timezone']","['java.util.TimeZone.getTimeZone', 'java.util.TimeZone.getDefault', 'java.lang.Math.abs', 'java.lang.System.currentTimeMillis']"
9,calculate (.*) with (.*),['vectors'],['java'],['java.lang.Math.cos']
0,search (.*) with (.*),['parameters'],"['multiple', 'joins']",['java.lang.Long.parseLong']
1,search (.*) with (.*),"['connection', 'refused']","['java', 'resthighlevelclient']",['java.lang.Integer.valueOf']
2,search (.*) with (.*),['box'],"['cesium', 'js']",['java.lang.Math.sqrt']
3,search (.*) with (.*),"['phone', 'number']","['regex', 'java']",['java.util.regex.Pattern.compile']
4,search (.*) with (.*),['bar'],"['multiple', 'filters']",['javax.swing.SwingUtilities.invokeLater']
5,search (.*) with (.*),['sorting'],['collation'],"['java.util.Objects.equals', 'java.text.Collator.getInstance', 'java.util.Objects.hash']"
0,detect (.*) in (.*),"['null', 'reference']","['an', 'array']",['java.util.Arrays.asList']
1,detect (.*) in (.*),"['hebrew', 'letters']",['strings'],['java.util.regex.Pattern.compile']
2,detect (.*) in (.*),['timezone'],"['simpledateformat', 'pattern']",['java.util.regex.Pattern.compile']
3,detect (.*) in (.*),"['duplicate', 'characters']","['a', 'string']",['java.lang.Character.isHighSurrogate']
4,detect (.*) in (.*),['recursion'],"['java', 'methods']",['java.lang.Thread.currentThread']
5,detect (.*) in (.*),"['design', 'time']",['netbeans'],['java.beans.Beans.isDesignTime']
6,detect (.*) in (.*),"['duplicate', 'characters']",['string'],['java.util.regex.Pattern.compile']
0,sum (.*) of (.*),"['a', 'stream']",['integers'],['java.util.stream.IntStream.of']
1,sum (.*) of (.*),['list'],['lists'],"['java.util.Arrays.asList', 'java.util.stream.IntStream.range']"
0,test (.*) with (.*),"['a', 'method']","['a', 'scanner']",['java.lang.System.setIn']
1,test (.*) with (.*),"['date', 'created']","['localdatetime', 'now']",['java.time.LocalDateTime.now']
2,test (.*) with (.*),"['multithreading', 'completablefuture']",['easymock'],"['java.lang.Thread.sleep', 'java.util.Arrays.asList']"
3,test (.*) with (.*),"['dial', 'activity']",['espresso'],['java.lang.Thread.sleep']
4,test (.*) with (.*),['simpledateformat'],['timezone'],"['java.time.OffsetDateTime.now', 'java.time.ZoneOffset.ofHours', 'java.time.OffsetDateTime.of', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.ZoneOffset.of']"
5,test (.*) with (.*),['awt'],['springboot'],['java.lang.System.setProperty']
6,test (.*) with (.*),['description'],"['junit', 'runlistner']",['java.lang.System.setOut']
7,test (.*) with (.*),['it'],"['reactive', 'programming']",['java.lang.String.join']
8,test (.*) with (.*),"['a', 'method']",['mocking'],"['java.lang.Long.compare', 'java.lang.management.ManagementFactory.getThreadMXBean']"
9,test (.*) with (.*),"['class', 'ctor']",['params'],"['java.lang.Class.forName', 'java.lang.System.exit']"
10,test (.*) with (.*),"['next', 'code']",['junit'],['java.lang.System.setOut']
0,remove (.*) in (.*),"['all', 'elements']","['string', 'array']",['java.util.Arrays.fill']
1,remove (.*) in (.*),"['character', 't']",['localdate'],"['java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
2,remove (.*) in (.*),"['by', 'index']",['linkedlist'],['java.util.LinkedList.remove']
3,remove (.*) in (.*),"['tab', 'borders']",['jtabbedpane'],['javax.swing.UIManager.put']
4,remove (.*) in (.*),"['button', 'dynamically']","['swing', 'frame']","['javax.swing.SwingUtilities.invokeLater', 'java.lang.Math.max']"
5,remove (.*) in (.*),"['question', 'mark']","['a', 'joptionpane']",['javax.swing.JOptionPane.showConfirmDialog']
6,remove (.*) in (.*),"['immediate', 'tags']","['xml', 'string']",['java.util.regex.Pattern.compile']
7,remove (.*) in (.*),"['html', 'tag']","['a', 'string']","['java.util.regex.Pattern.compile', 'java.util.Arrays.sort']"
8,remove (.*) in (.*),['repeats'],"['a', 'collection']",['java.util.Arrays.asList']
9,remove (.*) in (.*),['punctuation'],"['strings', 'java']",['java.util.Arrays.sort']
10,remove (.*) in (.*),['duplicates'],"['some', 'cases']","['java.lang.Integer.hashCode', 'java.lang.Integer.compare', 'java.util.Comparator.comparing', 'java.util.stream.Stream.of']"
11,remove (.*) in (.*),"['this', 'bar']",['fullscreenmode'],"['java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment', 'javax.swing.SwingUtilities.invokeLater']"
12,remove (.*) in (.*),['method'],['java'],['java.util.Collections.synchronizedList']
13,remove (.*) in (.*),['the'],"['a', 'fraction']",['java.lang.Math.round']
14,remove (.*) in (.*),['duplicates'],"['long', 'array']",['java.util.Arrays.asList']
15,remove (.*) in (.*),"['duplicate', 'objects']",['arraylist'],"['java.util.stream.Collectors.toMap', 'java.util.Map.merge']"
16,remove (.*) in (.*),['buttons'],['jlabel'],['javax.swing.SwingUtilities.invokeLater']
17,remove (.*) in (.*),"['last', 'destination']",['path'],['java.nio.file.Paths.get']
18,remove (.*) in (.*),"['specific', 'line']","['text', 'file']",['java.lang.System.getProperty']
19,remove (.*) in (.*),"['one', 'letter']",['jsoup'],['java.lang.Double.parseDouble']
0,match (.*) with (.*),"['exact', 'word']","['special', 'characters']",['java.util.regex.Pattern.compile']
1,match (.*) with (.*),"['a', 'long']","['java', 'regex']",['java.util.regex.Pattern.compile']
2,match (.*) with (.*),"['some', 'pattern']","['line', 'break']",['java.util.regex.Pattern.compile']
3,match (.*) with (.*),['arrays'],"['different', 'sizes']",['java.util.Arrays.asList']
4,match (.*) with (.*),"['string', 'ending']","['regex', 'java']",['java.util.regex.Pattern.compile']
5,match (.*) with (.*),"['whole', 'word']","['word', 'boundary']",['java.util.regex.Pattern.quote']
6,match (.*) with (.*),"['of', 'group']",['asterisk'],"['java.lang.String.split', 'java.util.regex.Pattern.compile']"
7,match (.*) with (.*),['pattern'],['priority'],['java.util.regex.Pattern.compile']
8,match (.*) with (.*),['verification'],['sha'],"['java.security.MessageDigest.getInstance', 'java.util.logging.Logger.getLogger']"
9,match (.*) with (.*),['url'],"['the', 'pattern']",['java.util.regex.Matcher.find']
10,match (.*) with (.*),"['cyrillic', 'characters']",['w'],"['java.lang.Character.toLowerCase', 'java.util.regex.Pattern.compile', 'java.lang.Character.toUpperCase']"
11,match (.*) with (.*),"['multiple', 'occurences']","['my', 'regex']",['java.util.regex.Pattern.compile']
12,match (.*) with (.*),['pattern'],"['optional', 'word']",['java.util.regex.Pattern.compile']
0,issue (.*) to (.*),['unable'],['connect'],['java.io.RandomAccessFile.readInt']
1,issue (.*) to (.*),['compared'],['perl'],['java.util.regex.Pattern.compile']
2,issue (.*) to (.*),"['converting', 'double']",['boolean'],['java.lang.Double.parseDouble']
3,issue (.*) to (.*),['new'],['java'],"['java.lang.Integer.toString', 'java.lang.Integer.parseInt']"
4,issue (.*) to (.*),"['getting', 'program']","['run', 'java']","['java.lang.Integer.parseInt', 'java.lang.System.exit', 'javax.swing.JOptionPane.showMessageDialog']"
5,issue (.*) to (.*),"['android', 'widget']",['int'],['java.lang.Integer.parseInt']
6,issue (.*) to (.*),['converting'],['seconds'],['java.lang.System.currentTimeMillis']
0,return (.*) of (.*),"['a', 'list']",['strings'],['java.util.Arrays.asList']
1,return (.*) of (.*),['optional'],"['a', 'method']","['java.util.Optional.of', 'java.util.Optional.empty']"
2,return (.*) of (.*),['type'],"['arrays', 'aslist']",['java.util.Arrays.asList']
3,return (.*) of (.*),"['a', 'copy']","['an', 'array']","['java.util.Arrays.copyOf', 'java.lang.System.arraycopy']"
4,return (.*) of (.*),"['a', 'sequence']","['normalized', 'strings']",['javax.xml.xpath.XPathFactory.newInstance']
5,return (.*) of (.*),"['formatted', 'string']","['an', 'int']",['java.lang.String.format']
6,return (.*) of (.*),"['type', 'array']",['doubles'],['java.lang.Math.pow']
7,return (.*) of (.*),['instead'],['z'],"['java.time.format.DateTimeFormatter.ofPattern', 'java.time.ZoneId.systemDefault']"
8,return (.*) of (.*),"['object', 'instead']","['actual', 'type']",['java.util.ArrayList.clone']
9,return (.*) of (.*),['array'],"['prime', 'factors']",['java.util.Arrays.copyOf']
10,return (.*) of (.*),"['a', 'stream']",['data'],['java.lang.Math.ceil']
11,return (.*) of (.*),"['a', 'list']",['records'],['java.util.List.addAll']
12,return (.*) of (.*),"['type', 'part']","['the', 'erasure']","['java.net.URLClassLoader.findClass', 'java.lang.ClassLoader.loadClass', 'java.lang.ClassLoader.defineClass', 'java.security.SecureClassLoader.defineClass', 'java.security.AccessController.doPrivileged']"
13,return (.*) of (.*),['arrays'],"['differing', 'length']","['java.lang.Class.getInterfaces', 'java.lang.Class.getGenericInterfaces']"
14,return (.*) of (.*),['values'],"['an', 'executable']",['java.lang.Thread.sleep']
15,return (.*) of (.*),"['infinity', 'instead']",['error'],['java.lang.Double.parseDouble']
16,return (.*) of (.*),"['a', 'result']","['type', 'inputstream']",['java.lang.Thread.sleep']
17,return (.*) of (.*),"['double', 'value']","['string', 'passed']",['java.lang.Double.parseDouble']
18,return (.*) of (.*),['array'],"['dynamic', 'type']","['java.lang.reflect.Array.newInstance', 'java.lang.reflect.Array.set', 'java.lang.System.arraycopy']"
19,return (.*) of (.*),['text'],['components'],['javax.swing.text.StyleConstants.setComponent']
20,return (.*) of (.*),"['the', 'copy']","['the', 'array']",['java.util.Arrays.asList']
21,return (.*) of (.*),"['image', 'dimension']","['size', 'x']",['java.util.Arrays.asList']
22,return (.*) of (.*),['array'],['functions'],['java.util.Arrays.asList']
23,return (.*) of (.*),"['the', 'sum']","['all', 'integers']","['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
24,return (.*) of (.*),['instead'],['null'],"['java.util.Optional.of', 'java.util.Optional.empty']"
25,return (.*) of (.*),['list'],['keys'],['java.util.stream.Collectors.toList']
26,return (.*) of (.*),"['my', 'array']",['cards'],['java.nio.file.Files.readAllLines']
27,return (.*) of (.*),"['object', 'instead']",['e'],"['javax.swing.JComboBox.getModel', 'javax.swing.JComboBox.setEditable']"
28,return (.*) of (.*),['list'],['values'],"['java.util.stream.Stream.iterate', 'java.util.stream.Stream.of']"
29,return (.*) of (.*),"['a', 'list']","['any', 'type']","['java.util.Arrays.stream', 'java.util.Collections.emptyList']"
30,return (.*) of (.*),"['different', 'types']",['object'],"['java.util.Optional.of', 'java.util.Optional.ofNullable']"
31,return (.*) of (.*),"['current', 'index']","['an', 'element']",['java.lang.Math.abs']
32,return (.*) of (.*),['array'],['int'],['java.lang.Integer.toHexString']
33,return (.*) of (.*),['datatype'],"['original', 'method']",['java.util.concurrent.CompletableFuture.supplyAsync']
34,return (.*) of (.*),"['the', 'pid']","['a', 'process']",['java.util.regex.Pattern.compile']
35,return (.*) of (.*),"['any', 'type']",['objectproperty'],['java.util.stream.Stream.of']
36,return (.*) of (.*),['one'],"['mupltiple', 'threads']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.util.concurrent.CompletableFuture.runAsync']"
0,handle (.*) with (.*),['it'],"['scanner', 'java']",['java.util.regex.Pattern.compile']
1,handle (.*) with (.*),['rejectedexecutionexception'],['threadpoolexecutor'],['java.lang.Thread.currentThread']
2,handle (.*) with (.*),['pagination'],"['page', 'factory']",['java.util.stream.IntStream.range']
3,handle (.*) with (.*),"['java', 'calendar']","['working', 'days']",['java.time.ZoneId.of']
4,handle (.*) with (.*),['interfaces'],"['simple', 'example']",['javax.xml.bind.JAXBContext.newInstance']
5,handle (.*) with (.*),"['multiple', 'items']","['multiple', 'instances']",['java.util.Arrays.asList']
6,handle (.*) with (.*),['option'],"['multiple', 'types']","['java.util.Arrays.toString', 'java.lang.Integer.parseInt']"
0,draw (.*) in (.*),"['points', 'defined']",['file'],"['java.lang.Math.max', 'java.lang.Integer.parseInt']"
1,draw (.*) in (.*),['polyline'],['jmapviewer'],['javax.swing.SwingUtilities.invokeLater']
2,draw (.*) in (.*),"['gpx', 'file']","['google', 'maps']",['java.lang.Double.parseDouble']
3,draw (.*) in (.*),['image'],['applet'],"['java.lang.Thread.sleep', 'javax.swing.JLabel.setIcon']"
4,draw (.*) in (.*),"['large', 'bitmaps']",['android'],['java.lang.Math.min']
5,draw (.*) in (.*),"['oval', 'image']",['jlabel'],"['javax.imageio.ImageIO.read', 'javax.swing.SwingUtilities.invokeLater']"
6,draw (.*) in (.*),['image'],['canvas'],"['javax.imageio.ImageIO.read', 'java.lang.System.getProperty']"
7,draw (.*) in (.*),"['a', 'string']","['a', 'frame']",['javax.swing.SwingUtilities.invokeLater']
8,draw (.*) in (.*),"['image', 'created']","['try', 'catch']",['javax.imageio.ImageIO.read']
0,set (.*) using (.*),['while'],['streams'],['java.util.Comparator.comparingInt']
1,set (.*) using (.*),['perhap'],['methodhandles'],['java.lang.invoke.MethodHandles.lookup']
2,set (.*) using (.*),"['image', 'src']","['bufferedimage', 'java']","['java.util.Base64.getEncoder', 'javax.imageio.ImageIO.write', 'java.nio.file.Files.readAllBytes']"
3,set (.*) using (.*),"['basic', 'authentication']","['apache', 'httpclient']",['java.net.Authenticator.setDefault']
4,set (.*) using (.*),"['in', 'loop']",['java'],['java.lang.Class.forName']
5,set (.*) using (.*),['time'],"['range', 'slider']","['java.lang.Math.round', 'java.lang.Math.floor']"
6,set (.*) using (.*),['by'],['comparator'],"['java.util.Arrays.asList', 'java.util.NavigableSet.subSet']"
7,set (.*) using (.*),['command'],['java'],['java.lang.Runtime.exec']
0,make (.*) to (.*),"['component', 'align']",['left'],"['javax.swing.BorderFactory.createLineBorder', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
1,make (.*) to (.*),"['printwriter', 'output']","['unix', 'format']",['java.lang.System.setProperty']
2,make (.*) to (.*),"['a', 'link']","['local', 'file']",['java.awt.Desktop.getDesktop']
3,make (.*) to (.*),['changes'],"['properties', 'persistent']","['java.lang.System.getProperties', 'java.util.Properties.load']"
4,make (.*) to (.*),"['udpserver', 'send']",['udpclient'],"['java.lang.System.arraycopy', 'java.net.InetAddress.getByName']"
5,make (.*) to (.*),"['ball', 'move']","['specify', 'direction']",['java.lang.Math.cos']
6,make (.*) to (.*),"['my', 'calculator']","['keep', 'looping']",['java.lang.System.exit']
0,load (.*) to (.*),['image'],['gui'],['java.lang.System.arraycopy']
1,load (.*) to (.*),"['database', 'values']",['vector'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
2,load (.*) to (.*),"['csv', 'file']","['oracle', 'database']",['java.lang.Runtime.getRuntime']
3,load (.*) to (.*),"['the', 'icon']",['jframe'],['java.lang.String.format']
4,load (.*) to (.*),['image'],['jpanel'],['javax.imageio.ImageIO.read']
5,load (.*) to (.*),"['commented', 'properties']","['properties', 'object']",['java.io.ByteArrayOutputStream.toByteArray']
6,load (.*) to (.*),"['and', 'save']","['txt', 'file']",['java.lang.Integer.parseInt']
0,access (.*) using (.*),['denied'],['fileoutputstream'],['java.lang.System.exit']
1,access (.*) using (.*),['database'],"['java', 'netbeans']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
2,access (.*) using (.*),['control'],['dropwizard'],['java.util.Optional.of']
3,access (.*) using (.*),"['secret', 'key']",['java'],['javax.crypto.KeyGenerator.getInstance']
4,access (.*) using (.*),"['protected', 'class']",['reflection'],['java.lang.Class.forName']
5,access (.*) using (.*),"['the', 'subclass']",['jsoup'],['java.net.URLEncoder.encode']
6,access (.*) using (.*),['googlecloudstorage'],['googlecloudendpoints'],"['java.net.URLEncoder.encode', 'java.security.Signature.getInstance', 'java.security.KeyStore.getInstance']"
7,access (.*) using (.*),"['on', 'streams']",['reflection'],['java.util.stream.Stream.of']
0,calculate (.*) from (.*),['fft'],"['audio', 'file']",['java.lang.System.arraycopy']
1,calculate (.*) from (.*),"['a', 'minutes']","['the', 'timestamp']",['java.lang.System.currentTimeMillis']
2,calculate (.*) from (.*),['values'],['file'],['java.lang.Integer.valueOf']
3,calculate (.*) from (.*),"['a', 'formula']","['a', 'string']",['java.lang.Integer.parseInt']
4,calculate (.*) from (.*),"['dice', 'roll']","['text', 'field']",['java.lang.Integer.parseInt']
5,calculate (.*) from (.*),"['target', 'pixels']","['given', 'angle']","['java.lang.Math.sin', 'java.lang.Math.cos']"
6,calculate (.*) from (.*),"['an', 'aggregate']","['multiple', 'values']",['java.lang.String.getBytes']
7,calculate (.*) from (.*),['number'],"['two', 'jtextfield']","['java.lang.Double.parseDouble', 'java.lang.String.valueOf']"
0,make (.*) for (.*),"['n', 'nested']","['loops', 'recursively']",['java.util.Arrays.fill']
1,make (.*) for (.*),"['gui', 'wait']","['a', 'timer']","['java.lang.Thread.sleep', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
2,make (.*) for (.*),"['progress', 'bar']","['sec', 'loading']",['java.lang.Thread.sleep']
3,make (.*) for (.*),"['this', 'work']",['java'],"['javax.swing.BorderFactory.createLineBorder', 'javax.swing.SwingUtilities.invokeLater', 'javax.swing.BorderFactory.createEmptyBorder']"
4,make (.*) for (.*),"['a', 'layout']",['japplet'],['javax.swing.SwingUtilities.invokeAndWait']
5,make (.*) for (.*),"['context', 'menus']","['my', 'software']",['java.lang.System.getenv']
6,make (.*) for (.*),"['progress', 'dialog']","['database', 'copying']",['java.lang.Thread.sleep']
7,make (.*) for (.*),"['thread', 'waits']",['ms'],"['java.lang.Thread.sleep', 'java.lang.System.currentTimeMillis']"
8,make (.*) for (.*),['rang'],['color'],"['java.lang.Math.pow', 'java.lang.Math.sqrt', 'java.lang.Integer.parseInt']"
9,make (.*) for (.*),"['it', 'work']","['negative', 'numbers']",['java.lang.Integer.parseInt']
10,make (.*) for (.*),"['regex', 'pattern']","['some', 'scenarios']",['java.util.regex.Pattern.compile']
11,make (.*) for (.*),"['tooltip', 'work']",['xybarrenderer'],['java.text.DateFormat.getDateInstance']
0,filter (.*) for (.*),"['fft', 'data']","['audio', 'visualisation']",['java.lang.Math.max']
1,filter (.*) for (.*),"['a', 'string']","['an', 'url']",['java.util.regex.Pattern.compile']
2,filter (.*) for (.*),['files'],"['file', 'txt']",['java.util.Arrays.asList']
0,access (.*) on (.*),['internet'],['startup'],['java.lang.System.setProperty']
1,access (.*) on (.*),['synchronized'],"['java', 'object']",['java.lang.System.gc']
2,access (.*) on (.*),['ejb'],"['remote', 'server']",['java.lang.System.setProperty']
3,access (.*) on (.*),['data'],"['a', 'website']",['java.lang.System.setProperty']
4,access (.*) on (.*),"['file', 'based']",['offsets'],['java.io.RandomAccessFile.readLine']
5,access (.*) on (.*),['depending'],['classloader'],['java.net.URLClassLoader.getPermissions']
6,access (.*) on (.*),"['with', 'java']","['bit', 'machione']",['java.lang.System.getProperty']
0,update (.*) using (.*),['xml'],['xmlstreamwriter'],"['javax.xml.stream.XMLOutputFactory.newInstance', 'javax.xml.stream.XMLInputFactory.newInstance', 'javax.xml.stream.XMLEventFactory.newInstance']"
1,update (.*) using (.*),['page'],"['rest', 'api']","['java.util.Calendar.getInstance', 'java.lang.String.format']"
2,update (.*) using (.*),"['a', 'gui']","['mvc', 'pattern']",['java.lang.Thread.sleep']
3,update (.*) using (.*),"['outlook', 'contact']","['jacob', 'library']",['java.lang.String.format']
4,update (.*) using (.*),"['image', 'when']","['seticon', 'icon']","['javax.imageio.ImageIO.read', 'javax.swing.JOptionPane.showMessageDialog']"
5,update (.*) using (.*),['it'],['jprogressbar'],['java.lang.Thread.sleep']
6,update (.*) using (.*),"['json', 'value']",['java'],['java.lang.Long.valueOf']
7,update (.*) using (.*),"['ui', 'when']","['thread', 'sleep']",['javax.swing.SwingUtilities.invokeLater']
8,update (.*) using (.*),"['xml', 'document']",['java'],"['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
0,print (.*) on (.*),"['multiple', 'integers']","['new', 'lines']","['java.util.stream.IntStream.of', 'java.util.Arrays.asList']"
1,print (.*) on (.*),['table'],['console'],['java.lang.Math.max']
2,print (.*) on (.*),['date'],['webpage'],['java.util.Calendar.getInstance']
3,print (.*) on (.*),"['german', 'umlauts']","['the', 'console']",['java.lang.System.console']
4,print (.*) on (.*),['margins'],['jtextpane'],"['java.awt.print.PrinterJob.getPrinterJob', 'javax.swing.text.StyleConstants.setIcon', 'javax.swing.text.StyleConstants.setBold']"
5,print (.*) on (.*),"['month', 'calendar']",['terminal'],"['java.time.LocalDate.of', 'java.time.YearMonth.of']"
6,print (.*) on (.*),['date'],"['weekend', 'only']",['java.util.Calendar.getInstance']
0,test (.*) for (.*),[],['primality'],"['java.lang.System.currentTimeMillis', 'java.lang.Integer.parseInt']"
1,test (.*) for (.*),['database'],"['cucumber', 'jvm']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
2,test (.*) for (.*),['case'],"['private', 'method']","['java.lang.Thread.sleep', 'java.lang.System.currentTimeMillis']"
0,delete (.*) from (.*),['values'],"['hashmap', 'object']",['java.util.Arrays.asList']
1,delete (.*) from (.*),['it'],['java'],['java.lang.Runtime.getRuntime']
2,delete (.*) from (.*),['line'],['txt'],['java.lang.Integer.parseInt']
3,delete (.*) from (.*),"['a', 'row']",['jtable'],['javax.swing.SwingUtilities.invokeLater']
4,delete (.*) from (.*),"['last', 'element']","['array', 'list']",['java.lang.System.arraycopy']
5,delete (.*) from (.*),"['some', 'files']","['file', 'array']",['java.lang.System.arraycopy']
6,delete (.*) from (.*),['image'],"['the', 'folder']","['java.nio.file.Paths.get', 'java.nio.file.Files.delete']"
7,delete (.*) from (.*),['permissions'],['user'],['java.lang.System.getProperty']
8,delete (.*) from (.*),['data'],['database'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showConfirmDialog']"
9,delete (.*) from (.*),['int'],"['arraylist', 'int']",['java.util.Arrays.equals']
10,delete (.*) from (.*),"['specific', 'cookies']","['webengine', 'javafx']",['java.net.CookieHandler.setDefault']
11,delete (.*) from (.*),"['empty', 'gridlayout']",['panel'],['javax.swing.SwingUtilities.invokeLater']
12,delete (.*) from (.*),"['line', 'series']",['chart'],"['java.lang.Double.parseDouble', 'java.lang.Integer.parseInt']"
13,delete (.*) from (.*),"['child', 'node']","['dynamic', 'xml']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
14,delete (.*) from (.*),['item'],['arraylist'],['java.util.Collections.sort']
15,delete (.*) from (.*),"['encoding', 'utf']","['xml', 'file']","['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
16,delete (.*) from (.*),"['an', 'integer']",['arraylist'],['java.lang.Integer.valueOf']
17,delete (.*) from (.*),['element'],"['an', 'array']",['java.util.Arrays.copyOfRange']
18,delete (.*) from (.*),['element'],"['array', 'directly']",['java.util.Arrays.stream']
19,delete (.*) from (.*),"['an', 'item']","['recycler', 'view']",['java.util.Arrays.sort']
20,delete (.*) from (.*),['variable'],['memory'],"['java.lang.Runtime.getRuntime', 'java.lang.System.gc']"
21,delete (.*) from (.*),"['after', 'exit']",['vm'],['java.io.File.deleteOnExit']
0,generate (.*) for (.*),"['a', 'key']",['aes'],"['javax.crypto.KeyGenerator.getInstance', 'java.lang.String.format']"
1,generate (.*) for (.*),"['random', 'time']","['current', 'date']","['java.time.LocalTime.of', 'java.time.LocalDateTime.of']"
2,generate (.*) for (.*),"['the', 'instance']",['logger'],['java.util.logging.Logger.getLogger']
3,generate (.*) for (.*),"['a', 'pbekey']",['serpent'],"['java.security.Security.addProvider', 'java.security.SecureRandom.getInstance', 'java.lang.System.arraycopy', 'javax.crypto.SecretKeyFactory.getInstance', 'javax.crypto.Cipher.getInstance']"
4,generate (.*) for (.*),['tables'],"['varying', 'objects']",['java.util.Arrays.asList']
5,generate (.*) for (.*),['keys'],['rsa'],"['java.math.BigInteger.probablePrime', 'java.math.BigInteger.valueOf']"
6,generate (.*) for (.*),"['sha', 'hash']","['a', 'xml']","['javax.xml.transform.TransformerFactory.newInstance', 'java.util.Collections.sort', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
7,generate (.*) for (.*),['identifier'],['object'],['java.lang.String.format']
8,generate (.*) for (.*),"['different', 'date']","['each', 'iteration']","['java.util.Date.from', 'java.time.Instant.now']"
0,retrieve (.*) in (.*),"['relationship', 'mapping']",['hibernate'],['java.lang.Class.forName']
1,retrieve (.*) in (.*),"['tamil', 'values']","['mysql', 'database']",['java.sql.DriverManager.getConnection']
2,retrieve (.*) in (.*),['attributes'],"['hierarchical', 'uri']",['java.lang.Integer.parseInt']
3,retrieve (.*) in (.*),"['string', 'characters']",['brackets'],['java.lang.String.replaceAll']
4,retrieve (.*) in (.*),"['loginconfig', 'programatically']",['tomcat'],['javax.xml.xpath.XPathFactory.newInstance']
5,retrieve (.*) in (.*),['timestamp'],['simpledateformat'],['java.text.DateFormat.getDateTimeInstance']
0,output (.*) of (.*),['percentage'],"['lines', 'read']",['java.lang.Math.round']
1,output (.*) of (.*),"['the', 'contents']","['an', 'arraylist']",['java.lang.String.format']
2,output (.*) of (.*),['perimeters'],['triangles'],['java.lang.System.exit']
3,output (.*) of (.*),"['output', 'out']",['order'],['java.util.Arrays.fill']
4,output (.*) of (.*),['pattern'],['array'],"['java.util.Arrays.toString', 'java.util.Arrays.deepToString']"
5,output (.*) of (.*),"['for', 'values']","['n', 'why']",['java.lang.Integer.toString']
6,output (.*) of (.*),['total'],['numbers'],['java.lang.Integer.valueOf']
7,output (.*) of (.*),"['i', 'd']",['instance'],"['java.util.Arrays.asList', 'java.util.Collections.sort']"
0,request (.*) with (.*),['responses'],"['jax', 'ws']",['javax.xml.ws.Endpoint.create']
1,request (.*) with (.*),"['to', 'webservice']",['java'],"['javax.xml.soap.SOAPConnectionFactory.newInstance', 'javax.xml.soap.MessageFactory.newInstance']"
2,request (.*) with (.*),['timeout'],['resttemplate'],['java.util.concurrent.Executors.newFixedThreadPool']
3,request (.*) with (.*),['login'],"['jboss', 'jaas']",['java.util.logging.Logger.getLogger']
4,request (.*) with (.*),"['on', 'post']",['body'],['java.util.Arrays.asList']
5,request (.*) with (.*),"['when', 'working']",['appengine'],['java.lang.Double.parseDouble']
6,request (.*) with (.*),"['is', 'wrapped']","['a', 'httpservletrequestwrapper']",['java.lang.System.arraycopy']
7,request (.*) with (.*),"['processing', 'failed']",['indexoutofboundsexception'],['java.lang.Thread.sleep']
0,count (.*) with (.*),['occurrences'],['groupby'],['java.util.stream.Collectors.counting']
1,count (.*) with (.*),"['int', 'occurrences']",['java'],['java.util.stream.Collectors.counting']
2,count (.*) with (.*),"['regex', 'matches']",['streams'],['java.util.regex.Pattern.compile']
3,count (.*) with (.*),['objects'],"['multiple', 'values']",['java.util.stream.Stream.concat']
4,count (.*) with (.*),"['those', 'post']","['that', 'month']",['java.time.format.DateTimeFormatter.ofPattern']
5,count (.*) with (.*),['files'],['regex'],['java.util.regex.Pattern.quote']
0,open (.*) in (.*),"['new', 'jinternalframe']","['the', 'jdesktoppane']",['javax.swing.JOptionPane.showMessageDialog']
1,open (.*) in (.*),['browser'],['eclipse'],['java.awt.Desktop.getDesktop']
2,open (.*) in (.*),"['a', 'bufferedreader']",['utf'],['java.nio.file.Paths.get']
3,open (.*) in (.*),['it'],['browser'],['java.util.logging.Logger.getLogger']
4,open (.*) in (.*),"['sqlite', 'db']","['android', 'studio']",['java.lang.String.format']
5,open (.*) in (.*),"['help', 'file']","['executable', 'jar']",['java.awt.Toolkit.getDefaultToolkit']
6,open (.*) in (.*),"['multiple', 'tabs']","['a', 'jtabbedpane']",['java.awt.EventQueue.invokeLater']
7,open (.*) in (.*),['frame'],"['another', 'thread']",['java.awt.EventQueue.invokeLater']
8,open (.*) in (.*),['button'],"['filedialog', 'work']",['java.nio.file.Files.readAllBytes']
9,open (.*) in (.*),"['a', 'webpage']","['lwjgl', 'java']",['java.awt.Desktop.getDesktop']
10,open (.*) in (.*),['file'],['ie'],['java.awt.Desktop.getDesktop']
11,open (.*) in (.*),['it'],['chrome'],['javax.imageio.ImageIO.read']
0,sleep (.*) in (.*),['function'],"['android', 'program']",['java.lang.Thread.sleep']
1,sleep (.*) in (.*),['method'],['threads'],['java.lang.Thread.sleep']
2,sleep (.*) in (.*),"['not', 'working']",['loop'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
3,sleep (.*) in (.*),['method'],['painting'],"['java.awt.Color.getHSBColor', 'javax.swing.SwingUtilities.invokeLater', 'java.lang.System.currentTimeMillis']"
4,sleep (.*) in (.*),"['oder', 'wait']","['for', 'loop']",['java.lang.Thread.sleep']
5,sleep (.*) in (.*),"['a', 'thread']","['a', 'loop']","['java.lang.Thread.sleep', 'java.util.List.add']"
6,sleep (.*) in (.*),"['before', 'retrying']","['struts', 'action']",['java.lang.Thread.sleep']
0,change (.*) for (.*),"['global', 'setting']","['logger', 'instances']",['java.util.logging.LogManager.getLogManager']
1,change (.*) for (.*),"['default', 'locale']","['junit', 'test']","['java.util.Locale.setDefault', 'java.util.ResourceBundle.getBundle']"
2,change (.*) for (.*),"['tab', 'look']",['jtabbedpane'],['javax.swing.SwingUtilities.convertPoint']
3,change (.*) for (.*),"['order', 'of']",['loops'],"['java.util.Arrays.fill', 'java.util.Arrays.copyOf']"
4,change (.*) for (.*),['after'],['loop'],['java.lang.System.exit']
5,change (.*) for (.*),"['sort', 'criteria']","['java', 'class']",['java.lang.Integer.compare']
6,change (.*) for (.*),"['preview', 'panel']",['jcolorchooser'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JColorChooser.createDialog']"
7,change (.*) for (.*),['value'],['variable'],['java.lang.Math.toRadians']
0,list (.*) by (.*),['entries'],['regex'],"['java.util.regex.Matcher.find', 'java.util.regex.Pattern.compile']"
1,list (.*) by (.*),['returned'],"['arrays', 'aslist']",['java.util.Arrays.asList']
2,list (.*) by (.*),"['of', 'objects']","['date', 'property']",['java.util.Collections.sort']
3,list (.*) by (.*),"['of', 'maps']",['value'],['java.util.Collections.sort']
4,list (.*) by (.*),"['of', 'object']",['time'],['java.util.Collections.sort']
5,list (.*) by (.*),['point'],"['x', 'value']","['java.lang.Double.compare', 'java.util.Collections.sort']"
6,list (.*) by (.*),"['of', 'objects']","['i', 'd']",['java.util.Arrays.asList']
7,list (.*) by (.*),"['of', 'objects']","['specifiable', 'attribute']",['java.util.Arrays.sort']
8,list (.*) by (.*),['accessed'],"['multiple', 'threads']",['javax.swing.Box.createVerticalBox']
9,list (.*) by (.*),['group'],"['in', 'java']","['java.util.Objects.equals', 'java.util.Collections.sort', 'java.util.Objects.hash']"
10,list (.*) by (.*),['elements'],['class'],['java.util.stream.Collectors.mapping']
11,list (.*) by (.*),"['sequentially', 'one']",['one'],"['javax.xml.bind.JAXBContext.newInstance', 'javax.xml.stream.XMLInputFactory.newFactory']"
12,list (.*) by (.*),['object'],"['long', 'field']",['java.util.Comparator.comparingLong']
13,list (.*) by (.*),['returned'],"['collectors', 'tolist']",['java.util.stream.Collectors.toCollection']
14,list (.*) by (.*),['defined'],"['a', 'boolean']",['java.lang.Math.abs']
15,list (.*) by (.*),"['of', 'objects']","['long', 'property']",['java.util.Collections.sort']
16,list (.*) by (.*),"['of', 'array']","['two', 'fields']",['java.lang.Double.compare']
17,list (.*) by (.*),"['of', 'class']","['indexof', 'array']",['java.util.Arrays.asList']
18,list (.*) by (.*),"['of', 'object']","['object', 'types']",['java.util.stream.Stream.concat']
0,delay (.*) in (.*),['functions'],"['android', 'studio']",['java.lang.Thread.sleep']
1,delay (.*) in (.*),"['between', 'frames']","['animated', 'gif']",['javax.imageio.ImageIO.getImageReadersBySuffix']
2,delay (.*) in (.*),"['a', 'painting']",['progress'],['javax.swing.SwingUtilities.invokeLater']
3,delay (.*) in (.*),"['image', 'apperance']","['surfaceview', 'render']",['java.lang.System.nanoTime']
4,delay (.*) in (.*),"['during', 'call']",['android'],['java.net.URLEncoder.encode']
5,delay (.*) in (.*),"['getoutputstream', 'write']","['android', 'studio']",['java.lang.Thread.sleep']
6,delay (.*) in (.*),"['repeat', 'animation']","['reverse', 'mode']",['java.util.Random.nextLong']
0,print (.*) of (.*),"['log', 'array']",['string'],['java.util.Arrays.toString']
1,print (.*) of (.*),"['xml', 'content']","['soap', 'message']",['java.util.logging.Logger.getLogger']
2,print (.*) of (.*),"['an', 'array']",['arraylist'],"['java.util.Arrays.toString', 'java.lang.Object.toString']"
3,print (.*) of (.*),['format'],['bufferedimage'],"['javax.imageio.ImageIO.read', 'java.awt.print.PrinterJob.getPrinterJob']"
4,print (.*) of (.*),"['int', 'number']",['string'],['java.lang.Integer.parseInt']
5,print (.*) of (.*),"['a', 'pyramid']","['increasing', 'values']",['java.lang.Math.min']
6,print (.*) of (.*),"['offset', 'instead']",['z'],['java.time.ZonedDateTime.now']
7,print (.*) of (.*),['table'],['data'],['javax.print.PrintServiceLookup.lookupDefaultPrintService']
8,print (.*) of (.*),"['repetitive', 'numbers']","['array', 'inside']",['java.util.Arrays.sort']
9,print (.*) of (.*),['values'],"['getstring', 'differently']",['java.lang.String.split']
10,print (.*) of (.*),"['this', 'triangle']",['characters'],['java.lang.Math.abs']
11,print (.*) of (.*),['properties'],"['an', 'object']",['java.util.stream.Stream.of']
12,print (.*) of (.*),['width'],[],"['java.time.format.DateTimeFormatter.ofPattern', 'java.time.LocalDate.now']"
13,print (.*) of (.*),"['the', 'content']","['an', 'object']",['java.lang.Object.toString']
14,print (.*) of (.*),['part'],"['the', 'screen']","['java.awt.Toolkit.getDefaultToolkit', 'java.lang.Math.max', 'java.awt.MouseInfo.getPointerInfo']"
15,print (.*) of (.*),['content'],"['deep', 'lists']",['javax.xml.bind.JAXB.marshal']
16,print (.*) of (.*),['year'],['dates'],"['java.time.LocalDate.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
0,execute (.*) in (.*),['commands'],"['command', 'prompt']",['java.util.Arrays.toString']
1,execute (.*) in (.*),['tasks'],"['executorservice', 'sequentially']",['java.util.concurrent.Executors.newSingleThreadExecutor']
2,execute (.*) in (.*),"['cmd', 'command']","['java', 'class']",['java.lang.Runtime.getRuntime']
3,execute (.*) in (.*),['consumer'],['rxjava'],['java.lang.Thread.currentThread']
4,execute (.*) in (.*),"['statement', 'synchronously']","['one', 'connection']",['java.sql.DriverManager.getConnection']
5,execute (.*) in (.*),['runnables'],"['a', 'list']",['java.util.Arrays.asList']
6,execute (.*) in (.*),"['keyboard', 'stroke']","['another', 'component']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
7,execute (.*) in (.*),"['async', 'lambda']","['main', 'thread']",['java.util.concurrent.CompletableFuture.supplyAsync']
8,execute (.*) in (.*),['while'],"['a', 'loop']",['java.lang.Integer.parseInt']
9,execute (.*) in (.*),"['files', 'located']","['your', 'package']",['java.awt.Desktop.getDesktop']
10,execute (.*) in (.*),"['the', 'application']","['another', 'computer']",['java.lang.String.format']
11,execute (.*) in (.*),['timer'],['java'],['javax.swing.JOptionPane.showMessageDialog']
12,execute (.*) in (.*),['something'],['process'],['java.lang.ProcessBuilder.redirectErrorStream']
13,execute (.*) in (.*),['documentbuilderfactory'],['matlab'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
0,send (.*) with (.*),"['fix', 'message']","['quickfix', 'j']",['java.lang.Thread.sleep']
1,send (.*) with (.*),['data'],"['a', 'button']",['java.net.InetAddress.getByName']
2,send (.*) with (.*),"['soap', 'request']",['java'],"['javax.xml.soap.SOAPConnectionFactory.newInstance', 'javax.xml.soap.MessageFactory.newInstance']"
3,send (.*) with (.*),['email'],['quotes'],['java.lang.Runtime.getRuntime']
4,send (.*) with (.*),"['background', 'email']",['attachments'],['java.lang.String.valueOf']
5,send (.*) with (.*),"['async', 'emails']",['play'],"['java.util.concurrent.CompletableFuture.runAsync', 'java.lang.Thread.currentThread']"
6,send (.*) with (.*),['bytearrayoutputstream'],['jersey'],['java.io.File.createTempFile']
0,run (.*) using (.*),['time'],"['class', 'name']",['java.lang.reflect.Array.newInstance']
1,run (.*) using (.*),"['r', 'script']","['java', 'program']",['java.lang.Runtime.getRuntime']
2,run (.*) using (.*),['when'],['junit'],['java.lang.Thread.sleep']
3,run (.*) using (.*),"['exe', 'file']","['selenium', 'webdriver']","['java.lang.System.setProperty', 'java.lang.Runtime.getRuntime']"
4,run (.*) using (.*),"['in', 'parallel']","['java', 'executorservice']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.lang.Thread.sleep']"
5,run (.*) using (.*),"['a', 'file']",['java'],"['java.awt.Desktop.open', 'java.awt.Desktop.getDesktop']"
6,run (.*) using (.*),"['command', 'remotely']",['java'],['java.lang.Runtime.exec']
7,run (.*) using (.*),"['java', 'code']",['luaj'],"['java.lang.Math.abs', 'java.lang.Math.max']"
8,run (.*) using (.*),"['command', 'prompt']",['java'],['java.lang.Runtime.getRuntime']
9,run (.*) using (.*),"['apache', 'netbeans']",['jdk'],['java.util.prefs.AbstractPreferences.getBoolean']
10,run (.*) using (.*),['time'],"['reflection', 'java']","['java.lang.Class.getDeclaredConstructor', 'java.lang.Class.getConstructor']"
11,run (.*) using (.*),['time'],['reflection'],['java.util.Collections.unmodifiableMap']
12,run (.*) using (.*),['cucumber'],['jar'],['java.util.stream.Stream.concat']
13,run (.*) using (.*),['time'],"['java', 'instrumentation']",['java.lang.System.currentTimeMillis']
14,run (.*) using (.*),['time'],['reflection'],['java.lang.Class.forName']
15,run (.*) using (.*),['file'],['path'],['java.awt.Desktop.getDesktop']
16,run (.*) using (.*),['without'],"['the', 'contractor']",['java.util.concurrent.Executors.newFixedThreadPool']
17,run (.*) using (.*),"['method', 'without']","['thread', 'sleep']",['java.lang.System.currentTimeMillis']
18,run (.*) using (.*),"['a', 'file']","['an', 'executable']",['java.lang.Runtime.getRuntime']
0,create (.*) for (.*),"['a', 'queue']","['hashmap', 'set']",['java.util.Collections.synchronizedMap']
1,create (.*) for (.*),['sha'],"['a', 'file']",['java.security.MessageDigest.getInstance']
2,create (.*) for (.*),"['a', 'constraintvalidator']",['list'],['javax.xml.validation.Validator.validate']
3,create (.*) for (.*),"['custom', 'annotation']",['lombok'],['java.util.Arrays.asList']
4,create (.*) for (.*),"['http', 'context']",['tests'],['java.util.Collections.emptyMap']
5,create (.*) for (.*),"['confirmation', 'link']",['email'],['java.util.UUID.randomUUID']
6,create (.*) for (.*),"['one', 'instance']","['each', 'parameter']",['java.util.Arrays.asList']
7,create (.*) for (.*),"['a', 'table']","['this', 'entity']",['java.util.Arrays.asList']
8,create (.*) for (.*),"['environmental', 'variables']","['my', 'program']",['java.lang.System.getenv']
9,create (.*) for (.*),"['dynamic', 'proxy']",['enum'],['java.lang.reflect.Proxy.newProxyInstance']
10,create (.*) for (.*),"['generic', 'array']","['toarray', 'method']",['java.lang.reflect.Array.newInstance']
11,create (.*) for (.*),"['hateoas', 'link']","['a', 'filter']",['java.util.Collections.singletonList']
12,create (.*) for (.*),"['random', 'number']","['each', 'player']",['java.lang.Integer.parseInt']
13,create (.*) for (.*),"['a', 'timer']","['a', 'quiz']",['java.lang.System.nanoTime']
14,create (.*) for (.*),['generics'],"['xml', 'parsing']",['javax.xml.bind.JAXBContext.newInstance']
15,create (.*) for (.*),['interface'],['class'],['java.util.logging.Logger.getLogger']
16,create (.*) for (.*),"['tostring', 'method']","['d', 'array']",['java.util.stream.Stream.of']
17,create (.*) for (.*),"['a', 'regex']","['following', 'scenerio']",['java.util.regex.Pattern.compile']
18,create (.*) for (.*),"['a', 'loop']","['your', 'timer']",['javax.swing.SwingUtilities.invokeAndWait']
0,determine (.*) of (.*),"['alphabetic', 'order']","['two', 'characters']",['java.lang.Character.toLowerCase']
1,determine (.*) of (.*),['dpi'],['image'],"['javax.imageio.ImageIO.createImageInputStream', 'javax.imageio.ImageIO.getImageReaders', 'java.lang.Float.parseFloat']"
2,determine (.*) of (.*),['size'],"['xml', 'document']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
3,determine (.*) of (.*),"['byte', 'offset']","['lines', 'read']",['java.lang.Character.codePointAt']
4,determine (.*) of (.*),"['the', 'dimension']",['images'],['javax.imageio.ImageIO.read']
5,determine (.*) of (.*),"['the', 'size']","['a', 'jtextfield']",['javax.swing.SwingUtilities.invokeLater']
6,determine (.*) of (.*),['extrema'],['function'],['java.lang.Math.cbrt']
7,determine (.*) of (.*),['height'],['screen'],"['java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment', 'java.awt.Toolkit.getDefaultToolkit']"
8,determine (.*) of (.*),['day'],['week'],['java.util.Calendar.getInstance']
0,copy (.*) from (.*),['files'],"['java', 'program']",['java.lang.Runtime.getRuntime']
0,load (.*) into (.*),['bitmap'],['imageview'],['java.lang.String.format']
1,load (.*) into (.*),"['shared', 'libraries']",['eclipse'],['java.lang.System.loadLibrary']
2,load (.*) into (.*),['xml'],['treemap'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
3,load (.*) into (.*),"['its', 'fields']",['jtree'],['java.lang.Class.getDeclaredFields']
4,load (.*) into (.*),['doubles'],"['an', 'arraylist']",['java.lang.Double.parseDouble']
5,load (.*) into (.*),"['canvas', 'image']",['excel'],['javax.imageio.ImageIO.write']
0,change (.*) using (.*),['password'],['jpasswordfield'],['javax.swing.JOptionPane.showMessageDialog']
1,change (.*) using (.*),"['embed', 'src']",['javascript'],['java.lang.Math.floor']
2,change (.*) using (.*),['group'],"['regex', 'java']",['java.util.regex.Pattern.compile']
3,change (.*) using (.*),"['stdin', 'when']","['runtime', 'class']",['java.lang.Runtime.getRuntime']
0,update (.*) on (.*),"['lookandfeel', 'values']","['the', 'fly']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.UIManager.getInstalledLookAndFeels', 'javax.swing.UIManager.getLookAndFeel', 'javax.swing.RepaintManager.setCurrentManager', 'javax.swing.UIManager.getDefaults', 'javax.swing.SwingUtilities.updateComponentTreeUI', 'javax.swing.UIManager.getLookAndFeelDefaults', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
1,update (.*) on (.*),['count'],['click'],['java.lang.Math.floor']
2,update (.*) on (.*),['jlabel'],"['button', 'click']",['javax.swing.SwingUtilities.invokeLater']
3,update (.*) on (.*),['bufferedimage'],['gui'],"['javax.swing.SwingUtilities.invokeLater', 'java.awt.EventQueue.invokeLater']"
4,update (.*) on (.*),['time'],"['button', 'click']",['java.time.Duration.between']
5,update (.*) on (.*),['data'],['jfreechart'],['java.awt.EventQueue.invokeLater']
0,list (.*) from (.*),"['of', 'resources']","['classpath', 'directory']",['java.lang.Thread.currentThread']
1,list (.*) from (.*),"['contains', 'element']","['the', 'other']",['java.util.Collections.disjoint']
2,list (.*) from (.*),"['of', 'colors']",['resource'],['java.lang.Class.forName']
3,list (.*) from (.*),['view'],"['custom', 'adapter']",['java.lang.String.valueOf']
4,list (.*) from (.*),"['of', 'classes']","['an', 'object']","['java.util.Arrays.stream', 'java.lang.reflect.Field.getGenericType']"
5,list (.*) from (.*),['files'],"['multiple', 'paths']",['java.util.Collections.emptyList']
6,list (.*) from (.*),[],['array'],['java.util.Arrays.fill']
7,list (.*) from (.*),['populated'],"['a', 'class']",['java.util.Collections.sort']
8,list (.*) from (.*),['item'],"['xml', 'nodes']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
9,list (.*) from (.*),"['of', 'integers']","['text', 'file']",['java.lang.Integer.parseInt']
10,list (.*) from (.*),"['of', 'references']","['google', 'scholar']",['java.nio.channels.Channels.newChannel']
11,list (.*) from (.*),['integer'],['intstream'],"['java.util.stream.IntStream.range', 'java.util.stream.Stream.generate']"
12,list (.*) from (.*),"['of', 'dates']","['previous', 'week']",['java.util.Calendar.getInstance']
13,list (.*) from (.*),"['specific', 'attributes']","['xml', 'file']",['javax.xml.xpath.XPathFactory.newInstance']
14,list (.*) from (.*),"['of', 'string']","['an', 'stream']",['java.util.stream.Stream.of']
15,list (.*) from (.*),['t'],"['an', 'enum']",['java.util.Arrays.asList']
16,list (.*) from (.*),"['while', 'removing']",['it'],['java.util.Iterator.remove']
17,list (.*) from (.*),['only'],"['sequence', 'matters']",['java.util.Arrays.asList']
18,list (.*) from (.*),"['file', 'characteristics']","['foreach', 'method']",['java.nio.file.Files.walk']
19,list (.*) from (.*),"['foo', 'foo']","['fooservice', 'getfoos']",['java.util.Collections.unmodifiableList']
20,list (.*) from (.*),"['of', 'ipaddresses']","['the', 'string']",['java.util.regex.Pattern.compile']
21,list (.*) from (.*),"['of', 'file']","['the', 'classpath']","['java.nio.file.Paths.get', 'java.nio.file.Files.list']"
0,test (.*) using (.*),['it'],"['demo', 'class']",['java.lang.Double.parseDouble']
1,test (.*) using (.*),['case'],['eclipse'],['java.util.logging.Logger.getLogger']
2,test (.*) using (.*),['iterations'],"['testng', 'dataprovider']",['java.util.Arrays.copyOfRange']
3,test (.*) using (.*),"['console', 'output']",['junit'],"['java.lang.System.getSecurityManager', 'java.lang.System.setSecurityManager', 'java.lang.System.exit', 'java.lang.String.format']"
4,test (.*) using (.*),['method'],"['testng', 'listeners']","['java.lang.System.getProperty', 'java.lang.Integer.parseInt']"
5,test (.*) using (.*),"['failing', 'when']",['jacoco'],['java.util.Arrays.stream']
6,test (.*) using (.*),"['entity', 'annotations']",['junit'],['java.util.Arrays.asList']
7,test (.*) using (.*),"['a', 'filter']","['cache', 'k']",['java.util.Objects.requireNonNull']
0,query (.*) in (.*),['statement'],['operator'],['java.sql.DriverManager.getConnection']
1,query (.*) in (.*),['results'],['jsp'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
2,query (.*) in (.*),['params'],"['rest', 'api']",['java.util.Arrays.asList']
3,query (.*) in (.*),"['with', 'jdbc']","['a', 'csv']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
4,query (.*) in (.*),"['time', 'boost']",['compass'],"['java.lang.System.identityHashCode', 'java.util.Calendar.getInstance']"
5,query (.*) in (.*),['result'],"['selenium', 'webdriver']",['java.lang.System.setProperty']
6,query (.*) in (.*),['parameter'],"['rest', 'request']",['java.lang.String.format']
7,query (.*) in (.*),['results'],['jtext'],['javax.swing.JOptionPane.showMessageDialog']
0,process (.*) in (.*),['running'],['background'],['java.lang.Runtime.getRuntime']
1,process (.*) in (.*),['done'],"['regular', 'interval']",['java.lang.System.gc']
2,process (.*) in (.*),"['to', 'display']","['a', 'jtextpane']",['java.lang.Runtime.getRuntime']
3,process (.*) in (.*),"['camera', 'frames']","['a', 'service']","['java.util.Collections.sort', 'java.lang.String.format']"
4,process (.*) in (.*),['status'],['jtextarea'],['java.awt.EventQueue.invokeLater']
5,process (.*) in (.*),['string'],['android'],"['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
6,process (.*) in (.*),"['was', 'started']",['debugger'],['java.lang.management.ManagementFactory.getRuntimeMXBean']
0,load (.*) using (.*),"['a', 'page']","['selenium', 'webdriver']",['java.lang.System.currentTimeMillis']
1,load (.*) using (.*),"['a', 'file']",['jfilechooser'],['java.awt.Desktop.getDesktop']
2,load (.*) using (.*),['videos'],['asynctask'],['java.util.Collections.unmodifiableList']
3,load (.*) using (.*),['image'],['getresource'],['javax.imageio.ImageIO.read']
4,load (.*) using (.*),"['the', 'file']","['getresourceasstream', 'method']",['javax.swing.UIManager.setLookAndFeel']
5,load (.*) using (.*),['image'],"['imageio', 'read']",['javax.imageio.ImageIO.read']
6,load (.*) using (.*),['element'],['implicitlywait'],['java.lang.System.currentTimeMillis']
7,load (.*) using (.*),"['yaml', 'file']","['vm', 'argument']",['java.lang.System.getProperty']
8,load (.*) using (.*),['average'],['java'],['java.lang.management.ManagementFactory.getOperatingSystemMXBean']
9,load (.*) using (.*),['pictures'],"['jpeg', 'codec']",['javax.imageio.ImageIO.read']
10,load (.*) using (.*),['configuration'],['jackson'],['java.lang.Class.getAnnotation']
11,load (.*) using (.*),['image'],"['getclassloader', 'method']",['javax.imageio.ImageIO.read']
12,load (.*) using (.*),"['text', 'file']",['filechooser'],['java.nio.file.Files.readAllBytes']
0,call (.*) on (.*),"['addition', 'operator']","['two', 'objects']",['java.lang.String.valueOf']
1,call (.*) on (.*),"['function', 'based']","['string', 'android']",['java.lang.Class.forName']
2,call (.*) on (.*),"['a', 'method']","['a', 'field']",['java.lang.Class.forName']
3,call (.*) on (.*),['constructor'],"['existing', 'instance']",['java.lang.System.loadLibrary']
4,call (.*) on (.*),['method'],"['received', 'objects']",['java.util.logging.Logger.getLogger']
5,call (.*) on (.*),['getlooper'],"['main', 'thread']",['java.lang.Thread.currentThread']
6,call (.*) on (.*),['append'],['it'],['javax.swing.SwingUtilities.invokeLater']
7,call (.*) on (.*),['method'],"['a', 'hashtable']",['java.lang.Integer.parseInt']
8,call (.*) on (.*),['method'],"['each', 'elemnt']",['java.util.Optional.ofNullable']
9,call (.*) on (.*),"['is', 'executing']","['multiple', 'threads']",['java.lang.Thread.activeCount']
0,start (.*) of (.*),['day'],['week'],['java.util.Calendar.getInstance']
1,start (.*) of (.*),"['and', 'endpositions']","['html', 'tags']",['java.util.regex.Pattern.compile']
2,start (.*) of (.*),['up'],"['java', 'application']","['java.awt.Toolkit.getDefaultToolkit', 'javax.swing.SwingUtilities.invokeLater']"
3,start (.*) of (.*),"['from', 'bottom']",['page'],['org.xml.sax.Parser.parse']
4,start (.*) of (.*),['time'],['today'],['java.lang.System.currentTimeMillis']
5,start (.*) of (.*),"['method', 'instead']","['run', 'method']","['java.lang.Thread.sleep', 'java.lang.Thread.currentThread']"
6,start (.*) of (.*),['instead'],"['set', 'time']",['java.util.Calendar.getInstance']
0,split (.*) on (.*),"['strings', 'based']","['certain', 'length']",['java.lang.String.substring']
1,split (.*) on (.*),"['a', 'string']",['pipe'],['java.util.regex.Pattern.quote']
2,split (.*) on (.*),"['strings', 'based']","['white', 'spaces']",['java.lang.String.join']
3,split (.*) on (.*),"['string', 'deppending']",['characters'],['java.util.regex.Pattern.compile']
0,open (.*) from (.*),"['web', 'page']",['jframe'],['java.awt.Desktop.getDesktop']
1,open (.*) from (.*),"['with', 'dialog']","['another', 'program']","['java.lang.Runtime.getRuntime', 'java.lang.String.format']"
2,open (.*) from (.*),"['file', 'editor']",['java'],"['java.lang.Runtime.getRuntime', 'java.lang.System.getProperty']"
3,open (.*) from (.*),"['and', 'application']","['system', 'tray']",['java.awt.SystemTray.getSystemTray']
4,open (.*) from (.*),['joptionpane'],"['a', 'jbutton']",['javax.swing.JOptionPane.showMessageDialog']
5,open (.*) from (.*),"['new', 'windows']",['menubars'],['javax.swing.JOptionPane.showMessageDialog']
6,open (.*) from (.*),"['command', 'prompt']",['java'],['java.lang.Runtime.getRuntime']
7,open (.*) from (.*),"['a', 'jframe']","['another', 'class']",['javax.swing.JOptionPane.showInputDialog']
0,filter (.*) with (.*),"['or', 'first']","['rx', 'java']",['java.util.stream.IntStream.iterate']
1,filter (.*) with (.*),['date'],['java'],"['java.util.Arrays.asList', 'java.time.LocalDate.parse']"
2,filter (.*) with (.*),['jtable'],['abstractdatamodel'],"['javax.swing.RowFilter.notFilter', 'javax.swing.RowFilter.regexFilter']"
3,filter (.*) with (.*),"['a', 'listview']","['multiple', 'spinners']",['java.util.Arrays.asList']
4,filter (.*) with (.*),"['them', 'out']",['pdfbox'],"['java.util.Collections.sort', 'java.lang.Math.max', 'java.lang.Float.compare', 'java.lang.Math.abs', 'java.lang.Math.min']"
0,disable (.*) for (.*),"['system', 'out']",['speed'],['java.lang.System.setOut']
1,disable (.*) for (.*),"['alt', 'f']",['javafx'],['java.lang.System.exit']
2,disable (.*) for (.*),"['dialog', 'close']",['progressmonitor'],['javax.swing.ProgressMonitor.isCanceled']
3,disable (.*) for (.*),"['content', 'negotiation']","['spring', 'actuators']",['java.util.Arrays.asList']
4,disable (.*) for (.*),"['event', 'logs']","['network', 'connections']",['java.lang.System.exit']
5,disable (.*) for (.*),"['push', 'notification']","['certain', 'time']",['java.util.Calendar.getInstance']
6,disable (.*) for (.*),['dst'],"['calendar', 'object']",['java.time.LocalDate.parse']
0,parse (.*) of (.*),['fraction'],['second'],"['java.time.LocalDateTime.parse', 'java.lang.Integer.parseInt', 'java.time.format.DateTimeFormatter.ofPattern']"
1,parse (.*) of (.*),"['this', 'type']","['date', 'format']",['java.util.regex.Pattern.compile']
2,parse (.*) of (.*),['list'],['object'],['java.lang.String.valueOf']
3,parse (.*) of (.*),"['metadata', 'attributes']","['xml', 'file']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
4,parse (.*) of (.*),"['expiration', 'date']","['debit', 'card']","['java.time.format.DateTimeFormatter.ofPattern', 'java.time.YearMonth.parse']"
5,parse (.*) of (.*),['end'],"['line', 'string']",['java.io.BufferedReader.readLine']
6,parse (.*) of (.*),['period'],['time'],['java.time.Duration.parse']
7,parse (.*) of (.*),['date'],"['after', 'years']","['java.lang.Integer.parseInt', 'java.util.Calendar.getInstance']"
8,parse (.*) of (.*),['sections'],"['a', 'text']",['java.util.regex.Pattern.compile']
9,parse (.*) of (.*),"['the', 'edges']","['a', 'string']",['java.util.regex.Pattern.compile']
10,parse (.*) of (.*),"['this', 'kind']",['text'],['java.util.regex.Pattern.compile']
11,parse (.*) of (.*),"['a', 'part']",['string'],['java.lang.Integer.parseInt']
12,parse (.*) of (.*),"['vs', 'zoneddatetime']",[],['java.time.ZoneId.of']
13,parse (.*) of (.*),"['first', 'strings']","['a', 'line']","['java.lang.String.split', 'java.util.Arrays.copyOfRange', 'java.lang.String.join']"
0,load (.*) on (.*),"['jdk', 'types']",['android'],['java.lang.Class.forName']
1,load (.*) on (.*),"['a', 'class']",['tomcat'],['java.lang.ClassLoader.getSystemClassLoader']
2,load (.*) on (.*),['opencv'],['android'],['java.lang.System.loadLibrary']
3,load (.*) on (.*),"['them', 'based']","['class', 'types']",['javax.xml.bind.JAXBContext.newInstance']
4,load (.*) on (.*),"['main', 'class']","['live', 'server']","['java.lang.System.setProperty', 'java.lang.Thread.currentThread']"
5,load (.*) on (.*),"['generated', 'class']","['server', 'side']",['java.lang.Class.forName']
6,load (.*) on (.*),['depending'],"['system', 'setup']",['java.lang.System.loadLibrary']
7,load (.*) on (.*),"['class', 'based']","['user', 'input']",['java.lang.Class.forName']
8,load (.*) on (.*),"['properties', 'based']","['test', 'annotation']",['java.util.Arrays.asList']
9,load (.*) on (.*),['images'],"['run', 'time']",['javax.imageio.ImageIO.read']
0,stop (.*) from (.*),['tomcat'],"['java', 'code']","['java.lang.Runtime.getRuntime', 'java.util.logging.Logger.getLogger']"
1,stop (.*) from (.*),"['java', 'scanner']","['accepting', 'input']","['java.lang.Thread.sleep', 'java.lang.Thread.interrupt']"
2,stop (.*) from (.*),['runnable'],"['main', 'class']",['java.lang.Thread.currentThread']
3,stop (.*) from (.*),"['some', 'graphics']",['redrawing'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
4,stop (.*) from (.*),"['an', 'audioclip']","['another', 'class']","['javax.sound.sampled.AudioSystem.getAudioInputStream', 'java.util.logging.Logger.getLogger', 'javax.sound.sampled.AudioSystem.getClip']"
5,stop (.*) from (.*),"['adb', 'logcat']",['running'],['java.lang.Runtime.getRuntime']
6,stop (.*) from (.*),"['java', 'process']","['jar', 'fil']",['java.lang.Runtime.getRuntime']
7,stop (.*) from (.*),['thread'],"['other', 'class']","['java.lang.Thread.stop', 'java.lang.Thread.currentThread']"
8,stop (.*) from (.*),['people'],['closing'],['java.lang.System.exit']
9,stop (.*) from (.*),['parts'],"['being', 'detachable']",['java.util.Arrays.stream']
10,stop (.*) from (.*),"['getting', 'input']",['user'],['java.util.Collections.sort']
11,stop (.*) from (.*),"['java', 'app']","['web', 'ui']","['java.lang.String.valueOf', 'java.lang.System.exit']"
0,start (.*) with (.*),"['new', 'line']",['n'],['java.lang.System.getProperty']
1,start (.*) with (.*),"['on', 'logon']",['java'],"['java.lang.Runtime.getRuntime', 'java.text.MessageFormat.format']"
2,start (.*) with (.*),"['sub', 'process']","['own', 'terminal']",['javax.swing.SwingUtilities.invokeLater']
3,start (.*) with (.*),"['stop', 'button']",['timer'],['java.lang.System.nanoTime']
4,start (.*) with (.*),['jar'],['processbuilder'],['java.lang.Runtime.getRuntime']
5,start (.*) with (.*),['application'],['flags'],['java.lang.Runtime.getRuntime']
6,start (.*) with (.*),['time'],['jmh'],['java.util.concurrent.ThreadLocalRandom.current']
0,output (.*) from (.*),['gif'],['servletoutputstream'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write', 'java.util.logging.Logger.getLogger', 'javax.imageio.ImageIO.createImageOutputStream']"
1,output (.*) from (.*),"['confidence', 'score']","['stanford', 'classifier']",['java.lang.Double.toString']
0,pass (.*) in (.*),"['by', 'reference']",['rmi'],"['java.rmi.registry.LocateRegistry.getRegistry', 'java.rmi.registry.LocateRegistry.createRegistry']"
1,pass (.*) in (.*),"['array', 'value']","['single', 'request']","['java.util.Collections.shuffle', 'java.lang.Integer.parseInt']"
2,pass (.*) in (.*),"['runtime', 'argumets']",['servlet'],['org.omg.CORBA.ORB.init']
3,pass (.*) in (.*),['parameter'],['multithreading'],['java.lang.Thread.sleep']
4,pass (.*) in (.*),"['arraylist', 'int']","['an', 'intent']",['java.util.Arrays.asList']
5,pass (.*) in (.*),"['set', 'flags']","['my', 'code']",['java.util.logging.Logger.getLogger']
6,pass (.*) in (.*),['string'],"['android', 'timepicker']",['java.lang.Integer.parseInt']
7,pass (.*) in (.*),['headers'],"['webservice', 'template']",['javax.xml.transform.TransformerFactory.newInstance']
8,pass (.*) in (.*),['events'],['swing'],['java.lang.System.exit']
0,run (.*) with (.*),"['python', 'program']","['virtual', 'environment']","['java.lang.Runtime.exec', 'java.lang.Runtime.getRuntime']"
1,run (.*) with (.*),"['shell', 'command']",['eof'],['java.lang.Runtime.getRuntime']
2,run (.*) with (.*),['method'],['jprogressbar'],"['java.lang.Thread.sleep', 'java.time.Duration.between', 'java.time.Instant.now', 'java.time.Duration.ofSeconds', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
3,run (.*) with (.*),"['methods', 'asynchronously']","['completable', 'future']","['java.util.concurrent.CompletableFuture.runAsync', 'java.util.concurrent.CompletableFuture.supplyAsync']"
4,run (.*) with (.*),"['java', 'file']","['variable', 'name']",['java.lang.Class.forName']
5,run (.*) with (.*),['threads'],"['static', 'variable']",['java.util.concurrent.Executors.newCachedThreadPool']
6,run (.*) with (.*),"['a', 'group']",['java'],['java.util.Arrays.asList']
7,run (.*) with (.*),['jar'],"['specific', 'path']",['java.lang.System.getProperty']
0,connect (.*) with (.*),['db'],['java'],['java.lang.Class.forName']
1,connect (.*) with (.*),['java'],"['wamp', 'server']",['java.sql.DriverManager.getConnection']
2,connect (.*) with (.*),"['two', 'circles']","['a', 'line']","['java.lang.Math.round', 'java.awt.geom.AffineTransform.getTranslateInstance', 'java.lang.Math.toRadians', 'java.lang.Math.atan2', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
3,connect (.*) with (.*),"['esp', 'softap']","['android', 'app']",['java.net.InetAddress.getByName']
4,connect (.*) with (.*),['it'],['database'],['java.sql.DriverManager.getConnection']
5,connect (.*) with (.*),"['to', 'db']",['jdbc'],['java.sql.DriverManager.getConnection']
6,connect (.*) with (.*),['jbuttons'],['keys'],['java.awt.EventQueue.invokeLater']
7,connect (.*) with (.*),"['sqliteopenhelper', 'class']",['mainactivity'],"['java.lang.System.getProperty', 'java.lang.String.valueOf']"
0,count (.*) of (.*),['number'],['rows'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
1,count (.*) of (.*),['number'],"['user', 'inputs']","['java.lang.System.exit', 'java.lang.Math.random']"
2,count (.*) of (.*),"['the', 'number']",['occurrences'],['java.util.Scanner.nextLine']
3,count (.*) of (.*),['number'],['comparisons'],"['java.lang.Math.round', 'java.util.Arrays.sort', 'java.lang.Math.random']"
4,count (.*) of (.*),"['the', 'number']",['appearances'],['java.util.stream.Collectors.summingInt']
5,count (.*) of (.*),['number'],"['content', 'tags']","['javax.xml.stream.XMLInputFactory.newInstance', 'javax.xml.parsers.SAXParserFactory.newInstance']"
6,count (.*) of (.*),['elements'],"['multiple', 'streams']","['java.util.stream.Collectors.summingInt', 'java.util.stream.Collectors.groupingBy', 'java.util.stream.Stream.of']"
7,count (.*) of (.*),"['variable', 'parameters']","['lambda', 'function']",['java.lang.Math.pow']
8,count (.*) of (.*),"['the', 'number']",['words'],"['java.util.regex.Pattern.compile', 'java.lang.System.exit']"
9,count (.*) of (.*),['occurances'],['strings'],['java.util.Arrays.sort']
10,count (.*) of (.*),"['the', 'number']",['points'],['java.lang.Integer.parseInt']
11,count (.*) of (.*),['occurrences'],['anagrams'],"['java.util.Arrays.stream', 'java.util.Arrays.sort']"
12,count (.*) of (.*),['frequency'],['elements'],"['java.time.LocalDate.parse', 'java.nio.file.Files.readAllLines', 'java.nio.file.Files.lines']"
13,count (.*) of (.*),['value'],"['string', 'array']",['java.lang.Double.parseDouble']
0,print (.*) to (.*),"['text', 'file']","['specific', 'printer']","['javax.print.ServiceUI.printDialog', 'javax.print.PrintServiceLookup.lookupDefaultPrintService', 'javax.print.PrintServiceLookup.lookupPrintServices']"
1,print (.*) to (.*),['anything'],['console'],['java.util.logging.Logger.getLogger']
2,print (.*) to (.*),"['jasperprint', 'directly']",['printer'],"['java.awt.print.PrinterJob.getPrinterJob', 'javax.print.PrintServiceLookup.lookupPrintServices']"
3,print (.*) to (.*),['button'],['jpanel'],['java.awt.print.PrinterJob.getPrinterJob']
4,print (.*) to (.*),"['parse', 'tree']",['stdout'],"['java.lang.System.lineSeparator', 'java.util.Arrays.asList']"
5,print (.*) to (.*),"['java', 'output']","['a', 'file']",['java.lang.System.setOut']
6,print (.*) to (.*),['image'],"['paper', 'printer']",['java.awt.print.PrinterJob.getPrinterJob']
7,print (.*) to (.*),"['output', 'how']",['debug'],['java.util.logging.Logger.getLogger']
8,print (.*) to (.*),['java'],"['a', 'window']","['java.lang.Integer.parseInt', 'javax.swing.JOptionPane.showMessageDialog']"
9,print (.*) to (.*),['dialog'],"['the', 'user']","['javax.print.ServiceUI.printDialog', 'javax.print.PrintServiceLookup.lookupDefaultPrintService']"
10,print (.*) to (.*),"['each', 'section']",['console'],['javax.swing.JOptionPane.showInputDialog']
11,print (.*) to (.*),['method'],"['non', 'recursive']",['java.util.Arrays.fill']
0,parse (.*) into (.*),['string'],['number'],"['java.text.NumberFormat.getInstance', 'java.lang.Integer.parseInt']"
1,parse (.*) into (.*),"['html', 'table']",['listview'],['javax.xml.xpath.XPathFactory.newInstance']
2,parse (.*) into (.*),['tree'],['xml'],['java.lang.String.join']
3,parse (.*) into (.*),"['the', 'string']",['numeric'],['java.lang.Character.isLetterOrDigit']
4,parse (.*) into (.*),"['a', 'string']",['double'],['java.lang.Double.parseDouble']
5,parse (.*) into (.*),"['formatted', 'string']","['an', 'array']",['java.lang.Integer.parseInt']
6,parse (.*) into (.*),['string'],['arraylist'],['java.util.Arrays.asList']
7,parse (.*) into (.*),['string'],"['a', 'map']",['java.util.regex.Pattern.compile']
0,open (.*) using (.*),"['html', 'file']",['java'],['java.awt.Desktop.getDesktop']
1,open (.*) using (.*),"['a', 'file']",['java'],"['java.lang.Runtime.getRuntime', 'java.lang.System.getProperty', 'java.awt.Desktop.getDesktop']"
2,open (.*) using (.*),"['csv', 'file']",['excel'],['java.lang.Runtime.getRuntime']
3,open (.*) using (.*),"['a', 'file']","['a', 'jbutton']",['java.awt.Desktop.getDesktop']
4,open (.*) using (.*),"['an', 'application']",['selenium'],['java.lang.Runtime.getRuntime']
5,open (.*) using (.*),"['a', 'file']","['exec', 'method']",['java.lang.Runtime.getRuntime']
6,open (.*) using (.*),['tab'],"['selenium', 'webdriver']",['java.lang.Thread.sleep']
7,open (.*) using (.*),['wordpad'],['java'],"['java.lang.Thread.sleep', 'java.lang.Runtime.getRuntime']"
0,output (.*) with (.*),['redirection'],"['screen', 'command']",['java.lang.Thread.sleep']
1,output (.*) with (.*),"['in', 'xstream']","['another', 'element']",['javax.xml.bind.JAXBContext.newInstance']
2,output (.*) with (.*),"['to', 'csv']",['comma'],['java.lang.System.lineSeparator']
3,output (.*) with (.*),"['when', 'computing']",['arrays'],['java.lang.String.valueOf']
4,output (.*) with (.*),"['to', 'html']","['spring', 'boot']",['java.lang.Thread.sleep']
0,compare (.*) to (.*),"['single', 'char']","['char', 'array']",['javax.swing.JOptionPane.showInputDialog']
1,compare (.*) to (.*),['image'],"['actual', 'screen']",['javax.imageio.ImageIO.write']
2,compare (.*) to (.*),['it'],"['a', 'string']","['java.lang.Character.toLowerCase', 'java.lang.Character.toString']"
3,compare (.*) to (.*),"['d', 'array']",['d'],['java.util.Arrays.asList']
4,compare (.*) to (.*),"['then', 'add']","['another', 'list']",['java.util.Arrays.asList']
5,compare (.*) to (.*),"['xs', 'string']","['xs', 'integer']",['javax.xml.xpath.XPathFactory.newInstance']
6,compare (.*) to (.*),['integer'],['jlabel'],['java.lang.Integer.parseInt']
0,output (.*) for (.*),['formatting'],['decimal'],['javax.swing.JOptionPane.showMessageDialog']
1,output (.*) for (.*),['path'],"['dynamic', 'compilation']","['java.util.Arrays.asList', 'javax.tools.ToolProvider.getSystemJavaCompiler']"
2,output (.*) for (.*),"['dependency', 'hash']","['each', 'dependency']",['java.security.MessageDigest.getInstance']
3,output (.*) for (.*),['in'],['loop'],['java.util.Arrays.stream']
0,wait (.*) for (.*),"['on', 'nothing']","['x', 'seconds']",['java.lang.Thread.sleep']
1,wait (.*) for (.*),['in'],['loop'],['java.lang.Thread.sleep']
2,wait (.*) for (.*),"['notify', 'approach']","['a', 'game']",['java.util.Arrays.asList']
3,wait (.*) for (.*),"['to', 'ask']","['user', 'input']",['java.lang.System.exit']
0,add (.*) for (.*),['truststore'],"['client', 'authentication']",['java.lang.System.setProperty']
1,add (.*) for (.*),"['multiple', 'listeners']","['multiple', 'components']",['javax.swing.SwingUtilities.invokeLater']
2,add (.*) for (.*),"['a', 'listener']","['locale', 'change']",['java.util.Locale.setDefault']
3,add (.*) for (.*),"['custom', 'endpoints']","['executable', 'jar']","['java.util.concurrent.Executors.newScheduledThreadPool', 'java.lang.Integer.valueOf']"
4,add (.*) for (.*),"['an', 'event']",['button'],['java.lang.System.exit']
0,calculate (.*) of (.*),"['the', 'median']","['an', 'array']",['java.util.Arrays.sort']
1,calculate (.*) of (.*),"['hash', 'value']","['a', 'file']",['java.security.MessageDigest.getInstance']
2,calculate (.*) of (.*),['divisors'],"['a', 'number']",['java.lang.Integer.parseInt']
3,calculate (.*) of (.*),"['the', 'sum']",['values'],['java.lang.Double.parseDouble']
4,calculate (.*) of (.*),"['correct', 'width']","['a', 'text']","['java.lang.Math.max', 'java.lang.Math.min']"
5,calculate (.*) of (.*),"['next', 'friday']","['odd', 'week']",['java.util.Calendar.getInstance']
6,calculate (.*) of (.*),['average'],['values'],"['java.util.stream.Collectors.groupingBy', 'java.util.stream.Collectors.averagingInt', 'java.util.stream.Collectors.mapping']"
7,calculate (.*) of (.*),['midpoints'],"['lines', 'recursively']",['java.lang.Math.floor']
8,calculate (.*) of (.*),"['plot', 'rate']",['change'],['java.lang.Math.round']
9,calculate (.*) of (.*),"['the', 'average']",['them'],"['java.util.Arrays.stream', 'java.util.regex.Pattern.compile']"
10,calculate (.*) of (.*),['average'],"['an', 'array']",['java.lang.Integer.parseInt']
11,calculate (.*) of (.*),"['the', 'difference']",['dates'],"['java.time.Duration.between', 'java.util.Date.from', 'java.time.LocalDateTime.of', 'java.time.LocalDateTime.now', 'java.time.Period.between', 'java.time.LocalDateTime.ofInstant']"
12,calculate (.*) of (.*),['keysize'],['keypairgenerator'],"['java.lang.System.getProperty', 'java.security.KeyPairGenerator.getInstance']"
13,calculate (.*) of (.*),['summation'],"['the', 'function']",['java.util.Arrays.stream']
0,change (.*) from (.*),"['all', 'values']",['to'],['java.util.Arrays.stream']
1,change (.*) from (.*),"['the', 'jpanel']","['another', 'class']",['javax.swing.SwingUtilities.invokeLater']
2,change (.*) from (.*),"['month', 'format']",['jdatechooser'],['java.text.DateFormat.getDateInstance']
3,change (.*) from (.*),"['label', 'text']","['different', 'class']",['java.lang.System.exit']
4,change (.*) from (.*),"['lines', 'color']",['datepickerdialog'],['java.util.Calendar.getInstance']
5,change (.*) from (.*),['text'],"['menu', 'buttons']","['javax.swing.UIManager.getString', 'javax.swing.UIManager.getBoolean', 'javax.swing.UIManager.put', 'javax.swing.UIManager.getColor', 'javax.swing.UIManager.getBorder']"
6,change (.*) from (.*),['scene'],"['another', 'thread']",['java.lang.Thread.sleep']
0,compare (.*) using (.*),['dates'],['java'],['java.util.Calendar.getInstance']
1,compare (.*) using (.*),['integers'],['stream'],['java.util.stream.Stream.of']
2,compare (.*) using (.*),"['it', 'by']",['comparator'],"['java.util.Collections.sort', 'java.lang.Integer.parseInt']"
3,compare (.*) using (.*),"['null', 'values']",['comparator'],['java.lang.Double.parseDouble']
4,compare (.*) using (.*),['method'],"['a', 'double']",['java.lang.Double.compare']
5,compare (.*) using (.*),"['java', 'lists']","['custom', 'logic']",['java.util.stream.IntStream.range']
6,compare (.*) using (.*),"['two', 'prices']","['if', 'else']",['java.lang.Double.parseDouble']
0,find (.*) on (.*),"['current', 'truststore']","['disk', 'programatically']",['javax.net.ssl.SSLContext.setDefault']
1,find (.*) on (.*),['symbol'],"['drivermanager', 'getconnection']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection', 'java.util.logging.Logger.getLogger']"
2,find (.*) on (.*),['netmask'],"['android', 'device']","['java.net.InetAddress.getByAddress', 'java.net.NetworkInterface.getByInetAddress']"
3,find (.*) on (.*),"['a', 'method']","['a', 'class']",['java.util.regex.Pattern.compile']
4,find (.*) on (.*),"['files', 'based']",['glob'],['java.nio.file.Files.walk']
5,find (.*) on (.*),"['build', 'properties']",['gate'],"['java.lang.System.setProperty', 'java.lang.System.getProperty']"
6,find (.*) on (.*),"['a', 'file']",['usb'],"['java.lang.System.getProperty', 'java.awt.Desktop.getDesktop', 'javax.swing.JOptionPane.showMessageDialog']"
7,find (.*) on (.*),"['right', 'position']",['array'],['java.lang.Long.parseLong']
0,start (.*) in (.*),"['chrome', 'driver']","['selenium', 'webdriver']",['java.lang.System.setProperty']
1,start (.*) in (.*),"['chrome', 'browser']",['webdriver'],['java.lang.System.setProperty']
2,start (.*) in (.*),"['activity', 'componentinfo']",['android'],['java.net.URLEncoder.encode']
3,start (.*) in (.*),['rmiregistry'],"['rmi', 'server']",['java.rmi.registry.LocateRegistry.createRegistry']
4,start (.*) in (.*),"['of', 'activity']",['android'],"['java.lang.Thread.sleep', 'java.lang.Integer.parseInt']"
5,start (.*) in (.*),"['end', 'number']","['android', 'java']","['java.util.concurrent.ThreadLocalRandom.current', 'java.lang.Integer.parseInt']"
6,start (.*) in (.*),"['of', 'string']",['regexp'],['java.lang.String.matches']
7,start (.*) in (.*),['data'],"['firebase', 'android']",['java.lang.Thread.sleep']
8,start (.*) in (.*),['at'],"['swing', 'windows']",['java.awt.EventQueue.invokeLater']
0,match (.*) in (.*),['word'],['string'],['java.util.regex.Pattern.compile']
1,match (.*) in (.*),"['a', 'digit']","['android', 'java']",['java.util.regex.Pattern.compile']
2,match (.*) in (.*),"['new', 'lines']","['java', 'regex']",['java.util.regex.Pattern.compile']
3,match (.*) in (.*),"['any', 'path']",['pathmatcher'],['java.nio.file.FileSystems.getDefault']
4,match (.*) in (.*),"['the', 'pattern']",['android'],['java.util.regex.Pattern.compile']
5,match (.*) in (.*),"['two', 'works']","['a', 'line']",['java.util.regex.Pattern.compile']
6,match (.*) in (.*),['wildcard'],"['result', 'type']",['java.util.Arrays.asList']
7,match (.*) in (.*),['patterns'],['url'],['java.util.regex.Pattern.compile']
8,match (.*) in (.*),"['specific', 'url']",['string'],"['java.util.regex.Pattern.quote', 'java.util.regex.Pattern.compile']"
9,match (.*) in (.*),['content'],['quotes'],['java.util.regex.Pattern.compile']
10,match (.*) in (.*),['aas'],"['this', 'string']",['java.util.regex.Pattern.compile']
11,match (.*) in (.*),"['string', 'pattern']","['multi', 'lines']",['java.util.regex.Pattern.compile']
12,match (.*) in (.*),['variables'],"['a', 'string']",['java.util.regex.Pattern.compile']
0,resize (.*) in (.*),['components'],"['java', 'swing']","['javax.swing.Box.createHorizontalBox', 'javax.swing.Box.createVerticalBox', 'javax.swing.SwingUtilities.invokeAndWait']"
1,resize (.*) in (.*),"['image', 'iconimage']",['jlabel'],['javax.swing.JOptionPane.showMessageDialog']
2,resize (.*) in (.*),['jcomponents'],['gridlayout'],"['javax.swing.SwingUtilities.invokeLater', 'java.lang.System.exit']"
3,resize (.*) in (.*),['jpanel'],"['java', 'swing']",['javax.swing.SwingUtilities.getRoot']
4,resize (.*) in (.*),"['the', 'window']",['swing'],['java.awt.Toolkit.getDefaultToolkit']
5,resize (.*) in (.*),['jpanel'],['jframe'],['javax.swing.SwingUtilities.invokeLater']
0,query (.*) for (.*),"['adjusting', 'dates']",['timezone'],['java.util.Arrays.asList']
0,calculate (.*) for (.*),['initialdelay'],"['scheduledexecutorservice', 'scheduleatfixedrate']",['java.util.Calendar.getInstance']
1,calculate (.*) for (.*),"['cpu', 'cycle']","['java', 'function']","['java.lang.System.nanoTime', 'java.lang.System.currentTimeMillis', 'java.lang.Thread.getId', 'java.lang.management.ManagementFactory.getThreadMXBean']"
2,calculate (.*) for (.*),"['the', 'average']","['each', 'line']","['java.util.Arrays.asList', 'java.util.Arrays.sort']"
0,find (.*) using (.*),['constructor'],"['arrays', 'aslist']",['java.util.Arrays.asList']
1,find (.*) using (.*),"['os', 'name']",['java'],"['java.lang.System.getProperty', 'java.lang.System.getProperties']"
2,find (.*) using (.*),['symbol'],['bigdecimal'],"['java.math.BigDecimal.subtract', 'java.lang.Integer.parseInt']"
3,find (.*) using (.*),"['a', 'class']","['class', 'forname']",['java.lang.Class.forName']
4,find (.*) using (.*),['symbol'],"['drivermanager', 'getconnection']",['java.sql.DriverManager.getConnection']
5,find (.*) using (.*),"['shortest', 'path']","['dijkstra', 'algorithm']",['java.lang.Integer.compare']
6,find (.*) using (.*),"['street', 'road']",['java'],['java.util.regex.Pattern.compile']
7,find (.*) using (.*),"['the', 'data']","['in', 'clause']",['java.util.Arrays.asList']
8,find (.*) using (.*),['synonyms'],"['arabic', 'wordnet']",['java.lang.System.setProperty']
9,find (.*) using (.*),"['an', 'attribute']",['htmldocument'],['java.lang.System.exit']
10,find (.*) using (.*),"['object', 'while']","['comparable', 'class']",['java.lang.Double.compare']
11,find (.*) using (.*),"['a', 'string']",['pattern'],['java.util.regex.Pattern.compile']
12,find (.*) using (.*),"['the', 'deviation']",['java'],['java.lang.Math.pow']
13,find (.*) using (.*),['duplicates'],['hashmap'],['java.util.Arrays.stream']
0,call (.*) using (.*),"['rest', 'url']",['camel'],['java.lang.Thread.sleep']
1,call (.*) using (.*),"['a', 'view']",['callablestatement'],['java.sql.DriverManager.getConnection']
2,call (.*) using (.*),"['python', 'classes']",['processbuilder'],['java.util.Arrays.asList']
3,call (.*) using (.*),['webservice'],['threadpoolexecutor'],['java.util.concurrent.Executors.newFixedThreadPool']
4,call (.*) using (.*),['api'],['tlsv'],['javax.net.ssl.SSLContext.getInstance']
5,call (.*) using (.*),['getattributens'],"['java', 'dom']",['javax.xml.parsers.DocumentBuilderFactory.newInstance']
6,call (.*) using (.*),"['stack', 'when']",['callable'],['java.lang.Thread.dumpStack']
7,call (.*) using (.*),"['java', 'source']",['function'],['java.lang.System.getProperty']
0,change (.*) with (.*),"['the', 'classpath']",[],['java.lang.Thread.currentThread']
1,change (.*) with (.*),"['background', 'color']","['animated', 'transition']",['java.lang.Thread.sleep']
2,change (.*) with (.*),['listener'],"['edittext', 'fields']","['java.lang.Double.valueOf', 'java.lang.Math.round']"
3,change (.*) with (.*),['look'],"['setopaque', 'false']",['javax.swing.SwingUtilities.invokeLater']
4,change (.*) with (.*),['dateformat'],"['java', 'stream']","['java.time.LocalDate.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
5,change (.*) with (.*),['delay'],['button'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
6,change (.*) with (.*),['tooltips'],['nimbus'],"['javax.swing.UIManager.put', 'javax.swing.UIManager.setLookAndFeel']"
7,change (.*) with (.*),"['log', 'level']","['string', 'value']",['java.util.logging.Level.parse']
8,change (.*) with (.*),"['nic', 'settings']","['java', 'code']","['java.nio.file.Paths.get', 'java.lang.Thread.sleep', 'java.lang.Runtime.getRuntime', 'java.nio.file.Files.delete']"
9,change (.*) with (.*),"['refunding', 'machine']","['various', 'loops']","['java.text.NumberFormat.getCurrencyInstance', 'java.lang.System.console', 'java.lang.Double.parseDouble']"
0,search (.*) in (.*),"['a', 'string']","['string', 'array']","['java.util.Arrays.stream', 'java.util.Arrays.asList']"
1,search (.*) in (.*),['resources'],"['inner', 'jar']",['java.lang.ClassLoader.getResources']
2,search (.*) in (.*),['filter'],['jtable'],['java.awt.EventQueue.invokeLater']
3,search (.*) in (.*),['file'],"['a', 'directory']","['java.nio.file.FileSystems.getDefault', 'java.nio.file.Files.walkFileTree', 'java.nio.file.Files.walk']"
4,search (.*) in (.*),"['the', 'word']",['textarea'],['java.lang.Character.isWhitespace']
5,search (.*) in (.*),"['and', 'replace']","['textarea', 'java']",['java.lang.String.replaceAll']
6,search (.*) in (.*),"['for', 'char']",['array'],"['java.util.Arrays.toString', 'javax.swing.JOptionPane.showInputDialog', 'javax.swing.JOptionPane.showMessageDialog']"
7,search (.*) in (.*),['entity'],['lucene'],['java.util.Date.toString']
8,search (.*) in (.*),"['exact', 'string']","['string', 'array']",['java.util.Arrays.asList']
9,search (.*) in (.*),['algorithm'],"['java', 'collection']","['java.util.Collections.sort', 'java.util.Arrays.sort']"
10,search (.*) in (.*),['time'],['hashmap'],['java.lang.System.currentTimeMillis']
11,search (.*) in (.*),"['an', 'element']",['xml'],['javax.xml.stream.XMLInputFactory.newInstance']
0,replace (.*) using (.*),['words'],['regex'],['java.util.regex.Pattern.compile']
1,replace (.*) using (.*),['substring'],['regex'],['java.util.regex.Pattern.compile']
2,replace (.*) using (.*),['string'],"['java', 'regex']",['java.util.regex.Pattern.compile']
3,replace (.*) using (.*),"['string', 'content']",[],['java.util.regex.Pattern.compile']
0,stop (.*) in (.*),['thread'],['android'],['java.lang.Thread.sleep']
1,stop (.*) in (.*),"['jmeter', 'test']","['beanshell', 'preprocessor']",['java.lang.System.exit']
2,stop (.*) in (.*),"['scheduling', 'task']","['spring', 'java']",['java.util.concurrent.Executors.newScheduledThreadPool']
3,stop (.*) in (.*),['typing'],"['a', 'jtextfield']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
4,stop (.*) in (.*),"['while', 'browsing']","['selenium', 'webdriver']",['java.lang.Thread.sleep']
5,stop (.*) in (.*),['sikuli'],"['background', 'thread']","['java.lang.Thread.interrupted', 'java.lang.Object.wait', 'java.lang.Thread.interrupt']"
6,stop (.*) in (.*),['it'],"['contextdestroyed', 'method']",['java.lang.Thread.start']
0,convert (.*) with (.*),['date'],['nanoseconds'],['java.time.LocalDateTime.parse']
1,convert (.*) with (.*),['xml'],['jaxb'],['javax.xml.bind.JAXBContext.newInstance']
2,convert (.*) with (.*),"['arraylist', 'loop']","['java', 'foreach']",['java.util.stream.Collectors.toMap']
3,convert (.*) with (.*),"['to', 'map']","['their', 'count']","['java.util.stream.Collectors.collectingAndThen', 'java.util.stream.Collectors.summingInt', 'java.util.stream.Collectors.counting']"
4,convert (.*) with (.*),"['specific', 'algorithm']",['streams'],"['java.util.stream.IntStream.range', 'java.util.Arrays.sort']"
0,pass (.*) into (.*),"['hadoop', 'arguments']","['java', 'code']",['java.lang.System.exit']
1,pass (.*) into (.*),"['a', 'stack']","['a', 'method']",['java.lang.Float.parseFloat']
2,pass (.*) into (.*),"['two', 'arrays']","['one', 'varargs']","['java.lang.System.arraycopy', 'java.util.stream.Stream.concat']"
3,pass (.*) into (.*),"['sorted', 'integers']",['joptionpane'],['java.util.Arrays.toString']
4,pass (.*) into (.*),['function'],"['parent', 'method']",['java.util.function.Function.apply']
5,pass (.*) into (.*),"['each', 'element']","['a', 'method']","['java.util.stream.Stream.map', 'java.util.stream.Stream.flatMap']"
6,pass (.*) into (.*),"['observable', 'string']",['abstractinputstreamcontent'],['java.lang.Math.max']
7,pass (.*) into (.*),['it'],"['intent', 'extras']","['java.lang.Long.valueOf', 'java.lang.String.valueOf']"
8,pass (.*) into (.*),['data'],['textfields'],['java.util.regex.Pattern.compile']
9,pass (.*) into (.*),['file'],['jar'],['java.nio.file.Paths.get']
0,search (.*) using (.*),"['in', 'files']",['java'],['java.util.regex.Pattern.compile']
1,search (.*) using (.*),['result'],"['levenshtein', 'distance']","['java.lang.Character.toString', 'java.lang.Math.min']"
2,search (.*) using (.*),"['text', 'only']",['java'],['java.net.URLEncoder.encode']
3,search (.*) using (.*),"['better', 'performance']",['threads'],"['java.lang.Thread.sleep', 'java.lang.Math.pow', 'java.lang.Runtime.getRuntime', 'java.util.concurrent.Executors.newFixedThreadPool', 'java.util.Collections.synchronizedList']"
4,search (.*) using (.*),['parameters'],['predicates'],"['java.util.Arrays.stream', 'java.util.EnumSet.of']"
5,search (.*) using (.*),"['json', 'array']",['java'],['java.util.Collections.sort']
6,search (.*) using (.*),"['similar', 'images']",['jsp'],['java.lang.Integer.valueOf']
7,search (.*) using (.*),['algorithim'],"['multi', 'cores']","['java.util.concurrent.ForkJoinPool.commonPool', 'java.util.stream.Stream.generate']"
8,search (.*) using (.*),['results'],"['observable', 's']",['java.lang.Thread.sleep']
0,build (.*) from (.*),['xml'],"['java', 'program']",['java.lang.Runtime.getRuntime']
1,build (.*) from (.*),['char'],['string'],['java.util.regex.Pattern.compile']
0,filter (.*) on (.*),['reduction'],"['duplicated', 'entries']",['java.util.function.BinaryOperator.minBy']
1,filter (.*) on (.*),"['by', 'pattern']","['a', 'textfield']",['java.util.regex.Pattern.compile']
2,filter (.*) on (.*),['based'],"['different', 'fields']",['java.util.Arrays.stream']
3,filter (.*) on (.*),"['it', 'based']","['duplicate', 'values']",['java.util.function.Function.identity']
0,move (.*) on (.*),['simultaneously'],['screen'],['java.lang.Thread.sleep']
1,move (.*) on (.*),['object'],"['path', 'circle']",['java.lang.Math.sqrt']
2,move (.*) on (.*),['ball'],['android'],['java.lang.Thread.sleep']
3,move (.*) on (.*),['jlabel'],['jpanel'],"['java.lang.Math.min', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
4,move (.*) on (.*),['based'],"['angle', 'given']",['java.lang.Math.atan2']
5,move (.*) on (.*),['image'],"['key', 'presses']",['java.lang.Thread.sleep']
6,move (.*) on (.*),"['duplicates', 'files']","['power', 'loss']","['java.nio.file.Paths.get', 'java.nio.file.Files.delete', 'java.nio.file.Files.move']"
0,repaint (.*) in (.*),"['for', 'jdialog']",['swing'],['javax.swing.SwingUtilities.getWindowAncestor']
1,repaint (.*) in (.*),['scatterplot'],['jfreechart'],['java.awt.EventQueue.invokeLater']
2,repaint (.*) in (.*),"['method', 'calling']","['another', 'class']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.KeyStroke.getKeyStroke']"
3,repaint (.*) in (.*),['components'],['joptionpane'],"['java.awt.EventQueue.invokeLater', 'javax.swing.JOptionPane.showConfirmDialog', 'javax.swing.SwingUtilities.getWindowAncestor']"
4,repaint (.*) in (.*),['method'],['cycle'],"['java.lang.Math.sin', 'java.lang.Thread.sleep', 'java.lang.Math.cos']"
0,write (.*) in (.*),"['an', 'integer']","['little', 'endian']",['java.nio.ByteBuffer.allocate']
1,write (.*) in (.*),['number'],['jlabel'],['java.lang.String.format']
2,write (.*) in (.*),['log'],['files'],['java.util.logging.LogManager.getLogger']
3,write (.*) in (.*),"['cmyk', 'image']",['pdf'],['javax.imageio.ImageIO.write']
4,write (.*) in (.*),['files'],"['project', 'folder']",['java.lang.System.getenv']
5,write (.*) in (.*),['them'],"['multiples', 'files']","['java.lang.Thread.sleep', 'java.util.Arrays.asList']"
6,write (.*) in (.*),['atomically'],['concurrenthashmap'],['java.util.stream.IntStream.range']
7,write (.*) in (.*),"['generic', 'enum']",['hibernate'],['java.util.Objects.requireNonNull']
8,write (.*) in (.*),"['all', 'info']",['files'],['java.util.logging.Logger.getLogger']
9,write (.*) in (.*),['time'],['mysql'],"['java.lang.Integer.toString', 'java.sql.DriverManager.getConnection', 'java.lang.Class.forName']"
10,write (.*) in (.*),['data'],['file'],"['java.nio.file.FileSystems.getDefault', 'java.nio.file.Files.copy']"
11,write (.*) in (.*),"['some', 'pause']",['method'],['java.awt.Toolkit.getDefaultToolkit']
12,write (.*) in (.*),"['to', 'file']","['java', 'bufferedwriter']","['java.lang.Integer.toHexString', 'java.lang.Character.digit']"
13,write (.*) in (.*),"['below', 'code']",['java'],['java.util.Arrays.asList']
0,return (.*) with (.*),"['epoch', 'time']",['milliseconds'],"['java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
1,return (.*) with (.*),['bufferedimage'],['transparency'],['javax.imageio.ImageIO.read']
2,return (.*) with (.*),"['xml', 'element']","['highest', 'value']",['java.lang.Integer.parseInt']
3,return (.*) with (.*),['value'],['java'],['java.lang.Runtime.getRuntime']
4,return (.*) with (.*),['false'],['value'],"['java.util.concurrent.atomic.AtomicReference.compareAndSet', 'java.lang.Integer.valueOf']"
5,return (.*) with (.*),['null'],['pendingintent'],['java.util.Calendar.getInstance']
6,return (.*) with (.*),"['function', 'value']","['optional', 'argument']",['java.util.Optional.get']
7,return (.*) with (.*),['row'],"['maximum', 'value']",['java.util.Arrays.copyOf']
8,return (.*) with (.*),['them'],"['their', 'type']",['java.lang.Class.forName']
0,delete (.*) in (.*),['methods'],"['spring', 'security']",['java.util.regex.Pattern.compile']
1,delete (.*) in (.*),"['all', 'rows']",['jtable'],['java.awt.EventQueue.invokeLater']
2,delete (.*) in (.*),['it'],"['selenium', 'webdriver']",['java.nio.file.Files.deleteIfExists']
3,delete (.*) in (.*),['entities'],['eventlistener'],['java.util.Collections.newSetFromMap']
4,delete (.*) in (.*),['record'],['database'],['java.lang.Integer.parseInt']
5,delete (.*) in (.*),['lines'],"['java', 'swing']",['java.awt.EventQueue.invokeLater']
6,delete (.*) in (.*),['directory'],['windows'],['java.nio.file.Files.delete']
7,delete (.*) in (.*),['update'],"['bulk', 'operation']",['java.util.regex.Pattern.compile']
8,delete (.*) in (.*),"['exactly', 'node']",['jtree'],['javax.swing.JTree.getPathForRow']
9,delete (.*) in (.*),"['duplicate', 'characters']","['a', 'string']",['java.lang.String.valueOf']
10,delete (.*) in (.*),['sms'],['android'],['java.util.Calendar.getInstance']
0,access (.*) of (.*),['safety'],['getters'],['java.util.Collections.unmodifiableList']
1,access (.*) of (.*),"['the', 'methods']",['list'],"['java.util.Arrays.stream', 'java.util.stream.Collectors.groupingBy', 'java.util.stream.IntStream.range']"
2,access (.*) of (.*),"['array', 'value']","['side', 'scope']","['java.util.regex.Pattern.compile', 'java.lang.Boolean.valueOf']"
3,access (.*) of (.*),['enum'],['arrays'],"['java.util.Arrays.stream', 'java.util.Optional.ofNullable']"
4,access (.*) of (.*),"['to', 'attribute']",['class'],['java.lang.Math.abs']
5,access (.*) of (.*),['level'],"['a', 'field']",['java.lang.reflect.Modifier.isProtected']
6,access (.*) of (.*),"['specific', 'parts']","['strings', 'java']","['java.util.regex.Pattern.compile', 'java.lang.Integer.parseInt']"
7,access (.*) of (.*),['method'],"['thread', 'class']",['java.lang.Thread.sleep']
0,print (.*) from (.*),['xml'],['java'],"['java.lang.System.setProperty', 'org.w3c.dom.bootstrap.DOMImplementationRegistry.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance', 'java.lang.Boolean.valueOf']"
1,print (.*) from (.*),"['each', 'word']","['this', 'sentence']",['java.lang.String.join']
2,print (.*) from (.*),"['the', 'rows']",['database'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
3,print (.*) from (.*),"['server', 'file']","['client', 'side']",['java.awt.Desktop.print']
4,print (.*) from (.*),"['specific', 'record']",['hashmap'],"['java.util.Map.get', 'java.util.Map.keySet']"
5,print (.*) from (.*),"['out', 'objects']",['array'],['java.util.Arrays.toString']
6,print (.*) from (.*),"['out', 'text']","['a', 'string']","['java.awt.print.PrinterJob.lookupPrintServices', 'javax.print.PrintServiceLookup.lookupDefaultPrintService']"
7,print (.*) from (.*),"['to', 'jtextarea']","['another', 'class']",['javax.swing.SwingUtilities.invokeLater']
8,print (.*) from (.*),['information'],['sql'],"['java.sql.Statement.executeQuery', 'java.lang.Integer.parseInt', 'java.util.logging.Logger.getLogger', 'javax.swing.JOptionPane.showMessageDialog', 'java.sql.PreparedStatement.executeQuery']"
9,print (.*) from (.*),['output'],"['return', 'methods']",['java.lang.Math.min']
0,check (.*) with (.*),['date'],"['todays', 'date']",['java.util.Calendar.getInstance']
1,check (.*) with (.*),['blank'],"['java', 'scanner']",['java.lang.Double.parseDouble']
2,check (.*) with (.*),"['for', 'equality']",['subclasses'],['java.util.Objects.hashCode']
0,sort (.*) to (.*),"['a', 'set']","['a', 'list']",['java.util.Collections.sort']
1,sort (.*) to (.*),['lowest'],['highest'],['java.util.Arrays.sort']
2,sort (.*) to (.*),"['a', 'set']","['a', 'list']",['java.util.Collections.sort']
3,sort (.*) to (.*),"['them', 'according']","['length', 'value']",['java.lang.Integer.compare']
4,sort (.*) to (.*),['results'],"['an', 'array']",['java.lang.System.arraycopy']
5,sort (.*) to (.*),['according'],"['last', 'column']","['java.lang.Double.compare', 'java.util.Arrays.sort']"
6,sort (.*) to (.*),"['arraylist', 'according']",[],['java.util.Collections.sort']
7,sort (.*) to (.*),"['string', 'according']","['certain', 'substrings']",['java.util.Collections.sort']
8,sort (.*) to (.*),"['list', 'content']","['new', 'lists']",['java.util.stream.Collectors.groupingBy']
9,sort (.*) to (.*),"['from', 'highest']",['lowest'],['java.util.Arrays.sort']
0,put (.*) to (.*),['entity'],['server'],['java.lang.String.format']
1,put (.*) to (.*),"['custom', 'classloader']",['use'],['java.lang.Thread.currentThread']
2,put (.*) to (.*),['in'],"['the', 'jtable']",['java.lang.Integer.parseInt']
3,put (.*) to (.*),['method'],"['server', 'java']",['java.lang.String.valueOf']
4,put (.*) to (.*),['object'],"['azure', 'storage']",['javax.crypto.Mac.getInstance']
5,put (.*) to (.*),"['actionlistenerand', 'actioncommand']","['multiple', 'jbuttons']","['java.awt.EventQueue.invokeLater', 'java.lang.String.valueOf']"
6,put (.*) to (.*),"['a', 'icon']",['jlabel'],['javax.imageio.ImageIO.read']
7,put (.*) to (.*),['object'],"['multiple', 'groups']","['java.util.stream.Collectors.toList', 'java.util.stream.Collectors.mapping']"
0,extract (.*) with (.*),['strings'],['regex'],"['java.util.regex.Matcher.group', 'java.util.regex.Pattern.compile']"
1,extract (.*) with (.*),"['an', 'isbn']",['regex'],['java.util.regex.Pattern.compile']
2,extract (.*) with (.*),"['multiple', 'lines']",['regex'],['java.util.regex.Pattern.compile']
3,extract (.*) with (.*),['address'],"['regular', 'expressions']",['java.util.regex.Pattern.compile']
4,extract (.*) with (.*),"['an', 'array']","['different', 'criteria']",['java.lang.Math.max']
5,extract (.*) with (.*),"['a', 'string']","['regular', 'expression']",['java.util.regex.Pattern.compile']
6,extract (.*) with (.*),['members'],['regex'],['java.util.regex.Pattern.compile']
0,add (.*) with (.*),['all'],"['java', 'streams']",['java.util.stream.Collectors.toCollection']
1,add (.*) with (.*),['link'],['delay'],['java.lang.Math.sqrt']
2,add (.*) with (.*),"['several', 'appwidgets']","['different', 'configuration']",['java.lang.String.valueOf']
3,add (.*) with (.*),"['set', 'time']","['only', 'minutes']","['java.time.LocalTime.of', 'java.time.format.DateTimeFormatter.ofPattern']"
4,add (.*) with (.*),"['sound', 'even']","['wav', 'file']","['javax.sound.sampled.AudioSystem.getAudioInputStream', 'javax.sound.sampled.AudioSystem.getClip']"
5,add (.*) with (.*),['element'],['setcellfactory'],['java.lang.Character.toString']
6,add (.*) with (.*),"['file', 'files']","['specific', 'order']",['java.util.Arrays.sort']
0,insert (.*) to (.*),"['excel', 'data']",['database'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
1,insert (.*) to (.*),"['delete', 'column']","['jtable', 'java']",['java.util.Vector.remove']
2,insert (.*) to (.*),"['value', 'in']","['xml', 'tag']",['javax.xml.transform.TransformerFactory.newInstance']
3,insert (.*) to (.*),"['form', 'textfield']","['sqlite', 'database']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection', 'java.util.logging.Logger.getLogger']"
0,append (.*) to (.*),"['a', 'newline']",['stringbuilder'],"['java.lang.System.lineSeparator', 'java.lang.System.getProperty']"
1,append (.*) to (.*),"['new', 'column']","['csv', 'file']","['java.lang.System.getProperty', 'java.lang.String.valueOf']"
2,append (.*) to (.*),"['a', 'byte']","['a', 'string']",['java.lang.Byte.toString']
3,append (.*) to (.*),['files'],"['a', 'jtextarea']",['javax.swing.AbstractButton.fireActionPerformed']
4,append (.*) to (.*),"['n', 'characters']",['string'],['java.lang.String.format']
0,split (.*) in (.*),"['an', 'array']",['half'],['java.util.Arrays.copyOfRange']
1,split (.*) in (.*),"['and', 'loop']",['java'],['java.util.stream.Stream.iterate']
2,split (.*) in (.*),['string'],"['an', 'array']","['java.lang.Double.parseDouble', 'java.lang.Math.round']"
3,split (.*) in (.*),['failed'],"['hadoop', 'mapper']","['java.lang.Math.max', 'java.lang.Double.valueOf', 'java.lang.Math.min']"
4,split (.*) in (.*),"['request', 'params']","['spring', 'controllers']",['java.util.Arrays.stream']
5,split (.*) in (.*),['gui'],"['few', 'classes']",['javax.swing.SwingUtilities.invokeLater']
6,split (.*) in (.*),"['by', 'period']",['clojure'],['java.util.regex.Pattern.compile']
7,split (.*) in (.*),"['the', 'string']","['java', 'by']","['java.util.regex.Pattern.compile', 'java.util.regex.Pattern.split']"
8,split (.*) in (.*),['string'],['spark'],['java.util.regex.Pattern.compile']
9,split (.*) in (.*),"['generate', 'operation']",['sequence'],['java.util.Arrays.asList']
10,split (.*) in (.*),['bar'],"['a', 'jsplitpane']",['javax.swing.SwingUtilities.invokeLater']
11,split (.*) in (.*),['string'],"['an', 'array']","['java.time.LocalDate.of', 'java.lang.Double.parseDouble', 'java.lang.Integer.parseInt']"
12,split (.*) in (.*),['result'],['lambda'],"['java.util.stream.Collectors.toList', 'java.util.stream.Collectors.mapping']"
13,split (.*) in (.*),['array'],['objects'],"['java.util.Arrays.asList', 'java.util.Collections.singletonList']"
14,split (.*) in (.*),['words'],"['closed', 'parenthesis']",['java.util.regex.Pattern.compile']
0,add (.*) using (.*),['numbers'],['threads'],['java.lang.Thread.sleep']
1,add (.*) using (.*),"['pades', 'ltv']",['itext'],"['java.security.cert.CertificateFactory.getInstance', 'java.security.MessageDigest.getInstance']"
2,add (.*) using (.*),['timepicker'],['fragment'],['java.util.Calendar.getInstance']
3,add (.*) using (.*),"['it', 'later']",['java'],['java.util.Arrays.asList']
4,add (.*) using (.*),['total'],"['java', 'function']",['java.util.stream.IntStream.builder']
0,display (.*) from (.*),['image'],"['byte', 'array']",['javax.imageio.ImageIO.write']
1,display (.*) from (.*),"['an', 'image']","['my', 'desktop']",['javax.imageio.ImageIO.read']
2,display (.*) from (.*),['values'],"['string', 'args']",['java.lang.Integer.parseInt']
3,display (.*) from (.*),['image'],['server'],['javax.imageio.ImageIO.read']
4,display (.*) from (.*),"['density', 'dpi']","['java', 'code']",['java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment']
5,display (.*) from (.*),"['a', 'name']","['a', 'database']",['java.lang.Class.forName']
6,display (.*) from (.*),"['transparent', 'text']","['java', 'program']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
7,display (.*) from (.*),"['specific', 'values']","['stored', 'array']",['java.lang.Integer.valueOf']
8,display (.*) from (.*),['object'],['buffer'],['java.lang.System.exit']
9,display (.*) from (.*),"['data', 'inputs']",['arrays'],['java.lang.Integer.parseInt']
10,display (.*) from (.*),"['a', 'row']","['a', 'database']",['java.sql.DriverManager.getConnection']
11,display (.*) from (.*),"['the', 'output']","['my', 'fields']",['java.lang.Integer.parseInt']
0,match (.*) for (.*),"['markdown', 'syntax']",['headings'],['java.util.regex.Pattern.compile']
1,match (.*) for (.*),"['a', 'pattern']",['quizzes'],['java.lang.String.matches']
0,send (.*) using (.*),['email'],['javacode'],"['java.lang.System.setProperty', 'java.lang.System.getProperties']"
1,send (.*) using (.*),"['an', 'email']",['netbeans'],['java.lang.Integer.parseInt']
2,send (.*) using (.*),"['h', 'format']",['java'],['java.lang.Thread.currentThread']
3,send (.*) using (.*),"['an', 'email']",['sendmail'],"['java.lang.Runtime.getRuntime', 'java.util.logging.Logger.getLogger']"
4,send (.*) using (.*),['request'],"['https', 'protocol']",['javax.xml.ws.Service.create']
5,send (.*) using (.*),"['the', 'results']",['eclipse'],['java.lang.Double.parseDouble']
6,send (.*) using (.*),['keys'],['directinput'],['java.lang.Thread.sleep']
7,send (.*) using (.*),['mail'],['yahoo'],['java.lang.System.getProperties']
8,send (.*) using (.*),"['button', 'when']",['tabs'],['java.lang.Class.forName']
0,empty (.*) in (.*),['element'],"['xml', 'jaxb']",['javax.xml.bind.JAXBContext.newInstance']
1,empty (.*) in (.*),['arraylists'],"['spring', 'configuration']",['java.util.Collections.emptyList']
2,empty (.*) in (.*),['columns'],"['apache', 'poi']",['java.lang.Math.max']
3,empty (.*) in (.*),['string'],['jtextbox'],"['javax.swing.SwingUtilities.invokeLater', 'java.lang.Double.parseDouble']"
4,empty (.*) in (.*),['enumeration'],['java'],['java.util.Collections.enumeration']
5,empty (.*) in (.*),['list'],"['conditional', 'expression']",['java.util.Collections.emptyList']
6,empty (.*) in (.*),['space'],"['java', 'android']",['java.lang.String.split']
7,empty (.*) in (.*),['strings'],"['document', 'listener']",['java.lang.Double.parseDouble']
8,empty (.*) in (.*),['values'],"['some', 'rows']",['java.lang.Math.min']
9,empty (.*) in (.*),['character'],"['string', 'java']",['java.util.regex.Pattern.quote']
10,empty (.*) in (.*),"['recycler', 'view']",['fragment'],['java.lang.Integer.parseInt']
0,sort (.*) for (.*),"['in', 'java']",['tuples'],"['java.util.Arrays.asList', 'java.util.Collections.sort']"
1,sort (.*) for (.*),['criteria'],"['java', 'class']",['java.lang.Integer.compare']
2,sort (.*) for (.*),"['the', 'arrays']","['larger', 'numbers']",['java.lang.Math.min']
3,sort (.*) for (.*),"['it', 'out']",['me'],['java.lang.String.valueOf']
0,save (.*) from (.*),"['a', 'file']","['jersey', 'response']",['java.nio.file.Files.copy']
1,save (.*) from (.*),"['the', 'file']","['https', 'url']","['java.io.File.createTempFile', 'javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory', 'javax.net.ssl.SSLContext.getInstance', 'java.nio.file.Files.copy']"
2,save (.*) from (.*),"['a', 'rectangle']","['an', 'image']",['javax.imageio.ImageIO.write']
3,save (.*) from (.*),"['an', 'image']","['a', 'jpanel']",['javax.imageio.ImageIO.write']
4,save (.*) from (.*),['image'],"['drawing', 'panel']","['javax.imageio.ImageIO.write', 'java.util.logging.Logger.getLogger']"
5,save (.*) from (.*),['string'],"['public', 'method']",['java.lang.String.valueOf']
6,save (.*) from (.*),"['external', 'data']","['java', 'application']",['java.lang.System.getProperty']
0,call (.*) to (.*),['binds'],['runtime'],['java.lang.Class.forName']
0,close (.*) with (.*),"['a', 'jdialog']","['java', 'code']","['java.lang.Thread.sleep', 'java.awt.EventQueue.invokeLater', 'java.lang.System.exit']"
1,close (.*) with (.*),"['command', 'windows']",['java'],['java.lang.Runtime.exec']
2,close (.*) with (.*),['program'],"['running', 'threads']",['java.lang.System.exit']
3,close (.*) with (.*),"['a', 'jtabbedpane']","['jinternalframe', 'inside']",['javax.swing.SwingUtilities.getWindowAncestor']
4,close (.*) with (.*),['program'],"['joption', 'pane']","['javax.swing.JOptionPane.showOptionDialog', 'java.lang.System.exit']"
5,close (.*) with (.*),"['the', 'program']",['x'],"['javax.swing.JOptionPane.showConfirmDialog', 'java.lang.System.exit']"
6,close (.*) with (.*),"['derby', 'connection']",['entitymanagerfactory'],['java.sql.DriverManager.getConnection']
0,move (.*) to (.*),"['hashmap', 'data']",['database'],"['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
1,move (.*) to (.*),['button'],"['exact', 'location']","['javax.imageio.ImageIO.read', 'java.awt.EventQueue.invokeLater']"
2,move (.*) to (.*),['application'],"['startup', 'folder']","['java.nio.file.Paths.get', 'java.lang.System.getProperty', 'java.nio.file.Files.move']"
3,move (.*) to (.*),['nodes'],"['the', 'right']","['javax.swing.UIManager.getIcon', 'java.awt.EventQueue.invokeLater']"
4,move (.*) to (.*),['on'],"['next', 'methods']",['java.lang.Integer.toString']
5,move (.*) to (.*),['scrollpane'],['top'],['javax.swing.SwingUtilities.invokeLater']
6,move (.*) to (.*),"['screen', 'pointer']","['search', 'text']","['java.awt.Toolkit.getDefaultToolkit', 'javax.swing.SwingUtilities.invokeLater', 'java.lang.String.valueOf']"
0,layout (.*) in (.*),['manager'],['spring'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
1,layout (.*) in (.*),"['one', 'component']","['multiple', 'cards']",['java.awt.Container.addImpl']
0,filter (.*) in (.*),"['with', 'nio']",['java'],"['java.nio.file.Files.isDirectory', 'java.nio.file.Files.newDirectoryStream']"
1,filter (.*) in (.*),"['to', 'image']",['swing'],['java.awt.Toolkit.getDefaultToolkit']
2,filter (.*) in (.*),['arraylist'],"['java', 'android']",['java.lang.String.split']
3,filter (.*) in (.*),"['unwanted', 'characters']","['a', 'string']",['java.util.regex.Pattern.matches']
4,filter (.*) in (.*),['input'],"['real', 'time']",['java.lang.Double.parseDouble']
5,filter (.*) in (.*),['chain'],['swing'],"['javax.swing.SwingUtilities.invokeLater', 'java.lang.Class.forName', 'java.util.concurrent.locks.LockSupport.parkNanos', 'java.lang.System.currentTimeMillis', 'java.util.concurrent.Executors.newSingleThreadScheduledExecutor', 'java.lang.Thread.currentThread', 'java.lang.System.setProperty']"
6,filter (.*) in (.*),['only'],"['some', 'environments']",['java.lang.Boolean.parseBoolean']
7,filter (.*) in (.*),"['and', 'map']",['java'],['java.util.Arrays.copyOf']
8,filter (.*) in (.*),"['and', 'set']","['one', 'stream']",['java.util.Arrays.asList']
9,filter (.*) in (.*),"['snapshot', 'results']",['firebase'],['java.util.Collections.sort']
10,filter (.*) in (.*),"['an', 'object']",['baseadapter'],['java.util.Locale.getDefault']
0,insert (.*) in (.*),['hyperlink'],['jpanel'],"['java.util.regex.Pattern.compile', 'java.awt.Desktop.getDesktop']"
1,insert (.*) in (.*),"['line', 'break']",['parameters'],['java.net.URLEncoder.encode']
2,insert (.*) in (.*),['layer'],"['oracle', 'database']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
3,insert (.*) in (.*),"['dom', 'element']","['sort', 'order']",['java.lang.Math.floor']
4,insert (.*) in (.*),"['delete', 'update']","['bulk', 'operation']",['java.util.regex.Pattern.compile']
5,insert (.*) in (.*),"['an', 'element']","['an', 'array']",['java.lang.System.arraycopy']
6,insert (.*) in (.*),['timestamp'],['utc'],"['java.time.ZonedDateTime.now', 'java.sql.Timestamp.valueOf']"
7,insert (.*) in (.*),['date'],"['mysql', 'query']","['java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern', 'java.time.format.DateTimeFormatter.parse']"
8,insert (.*) in (.*),"['blank', 'line']","['these', 'positions']",['java.util.Arrays.toString']
9,insert (.*) in (.*),"['automatic', 'number']","['a', 'column']",['java.util.UUID.randomUUID']
10,insert (.*) in (.*),"['one', 'line']",['applet'],['javax.swing.JOptionPane.showMessageDialog']
0,play (.*) in (.*),['sounds'],"['java', 'games']","['javax.sound.sampled.AudioSystem.getAudioInputStream', 'javax.sound.sampled.AudioSystem.getClip']"
1,play (.*) in (.*),"['wav', 'file']",['linux'],"['javax.sound.sampled.AudioSystem.getLine', 'javax.sound.sampled.AudioSystem.getAudioInputStream', 'javax.sound.sampled.AudioSystem.getMixer', 'javax.sound.sampled.AudioSystem.getClip']"
2,play (.*) in (.*),['framework'],['java'],['java.util.logging.Logger.info']
3,play (.*) in (.*),['app'],['cloudbees'],['java.sql.DriverManager.getConnection']
0,cast (.*) in (.*),"['a', 'stream']",['java'],['java.util.stream.Stream.of']
1,cast (.*) in (.*),"['any', 'dynamically']",['scala'],['java.lang.Class.forName']
2,cast (.*) in (.*),['exception'],"['android', 'kitkat']",['java.util.Arrays.copyOf']
0,collect (.*) from (.*),['pairs'],"['a', 'stream']","['java.util.stream.Collectors.collectingAndThen', 'java.util.Arrays.asList', 'java.util.stream.Stream.of', 'java.util.stream.StreamSupport.stream', 'java.util.Objects.requireNonNull']"
1,collect (.*) from (.*),['results'],"['parallel', 'stream']",['java.util.stream.StreamSupport.stream']
2,collect (.*) from (.*),"['certain', 'elements']",['stream'],"['java.util.stream.Stream.of', 'java.util.stream.Collector.of']"
3,collect (.*) from (.*),['values'],['reflection'],['java.util.Arrays.stream']
4,collect (.*) from (.*),['ids'],['parent'],"['java.util.stream.Collectors.counting', 'java.util.stream.Collectors.mapping']"
0,validate (.*) with (.*),"['marshalled', 'xml']",['jaxb'],['javax.xml.validation.SchemaFactory.newInstance']
1,validate (.*) with (.*),"['hashed', 'password']",['salt'],['java.lang.String.valueOf']
2,validate (.*) with (.*),['xml'],"['xsd', 'inside']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.validation.SchemaFactory.newInstance']"
0,log (.*) for (.*),['j'],['logging'],"['java.util.ServiceLoader.load', 'java.util.logging.Logger.getLogger']"
1,log (.*) for (.*),['j'],"['multiple', 'classes']",['java.util.logging.LogManager.getLogger']
2,log (.*) for (.*),['base'],"['a', 'float']",['java.lang.Float.floatToIntBits']
3,log (.*) for (.*),"['j', 'configuration']",['tests'],['java.util.logging.Logger.getLogger']
0,test (.*) of (.*),"['all', 'combinations']","['bad', 'parameters']",['java.util.Arrays.asList']
1,test (.*) of (.*),['usage'],['findelement'],['java.lang.Thread.sleep']
2,test (.*) of (.*),"['certain', 'amount']",['time'],['java.lang.System.nanoTime']
3,test (.*) of (.*),['outside'],"['springs', 'framework']",['java.lang.Class.getResourceAsStream']
4,test (.*) of (.*),"['step', 'time']",['execution'],['javax.xml.soap.SOAPConnectionFactory.newInstance']
5,test (.*) of (.*),"['thread', 'safety']",['resttemplate'],['java.util.concurrent.Executors.newFixedThreadPool']
0,write (.*) using (.*),['number'],['fileoutputstream'],['java.io.FileOutputStream.write']
1,write (.*) using (.*),"['a', 'file']","['relative', 'path']","['java.nio.file.Paths.get', 'java.lang.System.getProperty']"
2,write (.*) using (.*),"['this', 'method']","['lambda', 'expressions']",['java.util.Arrays.sort']
0,return (.*) to (.*),"['from', 'c']",['java'],"['java.lang.System.loadLibrary', 'java.nio.ByteBuffer.wrap']"
1,return (.*) to (.*),['something'],"['main', 'thread']","['java.util.concurrent.Executors.newFixedThreadPool', 'java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
2,return (.*) to (.*),['value'],['header'],['java.time.LocalDate.now']
3,return (.*) to (.*),['value'],['serializable'],['java.util.Comparator.comparing']
4,return (.*) to (.*),['value'],['list'],['java.util.stream.Collector.of']
5,return (.*) to (.*),['type'],"['a', 'method']",['java.lang.Class.forName']
6,return (.*) to (.*),['control'],"['an', 'applet']","['java.lang.Thread.sleep', 'java.awt.EventQueue.invokeAndWait']"
7,return (.*) to (.*),['back'],['zero'],"['java.lang.Math.max', 'java.lang.Math.min']"
8,return (.*) to (.*),"['words', 'changed']","['upper', 'case']","['java.util.Arrays.stream', 'java.lang.Character.toUpperCase']"
9,return (.*) to (.*),['time'],"['another', 'class']","['java.lang.Integer.parseInt', 'java.util.Calendar.getInstance']"
10,return (.*) to (.*),"['array', 'conforming']",['rules'],['java.util.Collections.sort']
0,request (.*) to (.*),"['convert', 'string']","['byte', 'array']",['java.lang.String.getBytes']
1,request (.*) to (.*),['getparametervalues'],"['int', 'array']",['java.util.Arrays.toString']
2,request (.*) to (.*),['content'],['java'],['java.net.URLDecoder.decode']
3,request (.*) to (.*),"['for', 'datetime']","['sql', 'server']","['java.text.DateFormat.getDateTimeInstance', 'java.util.Calendar.getInstance']"
4,request (.*) to (.*),"['from', 'html']",['servlet'],['java.util.Arrays.asList']
0,implement (.*) of (.*),"['the', 'sum']","['subsets', 'problem']",['java.util.Arrays.sort']
1,implement (.*) of (.*),"['fifo', 'queue']",['threads'],['java.util.concurrent.Executors.newFixedThreadPool']
2,implement (.*) of (.*),"['near', 'matches']",['strings'],['java.lang.Math.max']
3,implement (.*) of (.*),['focuslistener'],['jdatepicker'],"['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
4,implement (.*) of (.*),"['a', 'deck']",['cards'],['java.util.Collections.shuffle']
5,implement (.*) of (.*),"['discretionary', 'use']",['scanner'],['java.lang.Integer.parseInt']
0,print (.*) using (.*),"['d', 'array']",['java'],"['java.util.Arrays.stream', 'java.util.stream.Stream.of']"
1,print (.*) using (.*),['abc'],['threads'],['java.lang.Thread.sleep']
2,print (.*) using (.*),['anything'],['pdfbox'],"['java.awt.print.PrinterJob.getPrinterJob', 'java.awt.print.PrinterJob.lookupPrintServices']"
3,print (.*) using (.*),"['screen', 'button']","['selenium', 'webdriver']",['javax.imageio.ImageIO.write']
4,print (.*) using (.*),['pattern'],['java'],"['java.lang.Integer.toString', 'java.lang.String.format']"
5,print (.*) using (.*),"['the', 'outliers']",['java'],['java.lang.Math.pow']
6,print (.*) using (.*),"['each', 'key']","['from', 'keyset']",['java.lang.String.valueOf']
0,return (.*) on (.*),"['hibernate', 'entity']","['update', 'query']",['java.lang.String.format']
1,return (.*) on (.*),"['class', 'based']","['enum', 'input']",['java.util.Arrays.toString']
2,return (.*) on (.*),['value'],"['specified', 'column']","['java.awt.Toolkit.getDefaultToolkit', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
3,return (.*) on (.*),"['enum', 'based']",['value'],['java.util.EnumSet.allOf']
4,return (.*) on (.*),"['type', 'based']","['class', 'field']",['java.lang.Double.valueOf']
5,return (.*) on (.*),"['value', 'based']","['current', 'month']",['java.time.LocalDateTime.now']
6,return (.*) on (.*),['value'],"['each', 'execution']",['java.util.concurrent.ThreadLocalRandom.current']
0,list (.*) using (.*),"['of', 'string']",['comparator'],"['java.util.Arrays.asList', 'java.util.Collections.sort', 'java.lang.Integer.valueOf']"
1,list (.*) using (.*),"['of', 'maps']","['java', 'streams']",['java.util.Arrays.asList']
2,list (.*) using (.*),"['in', 'java']",['criteria'],['java.util.Collections.sort']
3,list (.*) using (.*),"['by', 'predicate']",['java'],"['java.util.Arrays.asList', 'java.util.stream.Collectors.groupingBy', 'java.lang.Character.toLowerCase']"
4,list (.*) using (.*),['by'],['jsonpath'],"['java.nio.file.Files.readAllBytes', 'java.nio.charset.Charset.defaultCharset']"
5,list (.*) using (.*),"['of', 'objects']","['flex', 'json']",['java.util.Arrays.asList']
6,list (.*) using (.*),['string'],"['collections', 'sort']","['java.util.Collections.sort', 'javax.naming.Name.compareTo']"
7,list (.*) using (.*),"['of', 'integers']",['java'],"['java.lang.System.currentTimeMillis', 'java.lang.System.gc']"
8,list (.*) using (.*),['by'],['java'],['java.util.stream.IntStream.range']
9,list (.*) using (.*),"['of', 'integers']","['lambda', 'expressions']",['java.util.stream.IntStream.range']
10,list (.*) using (.*),"['of', 'objects']","['string', 'date']",['java.util.Collections.sort']
11,list (.*) using (.*),['object'],"['arrays', 'aslist']","['java.util.Arrays.asList', 'java.util.Collections.singletonList']"
12,list (.*) using (.*),['without'],['sets'],['java.lang.System.arraycopy']
13,list (.*) using (.*),"['of', 'integers']",['reflection'],['java.util.Collections.checkedList']
14,list (.*) using (.*),"['of', 'words']",['streams'],['java.util.stream.Stream.of']
15,list (.*) using (.*),"['or', 'not']","['google', 'guava']",['java.util.Arrays.asList']
16,list (.*) using (.*),['while'],"['copy', 'constructor']","['java.util.Arrays.copyOf', 'java.lang.System.arraycopy', 'java.lang.Math.min']"
17,list (.*) using (.*),"['of', 'patterns']","['pattern', 'compile']",['java.util.regex.Pattern.compile']
18,list (.*) using (.*),"['of', 'string']","['rxjava', 'testobserver']",['java.util.Arrays.equals']
19,list (.*) using (.*),"['of', 'node']",['xpath'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
20,list (.*) using (.*),['without'],"['replace', 'method']",['java.lang.String.join']
21,list (.*) using (.*),"['of', 'object']",['java'],['java.util.Arrays.asList']
22,list (.*) using (.*),"['of', 'list']",['streams'],['java.util.stream.IntStream.range']
23,list (.*) using (.*),['webelement'],"['selenium', 'webdriver']",['java.lang.System.setProperty']
24,list (.*) using (.*),"['of', 'words']","['a', 'hashmap']","['java.util.Collections.sort', 'java.util.Arrays.sort']"
25,list (.*) using (.*),['item'],"['a', 'cursoradapter']","['java.lang.Integer.toString', 'java.lang.Integer.parseInt']"
26,list (.*) using (.*),"['into', 'database']","['entitymanager', 'hibernate']",['java.lang.Integer.parseInt']
27,list (.*) using (.*),['car'],['java'],['java.util.Objects.equals']
28,list (.*) using (.*),"['of', 'files']",['lastindexof'],['java.util.regex.Pattern.compile']
29,list (.*) using (.*),"['of', 'arrays']",['java'],['java.util.Arrays.asList']
30,list (.*) using (.*),"['of', 'string']",['regex'],['java.util.regex.Pattern.compile']
31,list (.*) using (.*),['integer'],"['lambda', 'expression']",['java.lang.Integer.compare']
32,list (.*) using (.*),"['of', 'strings']",['java'],"['java.util.stream.Collectors.counting', 'java.util.Arrays.stream', 'java.util.function.Function.identity']"
33,list (.*) using (.*),['elements'],['classes'],['java.util.Collections.frequency']
34,list (.*) using (.*),['characters'],"['java', 'pattern']",['java.util.regex.Pattern.compile']
35,list (.*) using (.*),"['of', 'digits']",['regex'],"['java.util.regex.Matcher.group', 'java.util.Arrays.asList', 'java.util.regex.Pattern.compile']"
36,list (.*) using (.*),"['with', 'filter']","['java', 'streams']",['java.util.stream.Collectors.mapping']
37,list (.*) using (.*),"['of', 'strings']",['streams'],['java.nio.file.Files.lines']
38,list (.*) using (.*),['while'],['webdriver'],['java.lang.Thread.sleep']
39,list (.*) using (.*),"['of', 'objects']",['jackson'],['java.util.Arrays.asList']
40,list (.*) using (.*),"['from', 'object']","['stream', 'api']",['java.util.stream.Stream.empty']
41,list (.*) using (.*),"['of', 'multiples']",['stream'],['java.util.stream.IntStream.iterate']
42,list (.*) using (.*),"['in', 'array']",['java'],['java.util.Arrays.asList']
43,list (.*) using (.*),['without'],['loop'],['java.util.Arrays.asList']
44,list (.*) using (.*),"['to', 'string']","['stream', 'java']",['java.util.Arrays.asList']
45,list (.*) using (.*),"['item', 'while']",['streams'],['java.util.Optional.ofNullable']
0,select (.*) in (.*),['list'],['jsp'],['java.util.Arrays.asList']
1,select (.*) in (.*),"['an', 'entry']","['my', 'combobox']","['javax.swing.SwingUtilities.invokeLater', 'java.lang.Double.parseDouble', 'java.lang.System.exit', 'java.lang.String.format']"
2,select (.*) in (.*),"['multiple', 'cells']","['a', 'jtable']",['java.lang.Integer.valueOf']
3,select (.*) in (.*),"['all', 'item']","['the', 'menu']","['java.util.Arrays.stream', 'java.awt.EventQueue.invokeLater', 'java.util.stream.Stream.concat']"
4,select (.*) in (.*),['statements'],['jdbc'],"['java.lang.Class.forName', 'javax.swing.JOptionPane.showMessageDialog']"
0,make (.*) from (.*),"['imageio', 'read']","['inputstream', 'java']",['javax.imageio.ImageIO.read']
1,make (.*) from (.*),"['a', 'stream']","['a', 'directorystream']",['java.util.stream.StreamSupport.stream']
2,make (.*) from (.*),"['a', 'promise']","['vertx', 'executeblocking']","['java.util.concurrent.ThreadLocalRandom.current', 'java.lang.System.currentTimeMillis']"
3,make (.*) from (.*),"['json', 'object']",['database'],['java.util.Arrays.asList']
4,make (.*) from (.*),"['file', 'downloadable']","['bin', 'folder']",['java.lang.System.getProperty']
5,make (.*) from (.*),"['gc', 'settime']","['gregoriancalendar', 'fixed']","['java.util.GregorianCalendar.from', 'java.time.LocalDate.parse', 'java.time.LocalDate.of']"
6,make (.*) from (.*),"['timer', 'count']",['date'],"['java.lang.System.currentTimeMillis', 'java.lang.String.format']"
7,make (.*) from (.*),"['an', 'object']",['these'],['java.util.stream.IntStream.range']
0,compile (.*) with (.*),"['error', 'messages']",['javacompiler'],['javax.tools.ToolProvider.getSystemJavaCompiler']
1,compile (.*) with (.*),"['different', 'patterns']",['string'],['java.util.regex.Pattern.compile']
2,compile (.*) with (.*),"['java', 'class']",['jci'],['java.lang.System.getProperty']
0,map (.*) by (.*),['value'],"['integer', 'key']",['java.lang.System.getProperty']
1,map (.*) by (.*),['elements'],['value'],['java.util.Collections.synchronizedSortedMap']
2,map (.*) by (.*),"['elements', 'returned']","['collectors', 'groupingby']",['java.util.stream.Collectors.groupingBy']
3,map (.*) by (.*),"['string', 'string']","['string', 'prefix']",['java.lang.Integer.parseInt']
4,map (.*) by (.*),['dates'],"['their', 'week']",['java.time.temporal.WeekFields.of']
5,map (.*) by (.*),['interface'],['value'],['java.util.Comparator.reversed']
0,query (.*) using (.*),"['in', 'java']","['regular', 'expression']",['java.util.regex.Pattern.compile']
1,query (.*) using (.*),['when'],['hibernate'],['java.util.Calendar.getInstance']
2,query (.*) using (.*),"['in', 'mysql']",['metadata'],['java.lang.String.format']
3,query (.*) using (.*),['json'],"['json', 'exists']",['java.lang.String.format']
4,query (.*) using (.*),"['result', 'memcahed']",['java'],['java.lang.System.exit']
5,query (.*) using (.*),"['in', 'elasticsearch']",['java'],['java.net.InetAddress.getByName']
6,query (.*) using (.*),"['database', 'correctly']",['jdbc'],['java.lang.Integer.parseInt']
0,store (.*) into (.*),['arraylist'],"['an', 'array']",['java.util.Collection.toArray']
1,store (.*) into (.*),['it'],"['hashmap', 'java']",['java.util.regex.Pattern.compile']
2,store (.*) into (.*),['string'],"['int', 'array']",['java.lang.Integer.parseInt']
3,store (.*) into (.*),"['using', 'java']","['sslcontext', 'object']","['java.security.cert.CertificateFactory.getInstance', 'javax.net.ssl.TrustManagerFactory.getInstance', 'javax.net.ssl.SSLContext.getInstance', 'java.security.KeyStore.getInstance']"
0,put (.*) in (.*),"['double', 'number']","['bigdecimal', 'variable']",['java.math.BigDecimal.valueOf']
1,put (.*) in (.*),['date'],['hashcode'],['java.lang.System.currentTimeMillis']
2,put (.*) in (.*),"['a', 'gif']",['joptionpane'],['javax.swing.JOptionPane.showMessageDialog']
3,put (.*) in (.*),"['drive', 'letter']","['file', 'path']","['java.lang.System.getenv', 'java.lang.System.getProperty']"
4,put (.*) in (.*),"['random', 'number']","['txt', 'file']",['java.lang.Math.floor']
5,put (.*) in (.*),['it'],['table'],['java.lang.Character.toString']
6,put (.*) in (.*),"['a', 'thread']","['blocked', 'state']","['java.lang.Thread.sleep', 'java.lang.Thread.currentThread']"
7,put (.*) in (.*),"['if', 'greater']","['map', 'method']",['java.lang.Long.valueOf']
8,put (.*) in (.*),"['a', 'jcheckbox']","['a', 'gui']",['javax.swing.SwingUtilities.invokeLater']
9,put (.*) in (.*),"['db', 'value']","['jlist', 'dynamicly']","['java.lang.Class.forName', 'java.sql.DriverManager.getConnection']"
10,put (.*) in (.*),['them'],"['a', 'queue']",['java.util.logging.Logger.getLogger']
11,put (.*) in (.*),['text'],['selenium'],['java.lang.Thread.sleep']
12,put (.*) in (.*),['this'],"['jframe', 'form']",['java.lang.Double.parseDouble']
13,put (.*) in (.*),"['every', 'image']","['ms', 'word']",['javax.swing.JOptionPane.showMessageDialog']
14,put (.*) in (.*),"['a', 'completablefuture']","['a', 'loop']","['java.util.concurrent.CompletableFuture.allOf', 'java.util.concurrent.CompletableFuture.anyOf']"
15,put (.*) in (.*),"['timer', 'code']","['my', 'file']","['java.awt.EventQueue.invokeLater', 'java.util.Calendar.getInstance', 'javax.swing.UIManager.setLookAndFeel']"
16,put (.*) in (.*),"['the', 'information']","['another', 'one']",['java.util.logging.Logger.getLogger']
17,put (.*) in (.*),"['an', 'argument']","['a', 'regex']","['java.util.Arrays.fill', 'java.util.regex.Pattern.compile']"
18,put (.*) in (.*),['it'],"['other', 'element']","['java.lang.Thread.sleep', 'java.lang.System.setProperty']"
19,put (.*) in (.*),"['my', 'sign']",[],['java.lang.Integer.parseInt']
20,put (.*) in (.*),['data'],['map'],['java.util.Collections.emptyMap']
21,put (.*) in (.*),"['byte', 'variable']",['file'],['javax.imageio.ImageIO.read']
22,put (.*) in (.*),['months'],"['each', 'array']",['java.text.DateFormatSymbols.getMonths']
23,put (.*) in (.*),['jpanel'],['jscrollpane'],['javax.swing.SwingUtilities.invokeLater']
0,convert (.*) in (.*),['casing'],"['a', 'string']","['java.util.regex.Pattern.compile', 'java.lang.String.toUpperCase']"
1,convert (.*) in (.*),"['date', 'format']",['android'],['java.lang.Integer.parseInt']
2,convert (.*) in (.*),"['to', 'mhz']","['java', 'android']",['java.lang.Integer.parseInt']
3,convert (.*) in (.*),"['dutch', 'amount']",['english'],['java.text.NumberFormat.getInstance']
4,convert (.*) in (.*),"['string', 'value']","['to', 'integer']",['java.lang.Float.parseFloat']
5,convert (.*) in (.*),"['hashmap', 'program']",['lambda'],['java.util.stream.Collectors.mapping']
6,convert (.*) in (.*),['row'],['partition'],"['java.util.Arrays.asList', 'java.util.stream.StreamSupport.stream']"
7,convert (.*) in (.*),"['to', 'jsonobject']",['spark'],['java.util.stream.StreamSupport.stream']
8,convert (.*) in (.*),['string'],['int'],['java.lang.Integer.parseInt']
9,convert (.*) in (.*),"['to', 'char']",['operator'],['java.lang.Integer.toString']
0,read (.*) by (.*),"['input', 'character']",['character'],['java.nio.charset.Charset.defaultCharset']
1,read (.*) by (.*),"['text', 'file']",['chunks'],"['java.util.concurrent.Executors.newFixedThreadPool', 'java.lang.Runtime.getRuntime']"
2,read (.*) by (.*),"['from', 'jtextfield']","['clicking', 'button']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.UIManager.put']"
3,read (.*) by (.*),['properly'],['saxparser'],['javax.xml.transform.TransformerFactory.newInstance']
4,read (.*) by (.*),['image'],['url'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.write', 'java.util.Base64.getEncoder']"
0,handle (.*) using (.*),"['calendar', 'timezones']",['java'],['java.text.DateFormat.getDateTimeInstance']
1,handle (.*) using (.*),['input'],['streamgobbler'],['java.lang.Runtime.getRuntime']
2,handle (.*) using (.*),"['nullable', 'lists']",['java'],['java.util.Optional.ofNullable']
0,match (.*) using (.*),"['multiline', 'text']","['regular', 'expression']",['java.util.regex.Pattern.compile']
1,match (.*) using (.*),"['path', 'string']",['glob'],"['java.nio.file.Paths.get', 'java.nio.file.FileSystem.getPathMatcher']"
2,match (.*) using (.*),['string'],['regex'],['java.util.regex.Pattern.compile']
3,match (.*) using (.*),"['text', 'lines']",['regex'],['java.util.regex.Pattern.compile']
0,play (.*) with (.*),"['wav', 'files']",['java'],"['javax.sound.sampled.AudioSystem.getAudioInputStream', 'java.lang.System.exit']"
1,play (.*) with (.*),['ws'],['ssl'],"['javax.net.ssl.SSLContext.getInstance', 'javax.net.ssl.KeyManagerFactory.getInstance', 'java.security.KeyStore.getInstance']"
0,set (.*) at (.*),['timezone'],['runtime'],"['java.util.TimeZone.getTimeZone', 'java.util.TimeZone.setDefault', 'java.util.TimeZone.getAvailableIDs']"
1,set (.*) at (.*),['for'],"['most', 'objects']","['java.util.Arrays.asList', 'java.util.Collections.emptyList']"
0,calculate (.*) using (.*),"['standard', 'deviation']",['java'],['java.lang.Math.pow']
1,calculate (.*) using (.*),"['current', 'age']",['java'],['java.util.Calendar.getInstance']
0,run (.*) for (.*),['code'],"['x', 'seconds']","['java.lang.Thread.sleep', 'java.lang.System.currentTimeMillis']"
1,run (.*) for (.*),"['java', 'function']","['only', 'minutes']",['java.lang.System.exit']
2,run (.*) for (.*),"['a', 'function']","['each', 'java']",['java.util.Collection.stream']
3,run (.*) for (.*),['in'],['loop'],['java.lang.Thread.sleep']
4,run (.*) for (.*),"['a', 'thread']","['one', 'hour']",['java.lang.System.currentTimeMillis']
5,run (.*) for (.*),"['simple', 'junit']","['restful', 'webservices']",['java.util.Arrays.asList']
0,parse (.*) for (.*),['xml'],['cdata'],['javax.xml.parsers.DocumentBuilderFactory.newInstance']
1,parse (.*) for (.*),"['the', 'xml']","['a', 'value']","['javax.xml.xpath.XPathFactory.newInstance', 'javax.xml.parsers.DocumentBuilderFactory.newInstance']"
2,parse (.*) for (.*),"['is', 'applicable']","['argument', 'types']",['java.util.Date.parse']
3,parse (.*) for (.*),"['a', 'string']","['a', 'set']",['java.util.Arrays.asList']
4,parse (.*) for (.*),['xml'],"['specific', 'element']",['javax.xml.xpath.XPathFactory.newInstance']
5,parse (.*) for (.*),['help'],"['dollar', 'amounts']",['java.text.NumberFormat.getCurrencyInstance']
6,parse (.*) for (.*),"['date', 'correctly']","['and', 'est']","['java.time.ZoneId.of', 'java.time.LocalDate.of']"
7,parse (.*) for (.*),"['through', 'string']","['known', 'section']",['java.util.regex.Pattern.compile']
8,parse (.*) for (.*),['error'],"['milliseconds', 'part']","['java.time.LocalDateTime.parse', 'java.time.format.DateTimeFormatter.ofPattern']"
9,parse (.*) for (.*),['offsettime'],"['format', 'hhmmssz']","['java.time.LocalTime.parse', 'java.time.OffsetTime.parse']"
0,extract (.*) of (.*),"['fractional', 'digits']","['double', 'bigdecimal']","['java.lang.Double.parseDouble', 'java.lang.Integer.parseInt']"
1,extract (.*) of (.*),['part'],"['this', 'image']",['javax.imageio.ImageIO.read']
2,extract (.*) of (.*),['values'],"['ping', 'message']",['java.lang.Integer.parseInt']
3,extract (.*) of (.*),['attributes'],"['an', 'string']","['java.util.regex.Pattern.compile', 'java.lang.String.join']"
4,extract (.*) of (.*),['part'],"['a', 'work']",['java.util.regex.Pattern.compile']
5,extract (.*) of (.*),"['data', 'out']","['a', 'string']",['java.lang.Integer.parseInt']
6,extract (.*) of (.*),['starting'],"['a', 'string']","['java.nio.file.Files.newBufferedReader', 'java.nio.file.Paths.get', 'java.util.regex.Pattern.compile']"
0,start (.*) from (.*),"['of', 'day']",['zoneddatetime'],"['java.time.ZoneId.of', 'java.time.ZonedDateTime.of']"
1,start (.*) from (.*),"['windows', 'service']",['java'],['java.lang.Runtime.getRuntime']
2,start (.*) from (.*),['openvpn'],"['java', 'application']",['java.lang.Runtime.getRuntime']
3,start (.*) from (.*),"['rserve', 'automatically']",['java'],"['java.lang.Runtime.getRuntime', 'java.lang.System.exit']"
4,start (.*) from (.*),"['and', 'stop']",['button'],['java.lang.Thread.sleep']
5,start (.*) from (.*),"['the', 'constructor']","['my', 'class']",['java.lang.System.setProperty']
0,group (.*) using (.*),"['near', 'index']",['regex'],['java.util.regex.Pattern.compile']
1,group (.*) using (.*),"['this', 'hashmap']",['streams'],['java.util.stream.Collectors.mapping']
2,group (.*) using (.*),"['of', 'words']","['reg', 'ex']",['java.util.regex.Pattern.compile']
3,group (.*) using (.*),['objects'],"['stream', 'collector']",['java.util.stream.Collector.of']
0,control (.*) in (.*),['focus'],['jtable'],['java.lang.String.valueOf']
1,control (.*) in (.*),"['over', 'jaxbcontext']","['jax', 'ws']","['javax.xml.transform.TransformerFactory.newInstance', 'javax.xml.bind.JAXBContext.newInstance']"
2,control (.*) in (.*),['characters'],"['xml', 'cdata']",['java.util.regex.Pattern.compile']
3,control (.*) in (.*),"['word', 'with']","['text', 'java']",['java.util.regex.Pattern.compile']
4,control (.*) in (.*),['characters'],['jtextarea'],"['java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment', 'java.awt.Font.createFont']"
5,control (.*) in (.*),"['allow', 'headers']","['preflight', 'response']",['java.util.Arrays.asList']
0,close (.*) on (.*),"['rmiregistry', 'running']","['particular', 'port']","['java.rmi.registry.LocateRegistry.createRegistry', 'java.lang.management.ManagementFactory.getPlatformMBeanServer', 'java.rmi.server.UnicastRemoteObject.unexportObject', 'javax.management.remote.JMXConnectorServerFactory.newJMXConnectorServer']"
1,close (.*) on (.*),['when'],"['joptionpane', 'showmessagedialog']","['java.lang.System.exit', 'javax.swing.JOptionPane.showConfirmDialog', 'javax.swing.JOptionPane.showMessageDialog']"
2,close (.*) on (.*),['stream'],['exception'],['java.io.OutputStream.close']
3,close (.*) on (.*),"['minimize', 'buttons']",['jframe'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.UIManager.getCrossPlatformLookAndFeelClassName', 'javax.swing.UIManager.getSystemLookAndFeelClassName', 'javax.swing.JFrame.setDefaultLookAndFeelDecorated', 'javax.swing.UIManager.setLookAndFeel']"
4,close (.*) on (.*),['applet'],"['button', 'click']",['java.lang.System.exit']
5,close (.*) on (.*),['operation'],"['papplet', 'processing']","['javax.swing.JOptionPane.showOptionDialog', 'java.lang.System.exit']"
6,close (.*) on (.*),"['http', 'streaming']","['wrong', 'response']",['java.io.InputStream.close']
7,close (.*) on (.*),['window'],['event'],"['javax.swing.SwingUtilities.invokeLater', 'javax.swing.SwingUtilities.getWindowAncestor']"
0,extract (.*) in (.*),"['number', 'decimal']",['bigdecimal'],['java.math.BigDecimal.valueOf']
1,extract (.*) in (.*),"['a', 'number']","['a', 'string']",['java.lang.Integer.parseInt']
2,extract (.*) in (.*),['pincode'],['address'],['java.util.regex.Pattern.compile']
3,extract (.*) in (.*),"['consecutive', 'words']","['a', 'sentance']",['java.util.regex.Pattern.compile']
4,extract (.*) in (.*),['number'],['range'],['java.util.regex.Pattern.compile']
5,extract (.*) in (.*),['numbers'],['brackets'],['java.util.regex.Pattern.compile']
0,write (.*) with (.*),"['txt', 'file']","['special', 'characters']",['java.util.regex.Pattern.compile']
1,write (.*) with (.*),['instanceof'],['java'],['java.util.Optional.ofNullable']
2,write (.*) with (.*),"['in', 'asyncstorage']",['java'],['java.util.Collections.emptyList']
3,write (.*) with (.*),"['into', 'bigquery']","['schema', 'autodetect']",['java.lang.Integer.parseInt']
4,write (.*) with (.*),['operation'],"['java', 'nio']","['java.nio.file.Paths.get', 'java.nio.file.Files.getFileStore', 'java.util.regex.Pattern.compile', 'java.nio.file.Files.createFile']"
5,write (.*) with (.*),['png'],['imageio'],"['javax.imageio.ImageIO.read', 'javax.imageio.ImageIO.getImageWritersByFormatName']"
6,write (.*) with (.*),"['to', 'pdf']",['color'],['java.nio.charset.Charset.forName']
7,write (.*) with (.*),['channel'],"['blocking', 'queue']","['java.nio.ByteBuffer.allocate', 'java.lang.Thread.sleep', 'java.nio.channels.ServerSocketChannel.open', 'java.nio.channels.Selector.open']"
8,write (.*) with (.*),"['unit', 'tests']",['parameters'],['java.util.Arrays.asList']
9,write (.*) with (.*),['this'],['streams'],['java.util.stream.IntStream.range']
0,map (.*) using (.*),"['with', 'indexes']","['stream', 'java']",['java.util.stream.IntStream.range']
1,map (.*) using (.*),['thumbnails'],['openstreetmap'],['java.lang.Math.cos']
2,map (.*) using (.*),['string'],['regex'],['java.util.regex.Pattern.compile']
3,map (.*) using (.*),['keys'],"['java', 'lambda']",['java.util.stream.Stream.of']
4,map (.*) using (.*),['while'],"['collectors', 'groupingby']",['java.util.stream.Collectors.collectingAndThen']
5,map (.*) using (.*),"['integer', 'string']",['streams'],['java.util.stream.IntStream.range']
6,map (.*) using (.*),"['of', 'map']",['collectors'],['java.util.stream.Collectors.groupingBy']
7,map (.*) using (.*),['put'],['generics'],['java.util.Optional.ofNullable']
8,map (.*) using (.*),"['int', 'int']","['java', 'streams']","['java.util.Arrays.asList', 'java.util.stream.Collectors.groupingBy', 'java.util.stream.Collectors.mapping', 'java.util.stream.Collectors.toList']"
9,map (.*) using (.*),['when'],['executors'],['java.util.concurrent.Executors.newSingleThreadScheduledExecutor']
0,iterate (.*) in (.*),"['an', 'enumeration']",['java'],['java.util.Collections.list']
1,iterate (.*) in (.*),"['through', 'objects']",['hashmap'],['javax.management.Attribute.toString']
2,iterate (.*) in (.*),['priorityblockingqueue'],['order'],['java.util.Arrays.sort']
3,iterate (.*) in (.*),['files'],"['symbolic', 'link']",['java.nio.file.Files.walkFileTree']
4,iterate (.*) in (.*),['it'],"['documentum', 'code']",['java.lang.System.getProperty']
5,iterate (.*) in (.*),"['between', 'dates']",['jsp'],['java.util.Calendar.getInstance']
0,capture (.*) in (.*),"['multiple', 'groups']",['regex'],['java.util.regex.Pattern.compile']
1,capture (.*) in (.*),['exception'],"['swing', 'thread']","['java.lang.System.setProperty', 'java.lang.Thread.setDefaultUncaughtExceptionHandler']"
2,capture (.*) in (.*),"['live', 'streaming']",['applet'],['javax.swing.SwingUtilities.invokeAndWait']
3,capture (.*) in (.*),['groups'],"['java', 'regex']",['java.util.regex.Pattern.compile']
4,capture (.*) in (.*),['logs'],"['a', 'test']",['java.util.logging.Logger.getLogger']
0,issue (.*) using (.*),"['parsing', 'xml']","['sax', 'parser']",['javax.xml.parsers.SAXParserFactory.newInstance']
1,issue (.*) using (.*),"['with', 'set']",['aliastobeanresulttransformer'],['java.util.Arrays.asList']
2,issue (.*) using (.*),"['with', 'deserialization']",['simplexml'],"['java.lang.System.currentTimeMillis', 'java.util.regex.Pattern.compile']"
0,show (.*) on (.*),['jdialog'],"['windows', 'taskbar']",['java.util.Arrays.asList']
1,show (.*) on (.*),"['hide', 'button']","['mouse', 'over']","['javax.swing.SwingUtilities.invokeLater', 'javax.swing.JOptionPane.showMessageDialog']"
2,show (.*) on (.*),['up'],['mouseover'],"['javax.imageio.ImageIO.read', 'java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
3,show (.*) on (.*),"['strike', 'line']",['methods'],"['java.util.Calendar.get', 'java.util.Calendar.getInstance']"
4,show (.*) on (.*),"['all', 'objects']",['java'],['java.util.Arrays.toString']
5,show (.*) on (.*),['dataset'],"['graph', 'mpandroidchart']",['java.util.Calendar.getInstance']
6,show (.*) on (.*),"['through', 'panels']",['top'],"['javax.swing.BorderFactory.createMatteBorder', 'javax.swing.BorderFactory.createLoweredBevelBorder', 'javax.swing.BorderFactory.createTitledBorder', 'javax.swing.BorderFactory.createCompoundBorder', 'javax.swing.BorderFactory.createRaisedBevelBorder']"
7,show (.*) on (.*),['up'],"['the', 'panel']","['java.awt.EventQueue.invokeLater', 'javax.swing.UIManager.setLookAndFeel']"
8,show (.*) on (.*),"['the', 'date']","['a', 'textfield']",['java.text.DateFormat.getDateInstance']
9,show (.*) on (.*),"['the', 'data']",['jtable'],"['java.net.InetAddress.getLocalHost', 'java.awt.EventQueue.invokeLater', 'java.net.NetworkInterface.getByInetAddress']"
0,delete (.*) with (.*),"['multiple', 'rows']",['jdbctemplate'],['java.util.Collections.singletonMap']
1,delete (.*) with (.*),"['my', 'emails']","['google', 'script']",['java.util.logging.Logger.log']
2,delete (.*) with (.*),['confirmation'],['jtextfield'],['javax.swing.JOptionPane.showInputDialog']
0,change (.*) at (.*),['colors'],"['paint', 'graph']",['javax.swing.SwingUtilities.invokeLater']
1,change (.*) at (.*),"['system', 'property']",['runtime'],"['javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory', 'javax.net.ssl.TrustManagerFactory.getInstance', 'javax.net.ssl.SSLContext.getInstance', 'java.security.KeyStore.getInstance']"
2,change (.*) at (.*),['language'],['runtime'],['java.util.Locale.setDefault']
3,change (.*) at (.*),"['value', 'programatically']",['runtime'],['java.util.Collections.unmodifiableList']
0,map (.*) in (.*),"['to', 'list']",['java'],['java.util.Comparator.comparing']
1,map (.*) in (.*),['values'],"['collectors', 'groupingby']","['java.util.stream.Collectors.groupingBy', 'java.util.stream.Collectors.mapping', 'java.util.stream.Collectors.toSet']"
2,map (.*) in (.*),"['and', 'filter']","['one', 'go']","['java.nio.file.Files.lines', 'java.util.stream.Stream.of', 'java.util.stream.Stream.empty']"
3,map (.*) in (.*),"['through', 'reflection']","['unit', 'test']",['java.lang.reflect.Field.get']
4,map (.*) in (.*),['api'],"['json', 'format']",['java.lang.Double.parseDouble']
5,map (.*) in (.*),['arguments'],['constructor'],['java.util.Arrays.asList']
6,map (.*) in (.*),['entry'],['java'],['java.util.Collections.reverseOrder']
7,map (.*) in (.*),"['k', 'v']",['java'],['java.util.Arrays.stream']
8,map (.*) in (.*),['string'],"['ascending', 'order']","['java.util.Collections.sort', 'java.lang.Integer.valueOf']"
9,map (.*) in (.*),"['string', 'list']","['java', 'stream']",['java.util.stream.Stream.of']
10,map (.*) in (.*),['function'],['java'],['java.util.Arrays.asList']
11,map (.*) in (.*),[],['java'],"['java.util.stream.Collectors.toMap', 'java.lang.String.format']"
12,map (.*) in (.*),"['across', 'node']",['hazelcast'],['java.lang.Long.parseLong']
13,map (.*) in (.*),"['as', 'value']",['concurrenthashmap'],['java.util.Collections.unmodifiableMap']
14,map (.*) in (.*),"['integer', 'string']",['java'],['java.util.stream.IntStream.range']
15,map (.*) in (.*),[''],"['the', 'map']",['java.lang.Integer.toString']
16,map (.*) in (.*),"['by', 'calendar']","['string', 'type']","['java.time.LocalDate.parse', 'java.util.Calendar.getInstance']"
17,map (.*) in (.*),"['from', 'haskell']",['java'],['java.util.Arrays.asList']
18,map (.*) in (.*),"['java', 'streams']",['categories'],['java.util.stream.Collectors.mapping']
19,map (.*) in (.*),[''],['map'],"['java.lang.Math.max', 'java.lang.Math.min']"
20,map (.*) in (.*),['class'],"['jpa', 'hibernate']",['java.lang.Class.forName']
21,map (.*) in (.*),['reduce'],"['functional', 'interface']",['java.util.Arrays.stream']
22,map (.*) in (.*),"['and', 'apply']","['java', 'stream']",['java.util.stream.Collectors.collectingAndThen']
23,map (.*) in (.*),"['using', 'streams']",['java'],['java.nio.file.Paths.get']
24,map (.*) in (.*),['usable'],"['for', 'loop']",['java.util.Collections.unmodifiableMap']
25,map (.*) in (.*),['keys'],"['main', 'string']","['java.util.regex.Matcher.quoteReplacement', 'java.util.regex.Pattern.compile']"
26,map (.*) in (.*),['map'],"['java', 'streams']",['java.util.stream.Stream.of']
27,map (.*) in (.*),['size'],"['a', 'variable']",['java.util.HashMap.size']
28,map (.*) in (.*),"['and', 'groupby']","['one', 'go']","['java.util.stream.Collectors.toList', 'java.util.stream.Collectors.mapping']"
29,map (.*) in (.*),"['game', 'field']","['mysql', 'workbench']",['java.util.Objects.hash']
